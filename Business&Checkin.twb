<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Elite Year Parameter' datatype='string' name='[Elite Year Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <column caption='Stars' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
        <calculation class='tableau' formula='4' />
        <range max='4' min='1' />
      </column>
    </datasource>
    <datasource caption='YELPER+ (C##CS347_JAB5948)' inline='true' name='oracle.41914.707405555600' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS].[BUSINESS_ID]'>
              </expression>
              <expression op='[CHECKIN].[BUSINESS_ID]'>
              </expression>
            </expression>
          </clause>
          <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
          <relation name='CHECKIN' table='[C##CS347_JAB5948].[CHECKIN]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[BUSINESS_ID (CHECKIN)]' value='[CHECKIN].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CHECKIN_ID]' value='[CHECKIN].[CHECKIN_ID]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHECKIN_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CHECKIN_ID]</local-name>
            <parent-name>[CHECKIN]</parent-name>
            <remote-alias>CHECKIN_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (CHECKIN)]</local-name>
            <parent-name>[CHECKIN]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Checkin)' datatype='real' name='[BUSINESS_ID (CHECKIN)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column caption='Checkin Id' datatype='real' name='[CHECKIN_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Stars (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[STARS]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
      </column>
      <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='STATE, CITY'>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.41914.707405555600].[avg:STARS:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.41914.707405555600].[sum:REVIEW_COUNT:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Stars' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4'>
          <calculation class='tableau' formula='4' />
          <range max='4' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='BUSINESS+ (C##CS347_JAB5948)' inline='true' name='oracle.41918.842183125000' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
              <expression op='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[BUSINESS].[BUSINESS_ID]'>
                </expression>
                <expression op='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[BUSINESS_CATEGORY].[CATEGORY_ID]'>
                  </expression>
                  <expression op='[CATEGORY].[CATEGORY_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[BUSINESS].[BUSINESS_ID]'>
                    </expression>
                    <expression op='[BUSINESS_CATEGORY].[BUSINESS_ID]'>
                    </expression>
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]'>
                      </expression>
                      <expression op='[ATTRIBUTE].[ATTRIBUTE_ID]'>
                      </expression>
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[BUSINESS].[BUSINESS_ID]'>
                        </expression>
                        <expression op='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]'>
                        </expression>
                      </expression>
                    </clause>
                    <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
                    <relation name='ATTRIBUTE_BUSINESS' table='[C##CS347_JAB5948].[ATTRIBUTE_BUSINESS]' type='table' />
                  </relation>
                  <relation name='ATTRIBUTE' table='[C##CS347_JAB5948].[ATTRIBUTE]' type='table' />
                </relation>
                <relation name='BUSINESS_CATEGORY' table='[C##CS347_JAB5948].[BUSINESS_CATEGORY]' type='table' />
              </relation>
              <relation name='CATEGORY' table='[C##CS347_JAB5948].[CATEGORY]' type='table' />
            </relation>
            <relation name='BUSINESS_NEIGHBORHOOD' table='[C##CS347_JAB5948].[BUSINESS_NEIGHBORHOOD]' type='table' />
          </relation>
          <relation name='NEIGHBORHOOD' table='[C##CS347_JAB5948].[NEIGHBORHOOD]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[ATTRIBUTE_ID (ATTRIBUTE)]' value='[ATTRIBUTE].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_ID]' value='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_NAME]' value='[ATTRIBUTE].[ATTRIBUTE_NAME]' />
          <map key='[ATTRIBUTE_VALUE]' value='[ATTRIBUTE].[ATTRIBUTE_VALUE]' />
          <map key='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' value='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_CATEGORY)]' value='[BUSINESS_CATEGORY].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' value='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CATEGORY_ID (CATEGORY)]' value='[CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_ID]' value='[BUSINESS_CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_NAME]' value='[CATEGORY].[CATEGORY_NAME]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_ID]' value='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_NAME]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_NAME]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (ATTRIBUTE_BUSINESS)]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID (ATTRIBUTE)]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_NAME]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_VALUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_VALUE]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_VALUE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_CATEGORY)]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID (CATEGORY)]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY_NAME]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_NAME</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID (NEIGHBORHOOD)]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NEIGHBORHOOD_NAME]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_NAME</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Attribute Id (Attribute)' datatype='real' name='[ATTRIBUTE_ID (ATTRIBUTE)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Attribute Id' datatype='real' name='[ATTRIBUTE_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Attribute Name' datatype='string' name='[ATTRIBUTE_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Attribute Value' datatype='string' name='[ATTRIBUTE_VALUE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Attribute Business)' datatype='real' name='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Category)' datatype='real' name='[BUSINESS_ID (BUSINESS_CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Neighborhood)' datatype='real' name='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Category Id (Category)' datatype='real' name='[CATEGORY_ID (CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Category Id' datatype='real' name='[CATEGORY_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id (Neighborhood)' datatype='real' name='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id' datatype='real' name='[NEIGHBORHOOD_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[ATTRIBUTE_NAME]' derivation='None' name='[none:ATTRIBUTE_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='STATE, CITY'>
          <field>[STATE]</field>
          <field>[CITY]</field>
          <field>[NEIGHBORHOOD_NAME]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ATTRIBUTE_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Coat Check&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Good For latenight&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Open 24 Hours&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Accepts Credit Cards&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Delivery&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hair Types Specialized In africanamerican&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Outdoor Seating&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ambience casual&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dietary Restrictions kosher&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hair Types Specialized In extensions&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Parking valet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;By Appointment Only&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Good For dinner&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Music live&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Takes Reservations&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ambience touristy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Good For breakfast&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Music background_music&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Payment Types visa&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ambience intimate&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dogs Allowed&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Happy Hour&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Payment Types discover&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Ambience classy&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Dietary Restrictions soy-free&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hair Types Specialized In kids&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Parking validated&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Corkage&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Good For lunch&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Order at Counter&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Accepts Insurance&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Dietary Restrictions dairy-free&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hair Types Specialized In asian&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Parking garage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;BYOB/Corkage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Good For Kids&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Music video&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Wheelchair Accessible&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ambience trendy&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Good For brunch&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Music dj&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Price Range&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ambience romantic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Drive-Thru&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Has TV&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Payment Types mastercard&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;BYOB&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Good For Groups&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Music playlist&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Waiter Service&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ambience divey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dietary Restrictions vegan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hair Types Specialized In perms&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Payment Types amex&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Caters&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Good for Kids&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Noise Level&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Wi-Fi&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ambience upscale&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Good For Dancing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Music jukebox&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Smoking&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Attire&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Good For dessert&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Music karaoke&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Take-out&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ages Allowed&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dietary Restrictions gluten-free&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hair Types Specialized In coloring&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Parking lot&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ambience hipster&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dietary Restrictions vegetarian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hair Types Specialized In straightperms&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Payment Types cash_only&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Alcohol&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dietary Restrictions halal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hair Types Specialized In curly&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Parking street&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;EDH&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;XGL&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;NTH&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MLN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='YELPER+ (C##CS347_JAB5948) (2)' inline='true' name='oracle.41918.885422395800' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ELITE_YEAR_YELPER].[ELITE_YEAR_ID]'>
              </expression>
              <expression op='[ELITE_YEAR].[ELITE_YEAR_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[YELPER].[YELPER_ID]'>
                </expression>
                <expression op='[ELITE_YEAR_YELPER].[YELPER_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[YELPER].[YELPER_ID]'>
                  </expression>
                  <expression op='[REVIEW].[YELPER_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation name='YELPER' table='[C##CS347_JAB5948].[YELPER]' type='table' />
              <relation name='REVIEW' table='[C##CS347_JAB5948].[REVIEW]' type='table' />
            </relation>
            <relation name='ELITE_YEAR_YELPER' table='[C##CS347_JAB5948].[ELITE_YEAR_YELPER]' type='table' />
          </relation>
          <relation name='ELITE_YEAR' table='[C##CS347_JAB5948].[ELITE_YEAR]' type='table' />
        </relation>
        <cols>
          <map key='[AVERAGE_STARS]' value='[YELPER].[AVERAGE_STARS]' />
          <map key='[BUSINESS_ID]' value='[REVIEW].[BUSINESS_ID]' />
          <map key='[ELITE_YEAR]' value='[ELITE_YEAR].[ELITE_YEAR]' />
          <map key='[ELITE_YEAR_ID (ELITE_YEAR)]' value='[ELITE_YEAR].[ELITE_YEAR_ID]' />
          <map key='[ELITE_YEAR_ID]' value='[ELITE_YEAR_YELPER].[ELITE_YEAR_ID]' />
          <map key='[FANS]' value='[YELPER].[FANS]' />
          <map key='[REVIEW_COUNT]' value='[YELPER].[REVIEW_COUNT]' />
          <map key='[REVIEW_DATE]' value='[REVIEW].[REVIEW_DATE]' />
          <map key='[REVIEW_ID]' value='[REVIEW].[REVIEW_ID]' />
          <map key='[STARS]' value='[REVIEW].[STARS]' />
          <map key='[TEXT]' value='[REVIEW].[TEXT]' />
          <map key='[YELPER_ID (ELITE_YEAR_YELPER)]' value='[ELITE_YEAR_YELPER].[YELPER_ID]' />
          <map key='[YELPER_ID (REVIEW)]' value='[REVIEW].[YELPER_ID]' />
          <map key='[YELPER_ID]' value='[YELPER].[YELPER_ID]' />
          <map key='[YELPER_ID_STR]' value='[YELPER].[YELPER_ID_STR]' />
          <map key='[YELPER_NAME]' value='[YELPER].[YELPER_NAME]' />
          <map key='[YELPING_SINCE]' value='[YELPER].[YELPING_SINCE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YELPER_ID_STR]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YELPER_NAME]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_STARS]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>AVERAGE_STARS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>17</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPING_SINCE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[YELPING_SINCE]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPING_SINCE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FANS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[FANS]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>FANS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_ID]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>REVIEW_ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID (REVIEW)]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEXT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TEXT]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>TEXT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[REVIEW_DATE]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>REVIEW_DATE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ELITE_YEAR_ID]</local-name>
            <parent-name>[ELITE_YEAR_YELPER]</parent-name>
            <remote-alias>ELITE_YEAR_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID (ELITE_YEAR_YELPER)]</local-name>
            <parent-name>[ELITE_YEAR_YELPER]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ELITE_YEAR_ID (ELITE_YEAR)]</local-name>
            <parent-name>[ELITE_YEAR]</parent-name>
            <remote-alias>ELITE_YEAR_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ELITE_YEAR]</local-name>
            <parent-name>[ELITE_YEAR]</parent-name>
            <remote-alias>ELITE_YEAR</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Stars' datatype='real' name='[AVERAGE_STARS]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Elite Year' datatype='string' name='[ELITE_YEAR]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Elite Year Id (Elite Year)' datatype='real' name='[ELITE_YEAR_ID (ELITE_YEAR)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Elite Year Id' datatype='real' name='[ELITE_YEAR_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Fans' datatype='real' name='[FANS]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Review Date' datatype='datetime' name='[REVIEW_DATE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Review Id' datatype='real' name='[REVIEW_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='Text' datatype='string' name='[TEXT]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Yelper Id (Elite Year Yelper)' datatype='real' name='[YELPER_ID (ELITE_YEAR_YELPER)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Yelper Id (Review)' datatype='real' name='[YELPER_ID (REVIEW)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Yelper Id' datatype='real' name='[YELPER_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Yelper Id Str' datatype='string' name='[YELPER_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Yelper Name' datatype='string' name='[YELPER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Yelping Since' datatype='datetime' name='[YELPING_SINCE]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crosstab and Heirarchies'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS+ (C##CS347_JAB5948)' name='oracle.41918.842183125000' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.842183125000'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[NEIGHBORHOOD_NAME]' derivation='None' name='[none:NEIGHBORHOOD_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STARS]' derivation='Sum' name='[sum:STARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:CITY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Ahwatukee&quot;' function='range' level='[none:CITY:nk]' to='&quot;Buckeye&quot;' />
              <groupfilter from='&quot;Cambridge&quot;' function='range' level='[none:CITY:nk]' to='&quot;El Mirage&quot;' />
              <groupfilter from='&quot;Fitchburg&quot;' function='range' level='[none:CITY:nk]' to='&quot;Goodyear&quot;' />
              <groupfilter from='&quot;Guadalupe&quot;' function='range' level='[none:CITY:nk]' to='&quot;Las Vegas&quot;' />
              <groupfilter from='&quot;Lasswade&quot;' function='range' level='[none:CITY:nk]' to='&quot;Musselburgh&quot;' />
              <groupfilter from='&quot;NELLIS AFB&quot;' function='range' level='[none:CITY:nk]' to='&quot;Newington&quot;' />
              <groupfilter from='&quot;North Queensferry&quot;' function='range' level='[none:CITY:nk]' to='&quot;Old Town&quot;' />
              <groupfilter from='&quot;Paradise Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;South Gyle&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;South Queensferry&quot;' />
              <groupfilter from='&quot;St Clements&quot;' function='range' level='[none:CITY:nk]' to='&quot;Straiton&quot;' />
              <groupfilter from='&quot;Summerlin South&quot;' function='range' level='[none:CITY:nk]' to='&quot;Sun Prairie&quot;' />
              <groupfilter from='&quot;Sunrise Manor&quot;' function='range' level='[none:CITY:nk]' to='&quot;Victoria Park&quot;' />
              <groupfilter from='&quot;W Spring Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;chandler&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:STATE:nk]'>
            <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41918.842183125000].[none:CITY:nk]</column>
            <column>[oracle.41918.842183125000].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41918.842183125000].[sum:STARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#c0bdc5</color>
                <color>#b6b1c0</color>
                <color>#ada6bb</color>
                <color>#a49ab7</color>
                <color>#9b8fb2</color>
                <color>#9285ad</color>
                <color>#8a7ba9</color>
                <color>#8271a4</color>
                <color>#7a689f</color>
                <color>#735f9b</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41918.842183125000].[sum:STARS:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41918.842183125000].[none:STATE:nk] / ([oracle.41918.842183125000].[none:CITY:nk] / [oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]))</rows>
        <cols>[oracle.41918.842183125000].[sum:REVIEW_COUNT:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41914.707405555600' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.707405555600'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Stars (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[STARS]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[STARS]' derivation='Count' name='[cnt:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.707405555600].[none:CITY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Boulder City&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Edinburgh&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Phoenix&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.707405555600].[none:CITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.41914.707405555600].[cnt:STARS:qk]</rows>
        <cols>[oracle.41914.707405555600].[Stars (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41914.707405555600' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.707405555600'>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column datatype='integer' name='[Stars (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[STARS]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.707405555600].[none:STATE:nk]'>
            <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41914.707405555600].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41914.707405555600].[sum:REVIEW_COUNT:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41914.707405555600].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[oracle.41914.707405555600].[avg:STARS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.41914.707405555600].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[oracle.41914.707405555600].[sum:REVIEW_COUNT:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41914.707405555600].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41914.707405555600].[avg:STARS:qk] + [oracle.41914.707405555600].[sum:REVIEW_COUNT:qk])</rows>
        <cols>([oracle.41914.707405555600].[Stars (bin)] / [oracle.41914.707405555600].[none:STATE:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41914.707405555600' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41914.707405555600'>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STARS]' derivation='Sum' name='[sum:STARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41914.707405555600].[avg:LONGITUDE:qk]' field-type='quantitative' max='-12780295.84218247' min='-12841269.786336765' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.41914.707405555600].[avg:LATITUDE:qk]' field-type='quantitative' max='4346755.044759226' min='4290970.372447852' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41914.707405555600].[sum:STARS:qk]' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.41914.707405555600].[sum:STARS:qk]' />
              <lod column='[oracle.41914.707405555600].[none:BUSINESS_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.707405555600].[avg:LATITUDE:qk]</rows>
        <cols>[oracle.41914.707405555600].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41914.707405555600' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.707405555600'>
            <column caption='Checkin Id' datatype='real' name='[CHECKIN_ID]' role='dimension' type='ordinal'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHECKIN_ID]' derivation='Count' name='[cnt:CHECKIN_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.707405555600].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;EDH&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;WI&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.707405555600].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41914.707405555600].[avg:STARS:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.41914.707405555600].[cnt:CHECKIN_ID:qk]</rows>
        <cols>[oracle.41914.707405555600].[none:STATE:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='711' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS+ (C##CS347_JAB5948)' name='oracle.41918.842183125000' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.842183125000'>
            <column caption='Attribute Name' datatype='string' name='[ATTRIBUTE_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ATTRIBUTE_NAME]' derivation='None' name='[none:ATTRIBUTE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ATTRIBUTE_NAME:nk]' member='&quot;Ambience hipster&quot;' />
              <groupfilter function='member' level='[none:ATTRIBUTE_NAME:nk]' member='&quot;Take-out&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
        </panes>
        <rows>[oracle.41918.842183125000].[avg:STARS:qk]</rows>
        <cols>([oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk] / [oracle.41918.842183125000].[none:BUSINESS_NAME:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='34875' id='1' name='Sheet 1' show-title='true' w='23800' x='71300' y='11125'>
        </zone>
        <zone h='60000' id='10' name='Sheet 3' show-title='true' w='64300' x='5000' y='6250'>
        </zone>
        <zone h='6250' id='11' name='Sheet 3' pane-specification-id='0' param='[oracle.41914.707405555600].[sum:STARS:qk]' type='color' w='14000' x='53100' y='27500'>
        </zone>
        <zone h='14375' id='12' name='Sheet 3' pane-specification-id='0' param='[oracle.41914.707405555600].[avg:STARS:qk]' type='size' w='14000' x='55200' y='11125'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.707405555600].[none:CITY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[oracle.41914.707405555600].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.707405555600].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.707405555600].[none:CITY:nk]</field>
          <field>[oracle.41914.707405555600].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.707405555600].[sum:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.707405555600].[none:BUSINESS_NAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <zones>
        <zone name='Sheet 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3' pane-specification-id='0' param='[oracle.41914.707405555600].[sum:STARS:qk]' type='color' />
        <zone name='Sheet 3' pane-specification-id='0' param='[oracle.41914.707405555600].[avg:STARS:qk]' type='size' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.707405555600].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.707405555600].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.707405555600].[avg:STARS:qk]</field>
          <field>[oracle.41914.707405555600].[none:CHECKIN_ID:ok]</field>
          <field>[oracle.41914.707405555600].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstab and Heirarchies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41918.842183125000].[sum:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' values='relevant' />
            <card param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.842183125000].[none:CATEGORY_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:CITY:nk]</field>
          <field>[oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Elite Year Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
          <field>[oracle.41918.885422395800].[none:ELITE_YEAR:nk]</field>
          <field>[oracle.41918.885422395800].[none:TEXT:nk]</field>
          <field>[oracle.41918.885422395800].[none:YELPER_ID (ELITE_YEAR_YELPER):qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='213'>
            <card param='[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='169'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nNS9d3Rc13no+9unTG/AoFeCAEkQ7JRYJFGNsqplWZbc5FTHJcWJ7eSue2+u
      k9yV5iTv3ZXkJc9Jbopj5zpxjy0XyVazJaqQokSKvRMA0TsGGAymnXP2+2Mw4MHBmQFIy5be
      t5aE4Tm7fHvvr+9v7yMuXLooVVXlzQIhBLqqASClRAhxTXWllKsqa2+7WEcIgRAC0zRRFOUa
      MV+Kg2VZqKqKZVkoioKUclk/dlzt735SKI5NSrnY92pxtyzLFQ/nWpRam2tZs5yRX1W5tzNo
      qqqiez1vWoOKEPh07+IkWpa1SDBOcFtYN6J2Epe9ntuirrSIzraL5e3tO/F3w9Gt3yLRFsFZ
      396HcxzOd25MXCRw5zvnmOx92uusNHfO9p3zs0Qg5H5yZn+rQftpNWxfhNVIFPtE2ye/OOHl
      iKi4qHZJ7STqcvg52ypK/iIudoKUUmKa5pK6dmJ0SmFFUUpKZeczy7IW+1kNI5dry+25k7Gd
      dVajcaSUWFJiGBaq0LAwV62h3o7wpjOAJSWGZSItiaIIQCBNE+wEDCAEgqUS3k5sduZxk7jF
      d0Vzx0mQ5YjHSRBForUTgJvZUyxfNBnt78sxnZPIyuHp/O0krnKmXbn+7XgWn62GuezzA6Cq
      KifO9/N3X3mOimiQT//SvUSCHiT//2SCn4oGyBn5wkSbS58XCb/4W1VUvPpS88u+ME4TxV7G
      aSY4F38lE6ho4xfBjbBK2cxOM6KUb+BGdOX6WK20d2Pulfynlez91eIhJXz3+eOcOHcFhKBr
      w1o+eM9W8qYBksLCSsDGEouPfmogEMIhWLGtne3/xTEUh/hTM4FWWkzJcmlkty+Lz90W2+5X
      XK/6VVV1Rce1nC3uZAinRHW27WTa68XbqZWcUJzDldq41j6vaitob2tEffkUqDqxihgeTUdX
      NXe8hChQHCswqRBIm78kkQgWygs7OS/3K+3zv+qxLfT3U2OAawE3h3c19q8zCuMk1lJtlJJ2
      pSIl5cyHUhPufL/ahSnXXjkGWk0/TuZxCzisBh7Zv414VRwLwf6tjSUd64XGy78v9u9cKwlC
      WRCA4Ers9javZf1tFRGXe7rlmxkFuhZQhbLMBCoHzklYiVhKLbBbvZVMJvtf5yQ7+y21EKZp
      LqsPoFgWynA/hCKYsUpXDej86+b7rEajOXFdzRyshoDtJmWp+S7lyzlhJdzezPW/vmD5mwxF
      B9RNMtsdMLd3buaRHexSz1m/qEpXks7Ffko5mM7nzhCinSmKRLtYXkrUVw+g/sc/oX75n1Gn
      J5fh7aYV7YtZyrGVUmIYxrL3Kzna5cZvB7t/5hY2ddZ3axeWR6Sc4ywKDme9Uji54eisvyiM
      yo78ZwRForBPxBIuXYVNa1+I1Uo2J5O5Tda1gJ1QS5lTTimkAGJutmDj5jKQSS/DzW0MQgjM
      BZxdcQGOXR7kueM9jE3NrNrsux5warjVtufUqHZCt49rpY1a+3yvVrMV+3xb+ABFKKpRJwEV
      B1VqU61I9E4n2v6uCPaJsk+WG6HZ27yWRVUUBcMwlkl7N2K1hMDcvQ8UFRmvxqqtX4KHm/lR
      HINaBq/hRJq/eGGYqXmTR2Ylv7G/AgScGc9wZnyeXQ0hWiI6hmmgiKv7Ds7QrJt/5lyXUs9X
      M2duPla5ft6s9S8+f0sZoDiY4saSndNLqU1YvqEjpVwS1bGXcw7eqU3KLZKdSZxh03LlATTN
      fWrtZlexvBWLI+9+1xJ8nYwnpWRycpJ8Pk88HkfXdSxpIaRw1ZBzeclMRpI1JVM5gQSSWYtv
      nJpgKm0wMJPl126swTQMPJqGprinrxQjm9aCM2oXRPYx2+eq+J/bnLkRcbG9YtlSWs/ZRrHu
      atbfzX8TQry1DGBHajXSws28sT9zS0Gwq9eVNsjc8CuWvdbQopsjVkqCSVnYXVZV1dXGF0KQ
      y+WYnZ0tSC1No7q6GoXS89YW9/ORm1u4MjXPe7bXg5ToCoQ8KlNpg4hXQyBRFQVVUZfhujhu
      m69SyvZ2akq7JnFzgJ1rsNL629f3Wtbfjo+bdgPe4iiQouJbiAK5mQerseecJkK5yYLyuUn2
      9uwSxm3inFJwJSjFeHaJWo7JLMticHAQwzCorq4mEAwWxmnD00nAQohFCQ5gWhbJnGR4Lk9z
      REeReVRFQVNVBEsd2eK4im3Z9xfypuS5k8P0jM3xrhubaaz0I23vi3XciN9tTkr5Matdfzf7
      3830cWoveBv5APbJLhVJKAfOyXZTh8W/K5k99jrFRS21UHa/xQ2X1TBJOYYsgqIoNDU1LfaX
      zecKm08OvIt/DVNiSolPt0lFaeFXLToqNKS0sKTAkhZSKq7E67Sli3BxeJb/69snmZrLMjWX
      5b8/vBnNYVqsNGa3cte7/m6ay4343db+rfUBXJ7ZOdjOraUkd1E6FX+v2OcKZextOZmhlKSx
      110W5iwBbs7taqDYn0fTF9spSHoJKJwYSGJKydNH+hiYTPHxuzewtSVWqCsUEBJVUckbeZAF
      nE2swjsHbnYBYCcer67i1RSEgJBXQwC5fA4pwaPr1zSeUvNyPet/PSnwbxsNAMsJwZ5JWW5w
      zneWQx3b2y6nct3wcLPdnYRhJw57++UiKMX31+KPWLJAqPY5uSoxBf/nUD8Hh+dJpTKcOdmH
      ZUmqwj42NUVRBKiKsmAyCTKmgkcVqApI3KVjKZNtTXWAv/nIHoan09zYHkcRIDRtxXldCdz6
      dxM0TnBuOpZiXDf83lYMUMqMWY00XRa9KGGSrNReuYl2q2d/5hbFKDq4bindK41vNm0gBIR9
      xWVaHj0pOsWpjEHPSAK/xw/Cjz/gJZPJ0VYXQQibX6AoPHNugv/zaj9tlX5+ZW8TTZUBVKXQ
      bt4q5OCoYjljF/8qwPr6MOvrw1efI9xVOgXTq5AdvDpn100QloNSqd3296X6fVsxgB1W4vxS
      Ut7u7b9ZePwk7QkhXPc2oLSjDnB2cJY/+MpRVEXwJ4/tpKM2CLY2ivVUVeXccIKnD3cjs3n0
      dAZD87K9s5a18SCP7G6BhbIFe1/w3PlxeifnOXdxlOdf7eGRPS188p1dTKUNHj8+BKrKe7bU
      UelzTwJcCSzLKmSHArqqYVpmIfnRAm0Vpw8lYFmFxLvVrH8Rrmf931YM4Ob0rEYLlJoku2O9
      UntuEYmfxJZ1tlvunVufr12a4NLILFLC8d4p1teHl0dEFIWZuXmeuTDB/MQUV/I6A2+8QSTg
      4zO/9hAbWmsxLQuhqLYwpuDuzmoGJuc5PzrNTN7klfNjfOzuDXzv+aM8/sRBQrEwHZEHuH1D
      HQB5wyyYT8rKSYAApmWiaxp5w8CwTDRFxbTMFedTCMF0Ks93D/dwZS5PVUDjA7taiEf8Zeut
      tP7lGOJtxQB2sBOHG7HaQ5NuUYtS7bk9t/922oyr8RnK9VmEcuaTvY+iZLt1Yy0vnBlBFYLd
      66qWtWFJySvdCV44N8zaSo1hf5Sh06dIJxJkZhUOPHuYfwk2MZuX/PyuJh7cVlfEirvWx9nV
      EuMrL4Y4cGaE997URjZvcPD180xOJkgm55ifGEfZWM/Zy0N89clDtDZW8cEH9uL36iXHsziH
      FJROcT5NUQjHKqsQKD86OcSL3dME6muYyEheuTDKQ7valvlVbqHpUutUbv3etgwALO4QlyJc
      txi9cwOkGCUotWDFcsV6TufJflLsWsHe9kr+h52JpZT4/To1DZVE/BrxiG/JjieAYcG3jg9z
      tG+GPTUqe2p1DuDD1P2geXltJMdwRRaALxzs466uGvy2kGjEp/Lxd6znw/vXoauCsWQOpaqO
      WMUkNVURtqxrwjBMvvXMazz10gmCAS87u9awbUNzyfFa0iKXz2NJiaaqqIpSsP2FQs7MoQiB
      ppYnucqQFwwDYZkolkVlMFQy/OwMUxef29cfHPsijrbedgzglJrlTmrZk+hKEZhTopdKaXBG
      EorlihP3k5pDpTSJ0yRTVRWE4Aenxzg2kMCwYG9bJXd0VCypp6sKN7bEuDKZJu/1s2l9LbsH
      8vzouBeJwAwGKSYy1Ec86OpyU0sI8GqFcVeHPDxy5w5Otjdz+4YammsrkFLS0VpHLBKgvipG
      dUV4WRvOsUjAo6hk+voZtyxMCbP4aGuoxqOtLET2baxFGe4jd/FljECYjrp7l82j83c5a8Fe
      zk0Yvm0ZwDk4Z5lSRGl/7hZpWekcbhHKqVg3fEr15/ztZEh7+UWbVQg2VymsuSlGIitpq/Qu
      G68i4P076mk3prnyymu85unk/m3VmLJwzuKjd7Zz6OwQSUvw6J416OpVO9i5a1zs856N1ezf
      UEWRToUQPHzXTrZ3thANB6iJRxYdaqEoTKdNfJrAp14VVooQWP39DH/x35A/9yGEpjExM0vf
      jMm7dzavaE7qQrJ7+gLR5HmyaS+jkzcgKq9qgVKRQvuzcutvD0jA25ABnJGdIriF5Ipg52y3
      d1B6g8tevxxjOW30cmVWkkhO3EAwnMgwl86zpiaENA1kLk1zVKfBkuiOw9WLvkomg3j6CWpv
      2I1Z4WNuNomQeU73zOCtmuKjOzZiNbYAcGl8nq8eGaStKsD7d9QjnL5OKkX2hedA09Hu2A9e
      HwAeXWP9mrqrnRed9ME5vn5qgqhX49d21xH3FebE5/GSSafJnzxF3/AcSX+YA31ZuirBsCTq
      CopUKAr+5mbkcA9E46ihEF89MkhAkdy9qX7JzrZ9Dsutf1GjF/9tz1NSP/XpT/2hqr15F2Nd
      CyhCWRYWKxf1KUV05Qi3VP1SjLJS3+WYsJQTvRIew4kMn/z8Ib5xsJdY0ENbXZT/PD5KSIPR
      lEVVZYxYwLNMCBiZDCmfh8q1jcRCHhQBz5yZYk5qoKv4p0apXdsMqsbnDvTy9LlxTgzOcuu6
      KuJBz1Xpryhkn/kBs5/7f8i+9iqejnWoza3L5nlRcwjBof45uqezZA2Lrpogcf/VRD41FkMP
      R+g5do4R4WeNMs+ZoSTrmuIFG78MWJbkXN5DT6CWqttv58vnZvnC15/l4IHDIGBHZ8uS7YbV
      rr/TMij+fltpACfxuL0vgttg7M6sEEtviCtngxeJoJxaLfVv5zs3vOxgj18X348k5ukZS2KY
      ktP9CR7Z28r6xiq+d2GcXa0VNFYEl40ZAJ8ftSq+iO/obI7KkJfatVWcV3WOjkzywME+Hr5p
      LdUhDwpQGfQQ8+vLTlmh6aBqCFUBzT01erF/4OaWCNMZg7hfpzXmWTq3uk7FQw+yI/YyGyJB
      RCjEzrPniZ95jWR4H08eH6Y64uP2rtrFDbgiHLk4zO/95VfI5/N8+IMaP740R3Z0GGHmeeKF
      4zx69y4qgleTNxXLAkUgbZJeVVX6ZvNcmEizuTZAbUBDiOUaWoi3OB16NWA3JewEXq58KaIt
      xQRQPpEKyqfsltIKbuCMUABsbIrx87e1Mzyd5n03rUEA79pcw90bqvDpykKujUnv0BRISUdz
      FYpaiFhlk/P4oiFyhuSN8+Pcv7uTaeHlO4d6uHRxlFMXRxmey9CXVanyqTzUGSce1BdteSgw
      pfeO/URDIYSmoe/chSUlfdNZ8qZFW9yPpiyd14awzkdvWDCNpLWwcWXzdYCZaA1KJoHmN6lK
      z1Ddc4z/dzzAPxwex6MpfPE3b2VTc3TJ/PSOTJGcnQPgxMVBEgkvpi+CJ59izfo2LJtvZp4+
      SfIL/4xa30D4E58Crw8hBBlT8h/HxxiZy3NmfJ7f2F2PhrtZ+rZjgJVClqs5lGK/xMnpaLpJ
      NTeGsZs0bwaUM438usInH9iIaUk82oKzKiU+rXAdSN6S/NsLl7iQLpgfj87n2dvViEQwqQZo
      0TV0FVrWN1JbHePO2iDjfaNcvghSKBxLQLTCT32Tl8O9U7y3K4Y3GlkiES3dg+eW2xZxOj+a
      4o+evEAmb/Lp/Wu5o6Ny8d2VsSQ/PHCC9HSCWysEm2+7EU919ZJxpTN5zMpqnnhhmHdlT1E3
      2Y3w+1E1deGWB1CU5et85452Tt65i2QqzaP7d3Dxu2fJRZuJVvq5bd9WKvw6YoGYRw+/zkys
      hti5s/gvXUTbvLWwflKgLbRd+Lt0B/1txQBum01uUt5p660UbbEfjne27xbZsT+3l19t/L8U
      ozhxcu5RFEFVBKrirqH6pjKcGE6ixOMAXJ5McdNC3SNX5vjP1+fZ1hIkO5sifv4g+oY2Pn7r
      DTA5xrg/Siq8cHZAVfAEvMjRYbAxQBH/4r6LoigMz2QYS2YxLUn/dHqx3Ggyx+9/5xSTJ48z
      MzHJJSXFB3t7uOmTH0PRC5tkL7x2ji995yXaWuqo3riZnsF51nsN1M3beGz9dmpbx4iHvMQC
      Hs4MzNBRF8GjCSxLokmTTzy0G0PzMDUzzz1rfLwYDRKurkBqnsXLry6MzvFZuYn5mi5+YfMt
      3FnbSM9YmphPozni4Re313B5OkNn3I8mlii8JWN+i49EOv9d3r62O2J2T94pWe1M4jRP3Bir
      XPSgWGYl/NzArf+VsludfUgpqY96qY35SeXmiXhVbmmvRUrJWCLN9w4PsaE5QlCF+guvk/na
      F7nk8VD7Z3/GvRtrGRid4rjwkfcGCKiSZGKWC1Yj4uII6+vCZL1+VCEIaLadW9PkxpYY79/Z
      wHzO5B0bqhfxuTKRotpMMTqbwLIseoWPnlmDbdk8QU3DkpInnj/G6UuDXByZpd6soCIjmKzr
      4P72rcQDHt69q5nJuRwf/fuXGJlO8yt3reejd3Xw9R8cou3sq6y1UnxfNvGlyShVIsd7NwaZ
      b25md2MIkLw+mOIbx0fJ+0NMTCR5bThHvneOAxNJQh6VT+6tpyagUhsMLc5h8aIt57y/tUci
      WS6diw6pk/icNxzbndcilHOgl/S7yjCls3w5cDKhEze3sqsBIQQBXfCpezqZm88R9akE/AUn
      0OfRqI75eff2KjbU+bGCe8k/8x2y07OceeZl6j/8fto2NjPSn2FUgdzsHM+cmebAqIUHkwer
      DCYaO/BoCh+9oZZK71W8Qh7Bx25qItvdjdJ3Ebo2gqLQ1RChUjF5sMHL86OCnTGN2Y6N+AL+
      xbHv3d7B+Z5h5qvbON+bQBom/tkptvSPUbWpEF2aTGboG0+RNy3ODiSYm89y9PApHvVNEFIs
      bskN8Y9mjH48RLJz3FRjUBdQsCS80DtDBoV4xEdksIeagYtMbWxHopEzLXLm8v2O4tG4ZfsC
      b2UYVBXKsvs53aR58d/FsuUcUntEZyVCc0Z/3KCUuVWsX3zujDiVaqucCeeGX7GMV1MI+3V0
      /erlU0Gfxra2SjQMQl6VuVSOk30z9GzcTdCjU9G1llPnRznam2TOE2QgDSPjSRS/l7xQmBMe
      CASYy1msrfRRF9KX9J8/eYren/8Fpr76VXwtLfg6O/n+qTGe7J5jbYWfu+u8zLeuZ9PNN9AW
      9y/aGRvbG7nv1q1cnlO4PDBd0GIhnUdu24AvUNhfiAW8eDSFeNjLh/evo6EywMBkEjmTQFMV
      DkTWkQ5E2FutcNMNLUQqo0QiEYQQTKbyDCczhDB4MHGadXft4+ZdGwh6FPY2h1kX9wOSrJFH
      UUTZNX7LNQC4S27noWo34ioX1Sm2Vy4Ov1qp7lbOaX65mVxu0SQ34ncbgxsDu9Xb0FSBbIyR
      z+VoqK0j+Ke/R3B2khNf+S5HTw/x18dyZKTC1vwwsY5WaqojzKQy1HstHqv10F/lx6erdFT6
      lvlDxuQEVjoNUpIbGgJgZDbLjKXwrN7Ei3ord62t4La1FUi7zwVURoN89Pa1zGfy5OczfOLO
      NVRUxRbnSFMFH76zA9OSaAu7Y7/86O2Mjm/n9JVxNkTCPNpSuZDCYaHbTprdsy5Gk99iaiaJ
      3nYfuVCMl/pm2dMUosqvULiUXMGrLT+d5vz3W+4Ev5lQJJpykaTrbbfc89WaSG5mkh1fO/5u
      /ToZzL57rWoaaNBe68WTGaM7HmLMH8JiGoFkKiuZHZ0hXhXisZ017GyLs6EugiUUhJDgcqNe
      YM8eaj/5W5gzM1S891FM0+S9O+pIpPMcuDRJOpOntcJP8UCmfaxSStZXB/jrD+0AKfGoYtHk
      LbZvWsbC78ImmiIE9TUxGmorME2TvGmga9qy7zF4VQWPz8/nn+omZ0rqGjOousZ02uAXNsVQ
      j79euGBs+25Mr8+WCr4c3vJ7gUpBqS+rrASr3RX+ScBNmruBmxZwI2pnIl4p/J3RK/uRUftz
      o6mVXXs2YWb83LfR4o1xg4zXSzKZIT9nEMpcZDq0nYvSpLUyiMfncb2+XPr9xH/914Cr2Zdx
      v8rv3t3OA5tqmE5muKV9aZKenUENS3J+YJp8/xW2aSm07TdiLaRYFExabUnGr9PvK557djtN
      973X+zl9foSFArSuqSHiVVH6ulGf/i5IqxBl2Xt72TVaZIByu58/LbCbEU71vhrbuPjb7cCD
      W7vXc3ja7oQ7F8LpAzgJ123iSxF8qX6vRbMUwVRUPDfuoWEkycFXj5HzBmDhlv4WM8kDE8e5
      MhYi52ujb2aUCk2nan3HMmYqjtsJk6kcz1ycYnQ2QzqV5M6uRjwebREfKSXz2TzfPNTDgbOj
      TKRM7st18wuqF3X7jfi1qzjrgHnuDNk3Xkfv2oK2dTs4xuRcr/m8Rc/YHIoomNE3BDK8a0cN
      7XE/ysgsUlURpgSff4k2dVv/t5UGWK3Ed3OQ3ZznNyOMWYSVskiLk+rM23fa+SvZpE6/x+lr
      AMs+AujKaMDMXIZUJo8W0lEtk3u90/xW+nghgzMcBE0BzcvFK6PUtDZhLdzRJIRAkRZSKIvf
      cTAtE0UoKIrKd08M8MNTIximBWYEvzrMndvXLAoB07L43uvdfPHYFLPj8xiZHP8uYiTOpBHp
      YR7qrGRjlReRz3H5m4/zTH+a+oDgxpdfor6pGRGvKjBBiXXJGRatAYuPNfQxIfzUtDfRVe0l
      b+bJ1tTj+cCHEbkcZuvaxRvt3OYabAzglFw/Cy1gmRaopZErBU6icoYenbdNO/9ey/jsNnq5
      o3VO5/daQ60rgZuGK/UOCscSN7VU8O72MIeHUnS2xulqqOLlIR2pe8AIEU+bpFGZyRZyaRbH
      cfY0809+B23Ldqzb70LTdSSQN/JoGpgWGKaFlJDJmwxMzS+Zh2zeJJE2Cjb/wo6s5fHS54/j
      mctxYjRFZ7Wf3MQkX+7O8XRwPVHTINJuUevxMpEyODqcojXmZWOVb1nyW0BX+KDspTM/hETQ
      599F3jTI5fMIIchV1+HV9AXitxDCPR/srd8IU8SSKwFL2chL6pSJyNjLOM0fZxln++VCk07c
      VounnUFXywh23J0arNyYnWBZEonJ7zy6g3Qmhz/gQ1EE/ZP1JPPQ5FcYOvIG82mD2ngVpydy
      bKz3okqTxN/9NdnLl5noGWLYX8e6tjqamxsxFQVLSh7eXs/AbJ7+8VnW+SX7NtQtmhdSSgJe
      nR1rquidTJMKBfBrITauayTvCzA5n2dLbbCQzhCJQjiCsEDTFGbClRj+EN8/McGJ0RQRr8p/
      ubmBqFdBIhfvLtJVQby9DavvBDmPn8rGOgzDvDovC6kSqhBLNImUEoTAkoXzFG89AwiBri+9
      4KkIbmFGcM/7djtDYI+w2OsXwe1QSDkCXY3DW+7ZtWqBYn9uNvhqQFNVFFGIz/gDhVRpAbRW
      FU515U2DTftv4UenR/itrx4nb/TxWw9u4sP7WhH+AInaFv50289j9HnZnZ7hlyqq+f6ZcTyq
      wru31PDHD3Qsjsk0zUXCK2aZ7llXR2U0xPcuzRLyarxvazU+reAY+xbCnt5wiPc9so/u755E
      jUV5cliwYy6HX1dQBfg0BdUmJO3rVLFzJ32ajyd70lRdyXLvtgqwCtfIFG+7hqtEL4TAAv71
      YD89E/N86s61xP3KWxwGle5EWwQ7oTtDhXawmz9ForHb7NfrAzjbL/bxszAPV5LwqwE3Z9/u
      1Fua4ORYmkhFiJlUlucvTvKeXc14P/FpEq8cIeirJBD0MWxZfP/MBF881I8qBPVRL3d2VC5L
      qTaMAqGqC/2uqwnxm1UhVAGqWMg6VZauVWN1DG91NXooAMCh/iQPdcbZUOWnIewh5FFAiiVH
      WYW0UF58htpjR4gngvzV4bV0NtxBZ2PEVWgU6WBiLs93jo8wkzG4pb2S+zrj7h/I+FlFgYqE
      5fZhBbsp4AyJOpnGTixCLM8YLXeuuPi7lFPp5pQWJV45uBYCto/heswm+zhWW15TNVKGJOP1
      07SmBl8sRG8yz7ePj+Bf20Fq3SbMmSmMvEHIp1MZ1PFpCn5dIagKMtMzCHMpoemaVtA6C3Nk
      WRa6kCjYTLkFrVwk0pBPY1vr1VCqX1cIexRuqA9QH9KQ1tLP1wohELkcSs9FAtkUt3hnqQ8q
      +DxXgw7Oa/aLa1sR0Nle6+cDPT9m46kXEab51moAS1qA6npoxc3pc3NC3XyH1YYW7XXtEt7J
      UE5nezVEdq1ax41ZprKS7ukM7RVeKnyKe0rjAmQMyQ+PDZLLW7zrxib8evl+VUXBykvylkRR
      r2aoXhqcYipVy+s9s5w8cp6AeoZfvH8H93XuYE2Fn2w2z1d+fIb/MZLmHY0e/uuHbkZR3cPK
      znkUQmAtMMYiCEHEyHKld4zakM7WnVHX+ZBSohTXwevD2rGb9NEjvK42sL6uC8Vxw7nb7dCa
      gD/Y5ifxv59CXHwWc9M6dwb4WUWBnFLeeVhkJUcTlppG9vCgG7G7+QNuJ7SK9Usx12r3Ea4l
      0uQcU14q/PvxcXoTWdorffzqjbVorttVhfqvnB/jz755HEuCR1d4z66mFX2WqEdwW72XxHyO
      toYYQ+NJBgYn+MTnD+GTJsrsKDkjy6FDCh+6awtbG0I8d6yf1xKgBEM8PZrlXf3TdK2JrzhG
      Oy72+cvmLX58YpjeyxNM+1WStzYuwXGRPqanGf2Xz4NpUv2rH4ftu3kj0sHT5wXBplIAACAA
      SURBVGaQlsLlqTTNYQ1FUchkMuTzeYLB4LK107xehKIgdA/C53urnWD776X34pSus5RY7BK7
      +Nt5szCUZupS6dHFv4ZhoC1c/LqaMGrxndvlrKXAPt7FaAoSwyqMayyR5szADF0NYUrdLOLV
      VXRNQUrw6SsfGkodewPje9/mhvZ1NHTu4Ov9I4wmBd1XLiIsi+1bNxINB5ifzVMR8i1+RKMu
      6scjLfJWgYFqKkML810wbySFw++6Igq7sVwl5Ly5kAekFMZsSTAk7Ouqo38yxfY1FbTVxwth
      bLgavUEw89yPmPjXL4AQaE1N+D7wISZNFa+mEvYohFS4NJHmcO8UNeo8bRGVSDRKdXXV1XGn
      06Q0L8OP/Rrta2pR29rdP5Dxs9IAHk1HU66GQMvt1Dpj/+V8Arv6K2UKrba96/lGmFt0qVx9
      p91fxGcoZfLcuXH+/akzzKdz/Pp9nTx28xpw0QSmhFcvTpIzLPZ1VpdkFBA89fxRYuffoLEh
      jnbyOHVhL/OKzq+O1dFzqRuAvXu2ko9Wk+wf4D1tAR5+zx2YgSBCUfjPp4/zcvdkwaZujSOk
      xVTeZGY2Q1J4uZIy2dVayYObayCX41Iih1eYzMynSRgqayv81Cl5ho+dRl4+T/6m2xkPxEnO
      57DyJh6PSqAyRls8QJVf5RtHhwidOsLuL/0VeV+AUx/8BAPN6zgxkSVrSJorfAwlMmQNi5m0
      QVNY5RNbfFQN9KBU13G5dh0t2Wnqv/UFvrLhXk56a+ia7uXjj97krgF+Vk6wM8zpdESdV5C7
      4VZsw3kDsxsTu4Uyy4UvVzp/7AYrMVypOsXNO9tTegamOXthhEQyQ86w6B5JLsawnaAKuGVD
      1WJ/pSCbM/jRkQv8/P23YPg9ZOqbyL78NLHsDDfEmxkcCpLN5bk0I9gkpvlN/wCJUZ2B0/U0
      7d3Njy5Po8aCfPiOIBcm8/zVgWHyqQzh1ACpiQm88SoyyTnO6l6u3LEbr2Xwo0tJfvPORrY3
      +MlaJt/qnWNnzKKysZYLBDk/5WHw8hjzyXkGJtJk0zmaW6vYtKGBGl3yrWPDeEUdNZ/5X5w3
      fcwGI6RnkwwlCjffBTTweD2MJQtniVMGyJOn2DJxiuxlnSfWPsBQ3yVuG5+m54Y6dEXjeVlF
      09mJn8wE+knDi25QJAZnlMYZ2nLuD6xk7qxWGtvBeTDnemL5q3WYnUQ7MJXmM18+wux8ntqY
      j73ra/jQrWtRxNJyBYYo5PksI3whmMmYeDUF34JV5PVobFzXwnjKwOvzMumN4q1sJOrJc//6
      zczVr+Fbh4boSyr8jq+HbWIKKeGYpZLKW7zYl+Qd1QohD3TGdUK6wkg2jzabxDQMjOQs5HJ4
      vDqzoUoUTaOhdYbpVB4LH3lLMC8V5oVCezzCeDbGVMLkyuwslqUh/F7MVIZMJo9PU2iu8BD1
      afh1lUBXG2O9s6wPmliqzonRLKoCIQ0GZ1J01QS4a2Mth3un6enOYSIwFRWpaCTbuwjOnKc6
      P0evGsaUgoQnWNoJLi5gqfd2B2W1YC8rhFj86qCb+eEmvd2c0tXiU8rUWck0eTOY2zluu6k3
      k86TNyziIc8SJvdoCn5dZZY8t26s43ffs6VA/La2eocm+cYPD9PWVM1779mF3TQSQvBK7wz/
      cKCXqpCHP35wAyFdkDEsYnWNPNczQXhSI5yfYahpOyNtLbTWRGhL9VAVSzBvSEaqWsil50h5
      AqQqavBqgqaol5OJHEJa9M6YhD0KkTVVVK0PY44NsS6sc2RgGtMTKMydlCjSpHswSSezdKcE
      a1QPVfEYubxCVJgopkWFYpI2TXwBFV9rnAd3t3JHVy21QZ2umiAeTdBc4SctBdNz82yMmlT5
      FSZzCioK3laN/VsbqQ57eOHCOF9W1jKg+ritq4H92zupCXuovbuTj6RyvDSaw2yPcUd7xbVr
      ADcCWynsWLItltv2UD7xrJTJslLc3FnGeWi+VJ3VgPNbBW7MW3xn7797bI5Pfv5V0lmDP3ls
      J3vXXb3jJ+pT2RJJw9QEuxvXL36w4mqbCl/6zks89dJJPJrK3u0dNNXEFt8risKLl6foT2To
      T2S4MpVma0OYrzx/kSeO9hNprGFO+kjpGhNS5+DFJF0Jkw/uWUt6MsHJ3kkqMHhl5wOcmjK5
      rzaOIi0e21LF8EwILxa19Qrv3NmOFIUTayoWCpJsvuDEjmQkAzM5um5rJKZJ9PFhbjpzEtMw
      OOuNY2QyVFgWH9rSgL6lkmwyxca1tQQCXgIedVFAbqjxL4zd4oGOKCZR0uksbYZJKOgvONzF
      mx+Q3Nrk48ylFD9Kwb7aerbWBRYcaw8xj4d7whYjEzPksvmlDFCOYFdyFlcDywjD8e56JK4z
      alPKxndzet9MCb9af8HOBBeGZumfSAFwtHuSm9ZXLeLXPzLJ0TdOk8nm+fErx7l7z3pnS7Q2
      VOH3eaiqCBEJLr1D37Is7tlYTe/kPDVhL+3VwYXnEo8m8Pl0VEUQDAbIW2AZBjlT4veofPyh
      nZijo4xqIT777ZNEPBZfe/YYH7l/O9Ggj8aYb0mUp4hPYUUFPm9hHtq8sNZ2aZZsbEFrXoMG
      VA0MkM0q3Fip0txcueAD1iydJ9yCChYKEPTpFJKpl38L+t271lDvk4ULhDetWSLsDNPiL/7l
      SQ4OZ/FV1y09D3C9xLCaTSc3kCx3NK+VCe1g3xMoZ1oVHew3iwmKeSrlTqI5nVwpJbs7qrh/
      RxOz6RzvvKFpCRPXxqNsWd/MlcEJdm9tX9aelJIPvnMvWze0UF0ZJhryFe4JSmapCHpQkOxo
      CPFX7+lC1xRyhsW3XxsgGvLx2C1tJHIW84rK/vVxVEXhjYFZbl4TQ0FiCYFSX486k+Gx3VXU
      R3XO9YzypcdfpG3rFl7sneHW9kru31iFKLE3UYRsPreQl1TQ6oZhLJkjXdeXZPA6IZ3N84MD
      J/B6dO7dt3nZTXJuoKsK+3Z0LM7TknWQcG4oQTq2hrSpFsKgmmfpRw+uxV522rel6rsjqqGr
      2qodRTsezmiP08l14uC8VeJawpqrGYsTlyI4Q7zLYCHDUVUEVmKGzJkzeDs7USpizKdzJOcz
      VFeEcQt9FsFakJb/9kIv3z0ywLaWGJ95ZAveBcdXURT+8UeX+acfnkVVFP7k527g3q11SFlo
      9fPPXuCJowPcs62Rj72jw3aBrWBgcJB8LsvZK5P8w7dfJe0JYTRtoCUe4HPv30LEU35e8kbh
      WGNOCjQBysLxScs0SafTBAKBRQGyTGAJwbefOcJff/EHqKrCH33yUe7Y1XndCYLTGYuvHRli
      fGCIM7OSlNTcc4HsSKxEAE5itD9fDdiJF1iSJ+JWthSecJW43XZ87R+/uBZwi9CUKuNcQDvT
      lq5sYUnJ+b5xzv7+H9L90Y/R/+nfhkwGn1cjEglxbGiOgdn8kp3D4rwX/0vn4cJMnpbGKCOT
      s5wZnlti/iXnMpiWxDBNkpPTKEKgCJhL53nq2CC9Y3M8dWyQZMa09QG+SCVPX0jy/IRG5/47
      aW2pI+YRbKoPL/ngRinQdZ2XryT5za+f5s+e6WbeKBhKmqYRiUSWfGO5OGf2+fL7PIsh8rlU
      hkMnupmamV9OC0KQt8CUpehU4dvHhvja0SEuG37+y70b+fsPbF16IOYnCWtea0QICgN2pi+U
      iuOvpv2iaeMWurwe5iyWXclUssfx7WkVq+lHCIWDZwdQsknO7H8vVriNm869hJXNklY9fPlg
      L996Y5DaeIQ/e6iT+rCHTCrN5QtXqG6sRfH5eaFnhrOjKaKZBO/7wT8RziTJiPuxHnwHanML
      WRO6QgadtT7CZoa1g2d59lWN02mdTQ0R6uNBJpMZbt9Uu/BFyqsCZToLr09Ba02U3Pgkmhbg
      I61w69YKpGkidNV1XYrjn89L/vVgH93jKS6OzbGrNcZ9GwrXLGYMSSprEA/qy8xXKQsRr7v2
      dhEO+jBMi6eff4OTl4dpqI/zex9/kNbGKgQFoXl5LMWXDvUTDnj58M3NVPhVJAojMxniYS+q
      zKMb8yhA31Sav/xxD3/5SFfxXiBtCdJvBpQiZDsoQsGje5YQUKlojz164mzbLVq0LOQq3FOp
      3cB+C0GpiI7beO2MYi/nvNXADmkTLvUPk1a8fK8fXkoF6enYxoUU/O2Puzn08hHSl84wg47M
      pNnZVs3//PN/4++feI10JkM05KF7PMnzl2fYNHyWvedfJJyd46K/mtDsGLnWdXzz7ATVYYX1
      TRFmYrWgqxxOeRk1NXrHk+yrlbxnc5TayQHW1MYQgQDZvMXo2DiZuRnm8xIzk+XJ14fom8py
      ZSrDS5fHebZ7hvaaENXhpVee5yzBa8Pz9M1k0bJJDvclGZvLoymCB7fU0hTzMZQ0+PR/nuYr
      rw+gmDk2N1Xy8hsX+eZTrxEK+qmNR4CCadjSUMXTx0eYudDD+yMpNmVHOXRxjFfTAV7snqah
      IshTZ8a4YmgkpUI6Z7Iu7udvnzzLnz5+mhfPjbJ/cx11nhxVfsGRkSzJjEGVT3tzc4FKhSgL
      97MoS894ChAsz8Is1inFOG4Stli/VGjzWjXbteTx2PsoMmgxHdeNGZzg0wSeYISJ6RmG+yeY
      nZnn9SScMyfB40FW1sLYENbcLCfOGSRvbqd/fAafR2NHZwPVYZ1dmsLx0RxjsS4u9G8jnJ3j
      UsdONiuj9E5nqFRytAQFhDSuZBUGEv7FEJyh6RzO6ewKSboiGumDL+F78GFeOnqJNVUaXlXh
      5jqFETPOD/RB8maeUdXPpOXHO2vx0pVZNtRFKGoNIQQnxtJ88/QEAri71uLh9X5MzcPGujA7
      mwqE/VJvgr6peaSEg70J9rVO8Ln/eIa+oUm6+8f4X//tMVSlcHDHwsMrPdP4qxuZkwr3yhyH
      1u5gMu9hZi5L+mAvW1qrODdf2AkeTsxz+gdvsL5nmJZQAxdH5uifNehqqOdGbZZ/OjJDLpXh
      775/6meTDCeEsnhI4qp6g1Knnktdjuv27yKBFTWD3axayeZfydl3I1y3L824McpqzUEhLW7t
      bGBgMsKPT0/yWmKOxqiHeNxLf0ri9SgojfX4qyp44IYmIrEwv/ie2/j+C8cZSVrU5ySxSJjf
      2F/Hi+dHOfLAL9HiM7nRSiIb97C+uYrJbouslWIuZzGblbRGdVJ9k2Q9EfRQEFMqnE+Y9KUi
      /GJNAI8FA7MGgbBOxAOzhsLtXbWc2V7DC4NZ1KCPmVSWoFejvTq8cN/EVdCUwnFEVUjCuqTG
      q/BQu8rhaYtE1qTKp7ChJkhtRYBMNs+e5iChgJ+KSJCh0WlikQAT03NEw348uoplQTYQpM/Q
      yKOyV8wiircEIqlQTe7prCJtwfBcjsrUJB39p9mXm8SrGzzZsYP26gCaJohHw3jzGeZmU4Ur
      3d2S4d5s8OneRQYo9XW/IjijOfbnxfJ2h7lcONNOhOWYaqXQqf23HTc7Lk7Gse8NrBS1MEwT
      oQgMS3D6yiRhJYNl5AvfB2tuJOjTsQyDTGqGdDpNCi/jhg/do+FTJDuboggk43M5nj09RFOF
      n20t8YI9LyUWCiOzac4MzjCdNkin0nzt9DSRSIAanyAvYSiRodVI8Nn37SQcj/HGwCzfOp9A
      QXJba5h3rItzqXuIf3z2AumGFjI5g3UhhV/e3Uh11LdoswOYKJyfzCCkSSgzhZHPM52DJwYF
      n9rXSsRT0LJXZgpRrvZKH36vh9HJWS73jXFleIKvP3mI2qoof/hbj1JdGeF/H+hFvvEqj+R7
      iDfV8cXwDl6flnT6DT5+z0Y8oSDJrMX3zk9xfCRFc3qCT/b+kKGWLuL33EcwVMDR6u3h0Gf+
      iCO+Rob33PPT1wAFAlmYmIWTX24fibhatgAr2d5utn85U8fNT3D2Wfx3ufquH5grYTKtJupk
      SQvDMvAqHryq4MaOGkZGRpifN6hQFE71TbOtLU5lQCcxmSGfN+hPZPja5SmisRBeVRAP+2kO
      6zx+aoxTkxbq2AzRgJetTRWMpvKEvCoNES+N0VoQgudP9NFcHcQXDKDnc6w9eZCOdJpb1lcT
      ikWwLIttjRGiIR8Zw6Kj0odpmrStqeOxu3ReGUrT2z3Kvp6jTI/GeXXLbfgjIW5tCaMLCxWL
      TVWFD/ulUjA+meDycIo7W6sKB9xlIdLXEtERUc+isKiuCFFdGebAkXOMTs4yM5dmcGSK2sow
      H9tRhXK6n1AuiTGa45f37ec9kZpCColh8viBM5w1AswvBDbnwpVM3fVumtZ3IDxXN+NUXacz
      0c+GwCSRBz/xszCBCruDUsplRxWv1+Eu1it15tWNudyiQ9favxBXj9vZNZkb07g5465tIlCF
      gmGaKIrAME3iVXFEwsvfPH6Gly5Mc2tXLb//yBY+/8QxugfGad+ykbpwFWkklhTkLUleSobn
      LYSqYgrBSMpg5MIUr/ROUeEVfOiGJnzC4kevnuFv//1ZGnbtJhBoIZKfo6azjbu76qnqWMNi
      FFFarIkU92hkQbhLyfa2OPGKHBdOHaAzO84fnQlx9vIJ1m5eQ22wlc1V3sVxSykJBAKsCYVo
      aS6kKUjb7rGUcvnuhpTcf+s2RidmaKytZH1bPVJKvKEAsq0d8/wpzLomfFVVeHxeFNNE+f5X
      +WD3BY5G1/Lk+v3c1BxlQ5Wf2rh3ufatbyD6B3+MGq9CaWz4WTBAUQMIV/vZDuVs7yUtOja/
      rje+X+7fRTzctEoxLm1nALeQ6+rCoAJd08kbRqE9UfBdfIEw/dN5TEsyk8rxo+O9PPfyKaRl
      MouXjz1chScapCYWoj3mQRGCO9bGeK47Qdzv5cbWCv7t0BXe31bYgDp04jKPv3CKgZEp0ukM
      Q28c5d7wPLtDebyWwVR0KwGp4nfgNjAwQSJtsK6tpnC/p5RUhjzM1jbz0mSCF3IVkMtRMT5D
      eniY4ZeOIWKVVN9yE4peOEgkFzS/c4YtBAcuTTM6m+Wdm2sILRzj3LKukc9++n14dK1wm4UQ
      WH1XMCJxrIc+iNa8Bkv3IC2L8cF+akaH8EiLNblp7moJsqe9ouR+klQUtJv3FfqXb+K1KIoQ
      i6eGlnQoC8R/PfsEpaCc2VLqVmkov5G2kunj/Hc5k8rOmCvZ/4sf9LMshA3fiF/lvz28mUMX
      xtm/pYGp+QzeUJBcKoWIVJAzJXe3hgkEColeZ4eTDA5McEcEbtnejM+jsrHaj08tfN3l1GiK
      i546aK5FCA/tDSFu3NFGXtN4bTRH+twgKWWaX7m5laBWwOPy4RNUH/g+Xil4Zc+7uGPfJkDi
      1wTeri2cVmJUvDHCdDJDvm+AXOp12sxB5oXOTF09FRvXua55ca4vTqT586cvkTMsUjmTj9zU
      hLQsTMsCYSJQAYFIzjL9x7+POT5G4MF3k3nk53h+OIGiCjo9IDq3ER/uI7zjJm5cE3e9b9TZ
      fxHeNAZQFXXxMlNnJ9dzJ2c5cBJhuXBlqe/H2vEsR8xufTh3eJ31nZrDbRHypoGq6rzYN8f5
      8Xlub4uyrsKz6EhKKdnTEWfvukKCnCGj/Pff/jleuThOfUWQPR0xnjg2xnAizb5N9Xzx9SH6
      +8bJZE0ujyb55fu2ctfGOvpHJ5lKZjg7qyK0QvKYf80GGtcEUTweTo1myWfyNId1MkqO3skU
      m+sKxxwnTp2myyok6x0Z7MeUmwppElISVywURaclpLDhyGH2XDpCYG2E/E1t5ACRzy1bo8U1
      kRb5vIFHFXhVgWkK/LZjnKqioCoFU0pRFMhksBIJyOWYvXCJl7/wTV7efBcRM0O0yUukcyuZ
      m+/A5/NhWRajszm+f2SAhgo/79hSh6aUFn5vqgl0LXHzYvnrtceLUAyB2tssPi/+dYvU2Ms6
      y7nhaY/vO+u4EfxqwqLTGZNnLyVI5kwMC9puqFly8N2uyTQBe1oqiGkq6xsi9I3P8VffO818
      1uDCRJoZC+raGkDAK6NT7BmeZXNTjOeuZHn8+AjZvImwLIIehbuaAtTFfDx3eoLLg7M8fyVL
      0KvwybsaCSeGmIutJRpUoWsbJ14aIm0pJBvWFBLRpGQymePPv3WCK+Nz1MgMj/SfoSI5zXhP
      luGbN2GNDBG+dA62beHMyBwDiQx71sQW84ZURUX1qLT7NT770EYm5nLc0l7J1FyOsE/Do139
      zO309DSK7iH067+FefE8k7UtVL54mFsaGnnHxEkYj+F95DGkopOYTaN4dL7yUg9fev4S4YBO
      YzzAloW9h8V5Le5JSevNYwA7MTu3tVeTgOaUqlBeYzglczmic2MGe1RnpaOUTlxKaYVrYWKB
      wK8JakI66YRFU8SD5gyo2yBrSD77n8d58ewo+zpr+OX96wn6NPKmRdinMTSZJlZdYFDT6+OV
      S5Osq4/y4wsTzGUMFCHoqPQQqIjSrwgOvzFI33gKzTIxLEkmX7jzUxhZzr52jPTMPNMVdfyh
      ugtTEXxcK9wuZ0kwDAMjm0Uogtaoj/AdN5N67sfEbtrCTFU9oqcP/8QYJwZn+cz3zpHOmdzb
      VcPv7G9D5erdPtqLz3CjZXGpYxf/91MXOHJ5grURD//1vjXMzc2RzZkEPAIhILZlO316jCdP
      T2HUbWWDx4OnOo53sJ9/+MqzJC9e5O7ZHqbauhhpvw1t4UCR37M02TJnwd88342uKnzkpubl
      16NfryQugvPm4nLtuUl+OwOVAqfzW+rSWmcblmVhmubiLQ/FMqWI177fAJSNYpXaSygHHmHx
      sRtqmc2axP0qS/Prr4JpmLzx6kmGBgfxazA4naY5HuBvfmU3U3M51jXG+O0vvc5Q/wSqV2c2
      maa2s5LnTw4TEoUcf79HpSYzTVqLI4UgpXqYz84SxOD+eoWmjjq2NAYQU2NURYJkXjvKK+kq
      5sPrADjTN4nYV7gOcWDOQK2JEw7lqGSKvZ/6BQ49+E7S2UmMz/4uTE0xMz1Nz84HmcsWHODx
      uRxSglAEx4bmePzF8+wZvMLD5hWeOTbNc8pakIK+xDwziWm8usrgdIKqaAjNo5FIpYg0V1Nj
      BPjSqQqeH4a27ZvJTlo8/no3vztykFZjmvrhbi5tupl3/NwNNMT8dNQWPqxXhLG5PE+eHgNg
      U324wACrIYbVQLnbk93Avllkl84r+Qr2rM/V4rwYB3bcGrYaHFe6FcKp+exQyuQqbgxqwqLK
      J0oSv6qqXHnjNF/78Sn6ukewpKRr6zsIeRU6agPImgBej4f9zSrfOHAGA5X33rkFXRH8z68e
      xZSSe/e0EdAl068O0mLMkdH9nJ0ofJ1lQ2aEj3cf59Lah0l3T6POTOGtq0GcPcf+9V1056dI
      qx4e7mxdEASCV870k8wXQq4nZAVS1Xjw1g187psHadI0VECLRtm3vpo3JrLMzOf5lZua0ZVC
      5OcLB/s5PmpwQt3AjdYEAwuxJyEEW1oqkFKQy5uksxaRikoy88nC/FE40APgUQVmNMqJjt0E
      R05yZrqSdTLFVHUzjS113L2lHmmZOFVqyKsS9WuoQtBc4Xvzrke3EzOw5JaGUtK5GE60PysX
      NSj+tv9dDV7FvkqZK6XCr85bKZz4rSZqZH/m5nPkjHzJMxFpA144N87JMR25dgMb2roYv3iB
      sxf6efVSK7vb4xhYnBnPsG1zB/MzswT9Hj50VxcvnhtfvKZwb0uU4LmjqBXzGCPDHGnZwe3b
      G5gZn2LHwXN8fcbih988zJbGSj67QSX4ygmSu7bg69rJ3X0J8gE/HRvbCvgLGLl0meyEh7yl
      sqYlSkNtFF0XRKMhZh7+AJeVKKGaODtMhT+8f31h7ihqbcFGv8nag1+nej7BcGuUrR96PzVZ
      2NFaxc7mKEY+x9DoFHtvaKI3kUbkLQKaYCQtuL3GR1vIgwj68ftV7rmhifft66Rv4HbMXIpY
      VTWbG+ILxF+YZ8Mw0HUdw5KcG03xkZtb2NUSoz6sFxjASQzlwoLlwK4BnHa/nRDdwph2k8aN
      2JxaaqWENTeiXSmE6ewHSqdQrDaqtBIsI34hkBQ+mv3PB3p5/MQwa+pjVFbVEkIQDPg49tIx
      fucLh/ncx/aS1jx8+8wkwsxzy8YNvHtHM0Ja3N5Vyx99cAeWJbm1q5ajT13kbm0KKyyI1Qp2
      PbQdS8LXu5p54qvPk0/OMG95CE0WzCy1MsyfdCu8liikLhvHR/mlPY1IKdm2bSNPf/csFgrD
      43MkMiY1mmDH1rV8U40WvjUgJcn+JG2VXpDWVTksJR/M9zB0/CmElPir9rAtlmeHz0c8ruBR
      QVd01q2p58XuBH/x9GUaggo3tcW4eUMdG6oDdArB4e4pPvO1NzBNyf94ZCt3bGy2Ccer+02j
      o6Ok02nC4TCjho/P/vACPk1lS30YKUtkg16vCeRknFKEVk4i2p+XczKvxdS61siUs54zy9TJ
      EPbxlurLbRxu5tKF8TTfPDbM5oYIPZMppITx6RQxr4KuKiQScyRFEGmYzKUNMj6tEDdXNJ66
      MEWlR+H2TQ1oiuSerXUA5AzJBUPnDhXyEmr8CsXNSan7SFe0YHjTiBofVkcYmRgn39hG4vU5
      oPCx6anxBEI0ISWkPIU0ivlUBqlpHBtNc380hhRLP7TRXuErzNVCRKcI3uYmFL8fmcuh7N4F
      C4diisclpZQksxbfOjbMXNZk3KMzZnkJ+TyL8/eDowMMLZyn/tbBHu7sqnG9FTqXy139K7zI
      Yh7mAp7/H3HvHSbHdR34/m5VdXXOPTkPBoOcE0kAEjNFSqQkK1rR62/fer1eh7VXtryyn+23
      a3s/f5/Dei37WbLsZyVbq0SRIimJQQwgARAZIGYGA0zOM51z5fdHY8BhawYYSNz37j/dXXXD
      qa5z7j35yL/+G7/+h8vJUesH3w7iSELUYj/XyOhQLySu3PXrEWc1hKr/XEteWI2obsWb17fV
      Tq2bIXk9MdbDuBbC11/TbMFfPD/CS1dTnJvM0uRT8HkUGhrCSLJMp5biX716JAAAIABJREFU
      M+/dQyTg5f6drdy9vZGWkMrlhRJl08GoVOiLqPS1vDU7hEuRSFYdnn7qVaYWC8xt2ociScRi
      QTwelTfm8vhUic99YBctdx7E3r4Hqb2LpteeI59M07M4zsf3txNur/kSnZuv4AT9ROJBWtvj
      TOZ19gVsNjYFCXpddEU8PNQXpdNrMTY5Q65YJhoK3oCpHInzL76NvLL5KA17ttPTmsDt9xOJ
      RG7gxFdeG2fg9GWCHoXmjibKFswUdA62hxA4VDSD48NLKJLg/Yc62NkVe/M9CImyVZOf3Gqt
      VGokEqElGiDikemJeLhrQwxJ3CAA+Sdexq2QpL5JksAlvzWwpp7vXu3lr0UoN0PC5Re7Goz1
      xLfSLXo1gloLprUIb7Wxq8Fdv55t2xgWXJrMUdZtogE3ecNhImfgcyuUdIcvvDTGS+ensE2T
      e8Ui9+SukI61Ynn9CKCcTnPP9jYO9MXpb/GDY6PKDl1hL7PzGbr9Eo8d7EWRas99aSrHk6en
      yZYMis8+x64XvssJEeK70yUmLw7QH/XQ0hjh4vMvMjc6gm5a7N2xAaHIOELQ0tfFvsIMh/du
      oPnwARwBgppK9vxcAVmppS5pzC+y6//573h9blq2b+HYcJIL01l8Wo6IV4BlsHTpKoGGBBXD
      YiSj86WBIpP48UWj3LurC5/3TUEYB0ZeOUlndprd6WsstfRgutyYusmhjiAuCXqbQ+zuDvPg
      rhbu39V+w2WiZDo8P5Ll8aEMkzmNHW1hQgE/sixTMSz+7DsX+NHZaXqbgvQ2BX4yLcrPKgyv
      1lbu+rebPmSttlbll9Xm+WnG1c9xM/bmVmvXxko8eXqSv/z+G4R9Kn/8if28NFdhOqezp8VP
      QBF8+9gIlbKG1yX4oDzKTpFFz0T4oXsvtlblUGcUr1uhqmu13c2l4jjQE1f5tXs3IAS1skBA
      pmTwO185zVymgqpI7CirfNIdZDDQRN4SXEhrTF4ZYRGV167Oo1kWz71ynkfv38/mzpr1WWpI
      0PCJj2I71LRU19+JR3IYnclgWA7NqsUvv/4lXLMjaCde43LPAb52ehpFlvBuCvBQUK75Z5ol
      zn3hS3xrSbD/3sN0x3yMLhVZWiowe2WMro4Glgw4OzBBIBxkINJJdv9mEulZgqUcVW+Qounw
      xKUFPr6/Fdu22d/XBNcdLUcXi0xmqnz17CzjqQqxsI9ia5hk2aTFV8O3VEFjcqlISTMZmEpz
      347mN4Xg1Y7x2+Gz1zLg1PPz9UHQa7V6lmmte6uNu9nv9ZQorYd9PXLIzYRiqP09c9kypaqJ
      bTvM56rkqhaG7TBX0LmjLUDA56JS1lBkQV5yU0UhYhRRsSkXKnh723CQUGQZIUkMjs2xmMzi
      83jYt7UThISQZKqmg2FbaEaN2A3Txti8nS+5/g0LU5MAWLILaeNWjHIVr0tBEzLuYBi/Z0Ue
      HwRPX5jmxEiG+7Y2c6Q/Do6DS5FwSbWTIBH2EDu0H9clCeXwO1FcLgKqjCQJZMtB0y38kk3/
      6Hl8ZgqfLPjBtTH+6EP38czXf0DTtVlaptNYkSh/lYrx8kiSWDxC+51H8MgmMZ9M3gBsGyFJ
      TGQ1hJAQEpwZSTI0k6ejIcAffPcyplut1SoQglKpSncwTtyrUJPJbVzKm7UoasHzYjkmWF6T
      B1/vKSDEmyxQPfLU7571O+pqiLQa67FcdWS1OVeOv9n9levXz3+zfivnX01LditYANpitXz1
      79jazCN72vC4ZE5cXeLK1XnibplPvGMDzREPP3+klwGinPa283piM3N5g3OXZzkzmuLw5iai
      foVCSSebSdMYUhlPlTlxLc3T1woMLJV5YaLIWKbCheEFdMNiY0uIh/c0ct/+DiSXQq5ionRv
      5orhw/PcM2wcvUC6ayvb923noQN9tczSQuLUeIo/f2GCK6kq50ZTPLitGb9HIep3U9JN+sLw
      zu4AbXt3MRVsYSZV5PGhDNOGi3s3NfBL7+xlfjHHscFFNsxfI4iB6lYJHb2b/uoSB4ZeZKtS
      QsUhW9b5uuim2r4JOdZI2bC5L1DkSF+IjUEYmUixZLsoVAzGM1WmJhf5m8fPcX54nqG5Iklb
      QlZdIGopN2XbYiFTYqpgUEWmI+KhWi5SKZcYnC1xT4uCOxFbnyvEeqzEK+/UC7r1Y9fKAl0f
      GF+/fr0l9n93W63O2HqNdct9V45vj/v45Yc2YzsOXlVCsi0GB6aplHX+V6HCY/va2PdAP7Zt
      c6gvTtEUTOU0/ueTb+Bc33kVWWDZFoosYVoORd3miTGN4ZSOg6jp2bsbyKgyiqogKjo9TQG2
      JyQiHhcfeXA3e/fv4O/O5RnN6swntlPJOJBJ8/624I3KMmem83z+lUnKpoOQJFRVQkiCF05e
      5aULU+TDcSyXyuhgkRfHyuTdXdgejYb8BFXTw1JRQ1Yktm3pYTrvcHayifvdGcJH72Pvji1c
      e/Uk/QiEJEFLO2e1MEvVFqpGzS0joECzTyC7VSSXQkSbYViJkoj4GUpXeeWNq4wXHRQE72px
      sSsc5+XRDAG/m+msRsUWVEoW2aEk0xVwC5M2J8e7d8S4NF1k4KkXuGqpbyWA1Xa39bJC9Uh7
      M0PYWvOtx5K8HmJcT1s+SW7mLboeo9x65QNJkphKlfmv3zxPsWryO+/fQW/cT3tDkNGZLF1N
      QXxumYpWrak1gYjbTbzZx++/fzvPXoqzvSNCZ9yD49iUHBituhmeLjORM3FqWk1kSSAJwZZG
      Hw+9bwc/HFpiZ7ufQqWCgoNmOXQ1xbizR+HVkRRmKY+OQNiQqxg34E0WDeYLBi5ZsCnm5ee2
      RZmbXeRvnh5ktCQIhR127umhajpopsDnlXBcbq5KEZo8Du/b2YwsBJIMjx7ZiNjXhnAcHJ+f
      dNnk61ojPR130yJpbN67hRdeX8STr1BCBSGwHYezRTfy+AKSYbDgbyAe8rCULZEvVGhUBYok
      4cgSZUXFGh/CGpigaftmFuUwhmHj0SvEIjFURSLkVpAMCccA0zBpzi/iUVdxhvtp5YHlDA/L
      iLCWhbeef683cK069xpsx0/bVmNd1mLD6oXx29GU1bN558fTnBlJYdoOrw4t8u8f3MRffXIf
      V+YL7GwP45HBsASe66liLMvCtCxawgqfOtqJY9sIxyZVhb8+Nslc3kCv6mQWckhqzYuye2ML
      iiLRFfHQH/eQrZbYHrbRKvD1U0tMVSQ+82grv3lvgsO9Uf68UsAtBAG/l3sPbLrxrId7I8zm
      2rFsh3u6vYhqjkqpynIuLOn6c6mqgmMYlCs6xWKV+YpDe1BhW5Pvxly2bYPbgxACw7AYn5zD
      K8P5aC8lr8mx16Z4eThP0CPA50IogmjQw4/ndV42ZBpUiY/uCmHK8PdzZYpVC9kbIdhkYiI4
      mzSpXBonVyhTWlrkv358P3NzGXKpHFt29tAU9dEVVjEMD9979Sr2zByPfOQ+Oh7e/ZO+QDd7
      qTdFQPGTSLyWwLj8u76c6c3WXg/ir0corr9+uwi+nqzSjgPT6TKm5dDV4L9R0GJPT5x9GxIU
      qwZHtzQBNUe13gY/Ia+CEM5bYios28bAxVLZosEnkB0bISs8/toQp0fKNeG2UEYva1DW0ATQ
      GSUS9dIX8xDxyLS6bVQJNFlmcKbERFrjGycn+ZOf285dDTJX+0Jc2niYrTGVvqbQDZ8kv0vw
      i3e0IYQgmcmRrTioXjcPHmjHNV7BFw/jUiQqBrSE3FRNh/FCFcuBkuFQrNZikZdbKldiYnqJ
      r3z7RU5fmead9xwg0LWR1Ng0yazGBr+JGUuQmi/hCfrQqgb5Uq0AxkKqwnew+dUjDeyJSZw0
      bTZGFWbTOmlT5nBPFNFwkDc0D4lokI6GIHf0xt7yfh3bomLA104uMC7HOBbfwi+4pJ90hfhZ
      2kqErm8r11hmO+Q6+8PbAcey3/7tWorXu/Z6+g3N5vnMP59Ctyz+8CN7OLypEck06Iy4+atf
      PIhlOwS9Ll4ezfGPx0YpVw3u2xjjo4e6sAG3XINHdrn5xsUUA0tltjT4+PjOOJlMgR++cAqz
      qR8hK8QTIeIRPwtzGWRsGtLj9MydxR/ciX/PboKqipbPMLBoMZurBalYlgNCULx6lXk8xP0K
      i0WdYq5IKBK48ZzLxB6LhJjLa8zlNTb0dXJyfoQPblTRsDk9WeVje/swbIeJdIWSbuNIcG62
      xCMRH+BQ1Uz+8H98i1B2kfd4y7RvaiDUFGIGwVK8AzsmqGYLJCSDllYvqWSOfNLAkRRsB/SK
      Rk53s/jjUxx4+SS9u/ZyzL+V/3DvRqxqhTu2dnF6ocLo5RRlYDSj0RpQfgIH3C6Z1piPhVyF
      1pjv7Q2JFDcJe6yPBV7NiFXPi/+07I4kSTdC4taqGLmWtXgljGs+5zpgGlsoMJUqIYCh6Syt
      epYnBlL43Qp3bY4RDftYKgR46tQIMbPEIxsCaE6Z//zNC0QlE38khPD62Bm0yeZ0FM1mPicw
      qhoBr8qGuI9LyWnCvRtpbY1hOxAJe+h0CpSujbLj2vPYJx7nmYc+xTdpZ3d3nHf3+Tg8b1Cw
      ZT58qJPnL82xNKVzT5ePaNBmqWBx6do8SclHan6eQLXArp0bWRBeMmUDx3GIyTKvvDrARq1A
      kzeG1+VAQlDO5ZF8Prb7HUbPnUfIErM9PkamapkexqeWGCgInKqXlPDwmQ8dpuALMzopgSJw
      OeAPeNF0if5WlWBCcCWlc20qjaeawUymqKZskkMncBcKSJevsmPrZgbPxnne8jN1717uPLyX
      iCoIuBU2RFRMu5afCMCpVhGSRFGz+dSRdnrbwsxWbeYKxptq0Ju19ei7FVlBXuHWsBYrsfy5
      lpPZetZaq61cd/n7WuGYN/NZ+llPonjQQ0kz6WkK8N6dTXxjIM2UN86C7GMuU6Lbb/PlY6Pk
      vRE0j58zsxU2x13Y5QqPFQZ5PbqRigXh6WvsDVY5NqszlSyhLE2TzGTY1t/FtOlnZDJNojHC
      5EKOpYJGSfIQ3LKZkf797LBSHNRnaTZyPJtzc2fc5I7+CP0tQf7yuXH+9cfDeCp53tXrAa8P
      2zT4oyeu8PSlJYaLgpTLh/f0yzxZDHEppTNXrVVxN5MLSJbJj9Iq45pKVbjoNpK8NpFjWPfi
      iwT4YKdg16YEV8dm+KfvHsMfCfLq+VGsXIZUxWDL1hpfPlGCsgmKcHBSKR4K5Pj4/HHeuXCR
      nG6z0NRNa1crimMQ9Aoe/nfvpbWvCWVmjAlPjBONW/CV8zxy9SWcqTGeLASZyWoMXh7l8YE0
      vU1hrDcuMPmbv8XEKyeZjDXy2oUpxr0JJvI63zs3c3snwE115jdJ370av32zNCU/KwKux8V6
      NRjfLlYwFlD53ffvwAHyJY2S28+yotiQ3RQ0m8WqgyeqImyHsi1xZqqMW9fpLS/QWVwgjUpX
      ZYkx9y5Ginksx2ZEBPhga4BUXiObL1EuaVwZnEYK1NwISmbtLZS9IVItPWwpjLDVznIvC7j9
      zdiSRKFUYfZ6SkIrX6Rh8DyZ3s2cGU4ynwNbEpQLVVx9LZg5H5Jp4A54kSSBW1W4LKKYQkJk
      TSYLWTqbw3QHQqhuEw8elEAzakscWZZojAXJ5ss0Bl2EE3Gy+TSyx8uI6WNgIM+lsRxNCT9Z
      3SRbsejZ4CExmkS2THa7MpxtDCO7XDRu2kSfUiYxcAb3U4/jsm3+ceN+pmJdbFBdNL7+Q+zZ
      cQJ7WxmM9TCLCuh85+w0dz/7OLHBAQq4iZeyTOUs1HYFFZhdWicLtF4B9FZOYcvXVtP8LNsD
      1nJeqx9fzyqtdK671Zjla/XwvR0EcMPifT0QOxr0cLA9wIm5CgGXxIe3tdIUdLNlssq1Uhmt
      VMGdXASnyGV/M0/5+3nn/HmcSxdpqqYRHe1sCLrI69Ch1uqJ6abNzlY/Rd1BEjbhsJt81aLL
      Y+PWyvgrBV4revASI9vWR1LzMvfGNbTWDo4lXYQjfrzYTKAwkJnEfOE435qUUANdWJJCR4OP
      Nq9NR0sUb77KUkHGMVTyhQobQ4KkZrOkS5iWTaVcReQ0MmUJ3ZawJEG2YNMccDE0lebw/k00
      hL2848huxrb04/F5mbU8LOXzjM8XmM2UcYd9+FwSU94GWnu2UZ1b4Em7F9108CgOstdLTvGw
      NJOkvVpFllWCZgVhGvjySSwhsGMJTLeXaDGNT1hUIgmO9sVhYTe5V19GwWbCVLlTTHO8XKmp
      i7mN1Ii34skVScajum8ZzrjavLB6bO5yW02btFq/+r7/f7V6+4ANJAtaLeBbFsiSRD5f4r98
      9XVOTRZxWQYf7ZGhfzMDWYu84dCh53h3o8WkEiYUCZDP5vjW4z+moTnBga093HVoO1996nWE
      UcXrcuFONLKxLUZFVtneHKDsSMQki86mEAsFnb98/holFN61rYkjnUEU4VDVTX7vKye5NFXA
      51W4f1OQPYpGU0eEYEMUaXKCof/r/6b8K7/Klrt2YZk6diXHyckyXzuTREgSe0M6Y4PDgMO/
      /ej9LDg+zk7n2Nce4qP721jMFdHyGcIBPyVXkKBbIbeU4cv/+F3OV1S0jn5kWcLjVujrSBCR
      LdrtEnfu6WMqpzOf12gMuNjU6Mc9P43/haewE01MbTnIP3z/LCPTGfZ6q/zcIzsZ+fJ36Bi9
      RMvDD+L/pV8mHg+h6QbTw+P4gz5Shsn8Up7JjMHengYa2prf3qB40zTfooG5mTp1ZVu5G9/K
      WW61nfzt3MHfjlb/fBLQGKoVczYd6Ix6CIX8fPpoD/7jo7QHZR7c1cSZgsrlN+ZBwJ6dLSgJ
      uCsWpKstwdj0El//tsPwtWk+9q5DbOuM87lfuA8QzKbLfOfkBOGgn8e2Nt1QZS7DEfK7USNh
      bNMmp1kk/C4c28IlCa4ulNBtMIsaI6MFtt+zj/MDQ+zp05k6McSwJrjXDzvbgjiOw9Scyamr
      05RSBSQJGpqD3PPYIfq6munpauaz3xticL7IfF7jke2NBNEQko1RLdEdC+N2uzjx6jjT41OU
      1ChOo04gHiZf0hmdyxFyCT5xXyc9DV62NPpu5FaybRsR6UX0/wpCktBzVcazFjO+JtKOAdc0
      9j70ENHGR4ls2UwoXkvx6FJkerfVYplD5TJBn4enr4zyzNAIP3/0bUyLshxkUO86sBaCLLMr
      9ULrauNM00S5XsPg7TKG3Qy2ZXjWurey1fdbycqtvPfaWJb/dTmFIwTv7o/y4MYoB3Z0s397
      F6VSCSEE587NYI0PogaCTL+R5LdeO0csEuCv/ssn6Glv4E9/9xf4/Euj/MnJLN+6epZff2Aj
      LSE3f/n9y7w6tMhzF2fpaTxMY8SLS6o5s7lkCVs3cUmgAz6XhBC1rGiqS2Z3fyOvnRpGVHIU
      ZZXulghfOebhmdkM0ozBbM82Tjxzhn86ug9FlnhhIMkbk3kAbMummC+w/94tdHY0UTZsfHaV
      7rCEZOs8cXqcrqibdq+Nxy0jKwp2LsuWH3ydg7khTssRXiyH8XduZQA3hmHSGPXR0hDBdmA+
      XcbI50jEQwRCfiynlng3VzL53BND6JaN2zGIKhY5T4ju3XEUj0TaBq9l3yj1tIxvPp+PuOzm
      teHTVHSb754cXz8B3ArpHMf+CeFz9X5vCsGrWWRXi7ZaiVCr+QO9nQRxK4s0cEsZZbXPq8kK
      zvVnG0pWuG9DBK7Hrfp8PmwHpgeGCCcnMfJeDFcTtuNQLVfILST50mCa58ZyzFdq4YWF+QUu
      v5xiur//RhSWJQT/cHyKZEFDGAYKDp1RlUIux6IGiupmQsvynVyWWEDFdHuIxgI0+iyyxTJy
      IEHl7EnujVksVAULCzbbjmyjIezjuZODePJphDdyIzBdtk3ixQLfP34N8cYib2RtHJebaHMQ
      2bEY1mBozkFfTLK/PIO0ZYp5x00sk8GtV+gPBRjYvJVMpIkGCtgOOKUi/+3xCziSgjM+wn+w
      h6iG/Hx3y7tY0CFdMhDlEtemshCN0+cyaelpRQmFyFlgVy1eGkwSGzf49JFuVuYizVVMjl9N
      Egu6yZd0+ppD/3vyAr1dbRkZ366Mcrez7mpt+fluJ/vFcr+7usOM5jR0Gw60BaEuSaysa3zC
      nuTDfQZfyHk50ijYkjRp91gEv/nPfFe5A9HZiUsycCyT3U6aLdkKP7osmBqeYHdXJ2askayk
      orkcRqYyhCSDhaJKor0ZVZKYWSwweCWF9e1nsHDou+c+ws2NbDhyF95SmvuaJZ750Wu8OFnA
      kSSCm7YjQq28Y0uA4YyFmuhgd0zQ160jSRL3Fa/wi/Y1nqrG+JoeZj5doacpRBSHiFtCs2Bi
      scjw1TRXTQjZk5zv2InvgX/HO499k1O772ch3AII1ECQwTcmSSXz+KI+lECAJl1hcWiYTT6L
      0+lmzshNlNN5ZBz8iTCOolAKedCDYSwEzy+AaVgMDC4gaeN8YF8rfk8NxTULfvsrZzh1bQmv
      W8GtyGi6tX4CuBVyO3V9YX1uCDfrU29Z/v+Cx1/LIFbvu7QeYl8Jd3+Dj88cbUe3HEKqQDM0
      VNl1Yw4ll6a1kuJv0xLPL1YZyU/xdxtlEorN3OlhtocTXG5sIKzKfNwZ5aCU5IfB/UwspElP
      TVJyBeluarmhrmyIemht63jTGAhILgWjXMK6nrawnEoSbW4g7lf4wOYEuUyB84VavQIsm0LV
      ZDBlcGq2yvxCASsQQnZUGjqbUFwK00aQ6rUZNFm97gsGyUyROxolVMlmrCIYmUii6RYaKj8I
      dBJwByh5gnxx38dwR0P4rm9yum5SKFRwEAi3B4Csy09JMykuTHKnfoILvQ9jGxausB9bXi6k
      DaZpEXRLFAxBYSlD8vwpHMvia8/EeeyhO2j0K2TLGoMzWWzbwXJAVWTu7A6vzxC23G71wlXF
      9RY54HbcC9ZSo66HWG7XeHYr5F1t3fqTaL02CyEEpWSK7KWLeCIhVLd8w+1bkRVsatFiQnVj
      ZbN882qOibJNRVK4/0OPEN23HyuTZk91jm13bCfe0cxrdozzsQ0slnQunXkDzZYpqnHKFaNW
      2K5QRbYtQmE/juOQm53FV8ziymdpsUp0z17BUVQqkUbubPVwX5cbn+SwmKtw7sosqG7CXd3I
      8SY0w2Z2vsjIYoWwVyZezpByBZCUGuwLko9RJYpp29i2QxiTN5IGhm7RFpAYzJg4ls12r86D
      OxOMpco0u206lTJddgm3UWUsWWV+sYCmmbhlh3DQg4GELSSGYt1E9BKbmgMc+fC7KFRtSjZY
      QkKSBB5VoVqq8JF+lbylkM0VSY6M1J7bG+Wa7SdTtdnREsC0YTxZ4j89uo1fe3gLe3rjb58a
      FMDrct8S8Vci1Gr89moBLzdD8J+m/m89D78ewvppWTGtUCD9+59FHh7COngXDb/7+5iiRuxT
      aZ2/fnqQxpCH//ToVjzC4XP/9Ao/PnkZlz/Elz77Pja1hhCmibBMHLcHhGC+oJMp6ej5LLNL
      Ob55Kc3Za1kAZJfM1gaFDzCFOHIPGjIJxcKjKrhtk6aGMMrSAjOOh6bOZiq5LMVCHsuGluZG
      ckWNz33hBxTiXRTLFlpZw7Ed/uDn9zJnykwmC0T0PPGgipiZ5L3vPkIsFsJBcObyOF994hU6
      WhvZsH0rs/kyJ68uYi4t8ftD32Ji1118eVHitz95N6GAG08+gzo7zd+er7AUa8Xb2oRZKLIr
      YjOuu3hpSsPBYaOZ5T37u3jvO7dhWjZnpvL8xQ+uoGkGD+xqZVern56El1goQK5sMDQ0yvmJ
      NGPuBiRVReBwZ7OXsmayrSXI/o4QjmPjCOntT44L6xGY3xoos1IrdLOgl9VUnmvZA27WboeV
      +lnlELtUhsWFGgLPToNpIFQXiizz3ZPXeGVgAYAHdrVxqC/Ovh0bOD1v0t0QoClSS33uSAJJ
      duNcJ/ZGv0JTwAVNfnZv6kALLjA4fwFdM1BDPiZlD193evnK3m7cyirySnOMputfj2d1/v71
      SaTkHD79dfbv6MWIdaApHgwjj2M7SAJ2d0a5y+/m/LRKm+ng8yiU5CARR0eWBIZp8dRzryPO
      niJ4rowU+RSTUgPJKwMU5hf4fGgn+oIHIhEUl4IkBL70EomRy9wtB+HgHkJ+ldfmQnzphVHu
      itv0ugMsCg8dhRQLlXaqhSJuv5dDXSH+/tP70Cyb1pAHcCgZDuDQElJpObiZg3sdHh9Mc3G+
      hLGwwPFZnWhDmNlcmQOdoRrrZL+NznBALRxtHSxBPULV79yr7eQrvTxXEs16Wa3V2Kv6HX7l
      vdsJ3q+fbyVRehobcH3s05SPvUzgkfcgvB6k6+zPzq4Y3z89RcjnoiPhw3Fs3n+og/19CSI+
      F7GA+pZCD06NQ0aRBFI+h+UPMrBYJuJz8WefPMA3jw1zIWPhOA6ZokHVsG74768U3t+cT3B6
      MsvI0DXsmTFwHCbn0sjdO7CqOh63QkkzCKgyAY9Cwitxf1+Ey4OLOMC4EsajSUxezXB1Pkdx
      IcWvloeIODoDz30P892/QvvefQz96Ee87unEFEGUksQPBjL8gmeWhvEhHNumo8GHE5SRFOgJ
      ODiqiyIOd/eFcRkVzuVlvFcvkhp/ldDHPkUg6GNiqcD50SVSmQp97VGOTxfAgQ9sCtHYGKE1
      5ufD2xNsDgi+mnJBvJGgHw4n7BvRi6os3v4KMesVDFciy1qJplb+Xkso/lkF43p3jJXrr0Vg
      q7Fka55AQtDw6GMYjzyC4zgYpol83bjz8J429vbE8KgyQU+NuGVJoj3u48p8gS+fmUMSgjs7
      guzriiBLMueGF0gce5q+7ARXYz38RmUrVcPmF+/o4P6YyVDSpCq7UF0Sv/f9Yf7bo5sJe2Se
      vZLimcuLxAMqv3K0i5BbQhKCsEfBhYMpSQQCXj7y8EEO7N/BhYk03xlMM5ss0uh3UdYtkgUb
      y3F4fLiK5bKZKck8NTHBaFoDIdiiehj0NdJpFjlHlIvnx/Gg09pJKER4AAAgAElEQVTdg2wr
      BK0MMw3dnM7KNLs8fKKq43K7CHW3Iw+eZ94d5pmlCLGYD1k1SeQWuUaQYP9WLpsOJ6enmfqH
      E0SjIWanM+QqJp2tESZLBi+dn6393/koRzdG+OJ4BUN2c3J4gfbuJuJAybCJp+cwvvYibN2J
      a++Bt9MO4NRE8nW0el+e9ezkK+8vE8N64PoJGHmrwc6yrJ+IS1ivhmclUdafSivXsSwLCYFh
      WzVtjFjub9MYdtfGAWOpKpeWKkwWTAauzXPxygKKS2ZsY4K9XRFkSeLZC7Psm8sTVRUC5Rwt
      IZVMxaLZJzE4n6cqQgghqHgDjCwUyFdNoj4Xx8cynJnKIUuCD+9tJeT1MZvXSKSn+Z3dIfIH
      91HwRrn38E5iPoWnj01j4KevtwlNM/jPj19G1ioEPQotrXEKqPjcGl1nX+D+ShLj7vvw7T3A
      k609LKQrLOkKlXQJxdLZ1BLl35/7V77W/xCaohDwuDkT30IzVR5ZOkdgdJhoZoFGBE2xe5Ba
      Wmhw2Ux4JQZKblSXjOQReHo9FMezZLM6xZKBbVokZJ0DTV5ekwWW7dAUUulNePjuuSSDSxlK
      JY3KlVkq+RKPxFJ0ZAaZWCwQGxkjfjsEcCstjBACh7cGga/WfzWL78pra7ESy5/1xLJeueNm
      QvVKYqg30K22269FrGs923JTFdd1r9laMTxZknCo1QU7MZLmq2dnsWUZhMRsukK5rCEECMO4
      MW9bW4xL850YUpFMvJ0/e882qqZNWLY5/kQaWxfIHhWXXmW+ZPFXT1zij39+L584UEtr2Jvw
      0RP38c3LKc7MFOkTXu7buwnhUihUTUbmM2hBF5evTpPYuhevR8XyuBjKlrEtF4/2hZi2VfJV
      QWtuno8MPI3HqKLHbao7Po29u5kXT44jR8NkXDK+YAKXU8EWErP+BAYSlaqJ7Ti8orRQavXR
      LRU5kF0ipfhJCpXFdIlAROFk2mYiX6Ax7KUv4aXDazPmcnAHPHQ1NTM8mcYX9LG1LcD/+WgX
      I0s625q8jGUdPnikn8WSwb+8dJWQpfHxzT7G3C2MeRrYsVFHaotCOv2zsUC3I3iu1m7GPqy2
      k64cs9rY9WqBVvZZyX6tlgZ9NU3VWnOthKEeft2sBZy7ZAXbcbAdG+HUXBIsIfHtc9Mogdru
      rZXLxEIe6GogGPLSF5cQOAghUaxqeHftoOwVuMfG0MpFOhoipAoaKTXI4fIc2ZKbWX8Cu2Ay
      MJUlVzboibn5w0dqNbsqlsNouopuO8woISqyjVdArmwgxT00JQI8tCHKq7aBYcqUKgaWZaMI
      gc8liDkOixroHi8VXxCpaFEMJzAs8M7PcHj+Itad76e1PcFSpkilJMg++Cj3mTpPp/JYaoT5
      xRzDixUaDvTzRrHIUw0xqkLhjZwL07GwbYdk2cQWEqWFJTJlld/65CF+/qiMLAkyZYPjo2kO
      9USJuCWaWy2Oul1EfSpCLG+W0K5afOelIZ4fr/Ib7+vHtbMVbWkKRxIk09mfjgBWEyhvhRir
      jb3VKVF/bWWd4dXaTyMPrHUawFtVsrdL7PUllRRZwbJqlSAt28JCpmoKwm6JTNViNq8TdEoo
      rlpyLEnX6OxuRFYkrqSTlIplgqEAjREfGwIGQRfMiFZwajAqsmBReJl2tWJbNkEh4/W5+bk7
      ekiE3BiWA5aFIoFHljjSFeLlN6YJl4qMTAsWTYXFksOnNgfxuhXe99hRXvveFa4tlDFMi5hb
      0BdVWarKWGaJZgsKHh/Pbnwn29QqLyf2svD9ixRHx4jKDk3jl7nmbaZJsujsirC5v4GtjkPx
      +Us8c3kSpbmR/vYWnFKBl8fL6LaXuFcm5nWomA6OYUCpjCsU5Ig1z17LJizvp4qJ7aj80dPD
      XF0qcXIix39/72ZC3mUuwWZwdJ7nXrtEU2MDf//SNLmqhX9xlqGpDh7a3cq1lIKCRVU3bo8A
      bm1wWr8WaK0dfnmdelZnrfQlyxqltdKw3IoQl8evVs2xXkV7q1ZzkRHXLZRvwnBDoyTLWJZF
      wRD849kFMhWTd/dH6Ym42d6V4NiVeSzLZlNrlA1xNwNlA1lxE1JsqpUKXr+P7Y1uioUqpiQh
      ud14PF6GJxeJhfy0J/zk7QrlisG2BjeH9mzlQ3tamM9V+eKxCWzH4dOHOtjQ6ONIZ4C93gZG
      Lib56wkXyWyOX75/MwmvjG6YSLLCPf0JrhybpMMv89l3byHmU6joJn/y+AWuliX8epnNmQWc
      dz3A3Rv6+NqTC1Tbe/hlzwSbqmeYNwI82XEXmlFGwoOQBD6/F9kfJB7wcFevn0K+UvPLRyAL
      6I24sUolphZLdHW3EAx5yWVs9gVmUFQ3XiBZsihWDWTHpqrpGIZJ2nBQLYPqlQG+/+w5nh3L
      4kSaKPhbiDYq7AjDhkYvAlD8YbR8Cq90m/EAN0MoALeiotxm8qp614LV+O/1qjnriWqteVb+
      Xi0WeWVb76myVLZ4ajiNLAnetzlGUH0rwVi2jXN9tx7JmHzh9DyaaZPPlyiVNeIhL5JaU3v+
      2uF2wi74H69MocsuNmXGOVIeJ9PYyQlfJ1XbwSpVSJYtquUy4wtZegISR7Y0s7nZx+tjBY4v
      2nR1NfDZXUG+cbXIG4UaDB1mkQcObmB7sx+3BJOZKr/5599kfmqWYGMTic4O1MVJ3LLMYqCd
      SNDNv+02uTi2xHPDi3S2xnl4extDuodLg7OUhEJbS5TDXX5SpsScJvGroz+goZzGkBRGgy38
      aaWHaHsjQbfE2ZkyhxplZo6f5COHOjmlhTljR3FUF45hUimUuMtepLKYRt93gHsjGgG/SkQr
      EPV5GSi7+fzJJUqFEn3k+aAyi9bbz6u+Lo6asyyWbRaUAJpLZcYdI1m2CJpl/s3OIKoisa2/
      l3zVZGhsivGXXn/7tEAAt8uA3EpgXu5zs/VXM6ittc5bYBWre5/eKvXiak0IwYX5Eufmavnq
      Nye8HGj1/4S2a1n70xlROdQRZCJd4dhsmnRJR5VlfnFfGy1BN1sSHq7MZlA8KrZhc6A0iX92
      hEBylhOboowaHnRdwufzMJqsYgdjjGpl3uMyaQypHOoNcmIph6HpWE99h2JoFxMFDxXNQNcy
      sDBH8eHD3N0d4tJ0hqQuIRraKBTzFGdT2JMzmLFOzGoVryHzw8YQV+anmZMj+KoW3Rtb6RHQ
      lpnii+cXeHRPgm3tAUqGw1cuFbjYf5Cu4bNIbe0UNZtsxubSaBHF7cKnCNoaArzevYe/v5pi
      +wY30UAI3XIYnkximIIfVQPE8mkeS16lcdMOVEWgG24KlSLdr/+A7EIXc6aLrHDzCWuB3OUr
      mA98As1r8XpsE4aQkR0LW1II+21Gpkt8e6jIhzfWArZsITg1r/N8KfH2OcPBmw5x9S9+JaLc
      bDe+GZ99s5155SmyzHev5Wqxsq22+69loLsVnJ0RN2FVYnIhz+CEzI4GLx7Xm1kpJFHLdiYA
      VcAHt8awbGj3Sbx0NcX9mxLc2xMGHISApAZx1cGWHV7J2nzrigu/YtMTyXF1KY1W0Yk2Xq/G
      IiRAIE9Pkg55mJrOYFQF3tEBmpmntWEX+bkqDjDjCtGrL9WeBUG+qCG19QICSgVsvQqyCyQZ
      NeBF8Xv48ZSOr2EDckyQcTnkdZuIZPHatTlyi2lGR6bZ3hllvuhQNhyUthZy3e/hR2+k+N7l
      JAXDwaGAGvDSnxnlUsrDYngDkreBTQgCLkHBcVAkgQEIj4dcvIWL+SJNmqBRCFKaoMOyaRcV
      Or02S0WIyBZVUzAt/FzICaKKl4CtkUPFrRcpKAHyVZOqbjKTNIhsdKPIEgEc2oIuyp7A7csA
      P62guRrirKWPX9nW63q8jLyrrbGWXFAfmP+zWJY3xjz0++DJc2NcOOuAafLJIz0sTyWEoFaX
      paYGFYAiwYf3tPDo9iZURTA2t4Su6zQ1xKlYMF8VeIXgasWDg6BowdX5HKVS7X8yimUePdDK
      yFKZRneIoZkM//OJSZJVh4RcZY93Ah6+lwPtW/inqSF0y6Er7ObhOw+xpT2A49i0FhYJGGWK
      Lh8bjAwdW3ro2NeEbcGrORdjeR1Z1JzOyhUTR3Hxo5EKR994lujoJI4T54WzYzRFIximw90d
      TSQ8AqtS5dRojmzFuq6VAbNQYiDYwRa5TLvHxsjm6BkaIXvn3YwrfroTfqZnkjQ3RZA7GpBm
      htBPvs75aAsTcpCdyVGW/F00Kj6iiouwovAD5SDy7mY+tGMDnREVykW+f3oM9fJZ4j1bOF/2
      gxDs3RClY2utXpkqCx7c3obtvN2W4BV4U08sywiz3pKm9dbZNZdcA8HrZYKVLgCr6frXg/ir
      qU9vPJeolTN17BqKZ0v6W/6PteaXBPhVicVcCaOUxyVgcSlFXFLIZ/IUPB48G7eQMB3c/gD+
      zh70awtomsH2tiC/9sBWHEAW8Gdf1VmaSeMA8YCH93z4Mcz+frwFo1a+CIemRJA9fY3XM20L
      DnRH+e3H/5W0Ad79B7n7A/tQXbVs4XcuVvj6uXmCHoX3bokzl6mwNJ/k5ZE0f+naidi+mYTH
      Q2drjJFSiphlcOXSHA2LJkfTQzxmhZjxtrKTDNP+Rj6wN0HRhPGswQd3hCmfGqdRDvE1/FQd
      CX/AS2NAwaho+P1ePmhP0zI3SzE5xnF1K3seOIJeKXDPZ3+Tya67yXdt5I53befBQ/3IEuiW
      wx88tcjrOYWN/mb+4/CzOEc/iRrw8+l3dNdSp19/Z36PygcP9tyeDHBLZOStu/1KtuFmOv+b
      tZU7+2oIdDPWZGV/IX7S5aJ+jvpx9UL1Sutz/RjHcfjAwU6KlVrmhk8c7a1te7fQYi03VVEw
      EQjHQVYUBqZyuIMBJFnG61aJHjlci5hyHPbsC2AYFn5HwyW/aY3ubfDiC/uwgR2bY7g2bsSy
      bSq6dSOKq2LUVMm24yALgb9/I3d+7rfIZwuE+jciyW8+5/ZGH793XzeKJFCw2ZzwcDXq4fHx
      CnfsiuKRHKYMFQ2Z3sosH0qdRUfCHJPwU+QxUeDFaDseQjywrYm7+gJYtsPQQoWIRyYVipMO
      uFn2zrGERDweYmhwjnxR53jG4skRF7Iw6dlucPemRqRrGb4t/AxGetFLMqcnSzx0yEGybGxH
      UNItLAQV2U0s4ucP3r0Z3G5WK0PrOG+zM5xtO8jK6oak1ViQ5etrCalraXXqW702ZzWV5vJ6
      9TAsf19eb6XTXT1ctzohAm6Z//jQpuv/xVsjvupPo/q5I343dksLVd2gIRxgsiiYH5xE1w02
      RWDf5g4uXpujU8+QV3yMlSFdLLKY7kR1KYzPpnhuuowc8OJybHZ2xWobEtAb8/BLR7sZSZb4
      0J6Wmqx0/RRM5yu8MlbCH43yTlmG65XcK4bNt18bIVm12NMV4/CGGKos6E34+dieBvo8VVQJ
      TqUFr6ccus08cTQGgu2ME8CfusJpEeZ8UeCOJfAbEiXToVAxKRY1JsZHuCji7AoEieaLlEQA
      hEB1HDbNDnKhdRsjFYmsWfuPOhE8fWmOVn+U/F13I1dqsc25UoXR42doys6idG+gT9EYr+SQ
      fR5ObHsf2sUk9/UGaUrUguRtBJmSjukIlkr67RPAzeSAm+ng19Lm3MzQtC7NUx2BLBPAymrw
      K1mctU6g5esr/YLW0hytNvZmp89KO0M9IayEK+r3YHpdyJLgzLUU06kisurixPAS87NL/A7D
      7HCyPB7ZwTn/Vgq6wtPHh3n6uePM5zXo3QH+ILYjyOhv+ioJbD60q2m5LuSNBAaVYoV/+dN/
      5J+NNhyXyifv7ee9BzrIFSp8+8UrnMnY+BWD5398kjN7e/jIXb1cmq0gmxq2R8VyHFIFHdvx
      kHRUTiU28b3gVkQhz0hykdzUDMbGjUQVQUby860pQS5V4qNP/i3d6QkmNr6Dr1QeYrbskAjb
      HO4OcKjdQ2zK4WtXTmBt2MzRUo6KpHJNjvH54zP0NIfpP/wODhdMkqaCFvDwWxdSyE6C3myF
      CyfPUpVVstEG/nqoCmKS51+v8nfv3YDc3slfPH6RZy7O09DRQCR6m0LwzRGI63ru1YPWV0Oe
      lbvu7QS0vHXdNw1Vy99XS7q7FtyrGeHq79+qrTyt6t2o62WfelZqZZ/le5YN82UTWXUhyRKO
      x0/Z0gjLBgWXl1MtO2hw+fB5XAwtzrKQzGF5gkiKC7QqkhD0NATQDL0Gz3UNlCzLFA3Bs0NJ
      OqNeOow8lZFRjM4OMEx+9MYcPxzJUNUtyukCDXE/CxfPo+dzPJ9NcXRDBK9h8qN8kIGqwCdM
      Xhwv09ykYmezPNWxlYPf+DyN44PkQo3MRNppscv0+6NYQpAzBE3FJTqy0yiWSWRskKnoHpxI
      gkqxzJ6QSsKnMnvnPVTnX2bI3Yi/L0LVtCgpPiRHILtcjOc0Jk6dQvH6cO3YRRWBZkqomsD2
      eJFaN1xXMwAIFk2Z/OwCcqyZV4YWKeoWfWE/Pq/6dibHvb6/rKJNuZmRajWB9VZtNX66frdf
      SxW7Kuwr+t+ONmjlmqtVk1kNPnirAF3PIjoOSBK8e1crQ8kyxYpBOODGE47xhZTBAV+Fslwz
      XPq8KtsaW/GUtnJ5fJG8qlARCi7h4HOJGwmLrev/lyQkvnxyiu9emMevyvzFY/10dTfy0PgJ
      5qKtpOQ4Jd3CcSAe8VCs1jI0A0T8Kl5VZrwkUSlVmLb9KMk0Cdtg69gYJZeX8tw8zVfO4TY0
      Qo7B0XdsptMzxxP+TQghcOlV7j/xHdK9W5icmOd7ajub/Ca+jjDvqE6yeX4JvRLl6WHItvXT
      byxh6Qbnr03j7tpEqLOz5gc0NUV2dg4kiarsQws3orpdNCRCiL4NzFdqxcZDsk0zFe6JQ8O2
      zVg+lQd2tvDVVyco5Ms/PQGshqwOgpWXboetuVmt39UE6fr51rq+msv07bBVNxO8VxLJaoS9
      fLKtJK61tFMr/wP5OiG9oy/C7o59zOY0GoJu8ppJVevn5OkrzC/kyOSrhBydXJPN//Hxh/AL
      h6HHv8/fjNps9xpsjW4DWAGDxKlL40xPJxE4KLIgGPRy8Hd+lZf/9ThVx8XGkMTOvhayOhxs
      9TGQLDPVn8BVyfORo5uIqBamk+Gr33wZDUGHnqXjriOcLvnQlDDzQ1eI9N3JnuQYuzY3EvDK
      tPsEwuPGX8ywZfA4LZkZvrjl0+R2Jvhwq8zRI7uJhANMf/U87RcvowsZXPvZub2f9+xqZfHa
      KNv6mkGSadnQgNvj4lIpyOxFGduBbQmVPZsjdLeFMapVvjFVxsxlKSsePvP+Axzd1ICQpFrV
      HcfmVx7eyoO72yhUjFp46C2xYZ2tpgF6q2C7EonWu6Mu91lmJVZjjep30DVhWocAvTzPamrU
      22XHlueqX3/lvZXPt9xHkiQsp6Y6DXtdSJKNQBD3ycR9tVfU5JeRJC+TZ3WM4SlmDC+Ljom0
      kOWl4SzhUJCPSAUq4zO84EhsP3uNR+7eg0tRkCSJf/7eMb74jRdQXC4+8rHHOLKji9aQymLe
      4VCHj02Nbmyh0L+lkark4o9/MMxSUeeXjnRxz8YdCBwWFhYwDRMtm6GgGSTdgk7bYn52gdRS
      FqFXeKL7IC/+v9S9d3xc13Xv+z1tep/BoHcQBAtYJFGiSInqXXJvcWLHTnFi59049d7k85Lc
      2DfJfddJfF+cOImvr+3EiWI5rrLlIlmyJKqRoiixEyRIAkTvGEwvp7w/BgMeHJwZgBLzcrM+
      H3IwZ/bZde21fmvtvde+/iHuFmY4oM5xMrSZHBKnzs1yYcGD45Z3c8eePvbt3YIk6Ki6RkHT
      ecrRzvXBPHOqyL5NzWze1sTLL56ikRwfeOAWPB7nSt92+Xfxo2ePkkxlmBmf5D0fuw+3Q6Ko
      GcyUFA4dv8Tm1hg3barDgJWjpMujQG9jYGWMr3oCrAdZaj2rha834oo0p7UzJmvV1a4edpqh
      Flyyg3F2btiNOAPMK9a6AX//5ABPvDbK/i31/P47dyCKoMPK8noip+FxCjw9miWRL4DkRhcl
      ZpI50sNjTDhdPHvDVhaYpqBqTM6nEMUrXp1EMoumG4iaxv6OADuafOgGnDh8gpvrQIiHMDQN
      aWqEEXcT52YyFEoa3z4ySqNHYWtLgEgkgppKE47E0JdSyD4fx0bmWZqcRAk2UBfxsjA7hZJZ
      4nvhNlpu6KLgDVJMZJlazDMlRfhSQuKdQ9MYwQi3bImBYZAp6gwGWzjlaSSWnucjvfVMnDrG
      /q//Fc5MirmRk3T8xm9CsQCSxOjkLJlMDhCWr2oqj7FTFvnATR08uL0BpyLhkGxc46vG8hoe
      ijcwVnI3M0ktJrNClGrvrSnLhklreZkqv5u1kl25dnlaf7OzP+w8POtBJ7NmXEjm+cYLgyzm
      DZ47Ockn7usjqxl88aXLBF0KUbI89eIJujuaiLsMThUz4A6hGQJpZxhBXkLWSvS1R6hTtpMX
      RN52x3UIooCmg2AYfOjhmwl4XcSjQbZvai7XW9OJZeaYHVsE3UHYKeCKh9la7+PG1gDPPfsq
      R04u8Z8HL/NPv/sgQbdMc2cHOzvqOZFvQ9NUps6cwFBLBNQEDb297G6Jcd/xH3G0VCTf9n7m
      51Lc2SIyPuwmkSlynZRg4dIc/+Vkhq//9u00Rxx49SI7h16jJMm0j53llP8WwhNDuJYWEQwd
      8cQbLL12hMiJVxBCERzxbfT6JNRAHUpXH1kVzg+NM54sMJUXeOG5w8iFDH/0a++ipSFsO7Y5
      TeCVsdQ1Xgk2Vl+TZDUOK2TnebmaqAt2Xpb1bA4z81W2T9sZvNU0gfW71XO1UbhUqae5Ddls
      jsL8JIIjQL1TJOh18J1Dozx7fh6HoOOevMhYRmEwMUO/J4c3GmM2u1yPYAyn34N68RT/9JPj
      NNfX0+iXKerw0qVFXrq4wC3iAv2nX+BDt92BsmPnyp6t3Nw8M4//gK87+0gMXGTP9V38en8r
      AZfEVr/BszMjSLrO/JhArqgScJW3dG/as4UH/RqqAX8nFRm5MEJRlBBaupl3uXja4yE3M4f8
      7Mucj7STDTu5p02hf+4yB4qj/Em6E0kUlv9JnDs1yD2TRymePYuYWGQouUT6wJ3ktu1Amplm
      5vb7OffKKR5IjZNKpJhRG9h23U5KosTg4gLfPTLE1/7pcRpv2ke0tRn31p2ce/ppnnzxBL/8
      vjvWrAuJosjLw0l+cH7xzU0AO2aruJ3M1x9txPtSoavB3FZ4UYlKXQ0q2ZW3kaOPdnWq5lq1
      g1nVYJJVKDTHQ3xgfwcDQ9N86IE+ZFGgN+4j6JLxOkSMXBS9qFIQ4MT0PM6GAK6QF0M3cPjc
      oMoYsoN8sJ5L3gbGSkV+cuwyz07rjCzkOJWa5NOHfkzw7GnCf/E58HgASGfyHJHqed3bBqqB
      MG9wabHIDreDXd1xgsEAmVyBLdu7CfmcQDmqWipfxBt3oesG9fUhtEyBialJitkskqKwEG2C
      +nYi8xN0Dx7nnHQjk746JpwqTRE3B/r28rZYiGa3wMKZC/zoyaP8qlpEFQBBoKGQIPTqj/ne
      7gd5ehJ6nGH2qsdJekK8Hu3liBag1OSnpGq4WIB8nrwhraxzKBg0uUQKiqcqD/klnQ7vNVwJ
      Li+vrHYLWpmlmjemGiNVgzVWMm+is5ZTzYtkx8jVPDN2blw77WGGdNb7DqzfV09Ggf/0s/dQ
      LKm4nAqGYbC/O8zfRnfglEVGZzr4y++dRi2VmE2XyC/OoUQEpGAUQxIRE4uoxQKNUoFCfgF0
      nf7ubZzLzzOVLNBIHkUUkOL1CLKMAZQ0gy+9vsBhTxvO5AToKl4jTIPfgWEYbG+Pcf+Dd3J0
      oYQrFuLxgUXetz3KyMgUL754nGxHCHSdU8MF5LpW8qOjXHj+eZzhCG27duPxupmOtaKNTROO
      +HC5naTlZv7o+Cx/eX+MtqCTi7/7++ReeYXOxl6GWgOEdt7AjCox2rCJ64eO8O0hlUsJjeGZ
      MXakLvCx9ttITbnpCaT55MxL6KUSfy1t4TtndOjsR8nncUxP4luY4hPxNE+qOos5jaBTXOHN
      isBsEpI80mRzT/BGyRbjUh3O1GLmagxuvfHRDqZYJa3dOkCtMmrZE1amX89WMKc3T0pBEFba
      YY5KZ50EFeYXhPKeoJZg+b7guC/KFz++H71Y5P/+i1FePT+KujBFtK2TbH07t92wiT339TIx
      Pcc/fPfl8spzZhu/f28PQ/M5OuUefPd3o2zajOEoryHkihpvDC8wocs4MnMIhs7khYsU1RuB
      cojLjCbi9vsQRJGJVJFkJs9ffOFxzl6aYnBA4OfUMTYfeA+3Hejhr0cukpyeIptS0S/P04xI
      KpFhquCnLV1AVmSWpqeZHRlmbHyG6IJO8fAhpNQSm/WzvLb/ExQcDs43d7MjPUqivpVu2cFI
      MkeXusjLhQAnZksgqNyQX6LbUd7SvZUFXpWiyAEnuYCLTMTHpOjjv0+5mZ4WuPDEAJ96aDMR
      j0xJh/npRfxeZVlYvQUNsIYpKV+eXA3WVCZFtUUsOyxdDUbVuoW+Wvm1IFa1PNbTQtadrXZt
      sqZ5s65br1MCzWC2KCAYOhgCt+hTfDQ9wNJEM54b38v07DwlVV3e558l7JYJt/jLGTREV+UX
      cMt8+PYe/vl780wkZfRSkbwgsZQt0bQcquUjB7r4xrEpBJfCXT0hjFyO+YUloBxV7bQY4sNj
      h+jNR3lldz/PnKtHLWjMzKWZnU9Tafb5gXHCPgcSGi3NDXS2xPAE3Dhvuon84cNMbLuBE9tv
      JasaSIUcM9EtNDZv5tP1McZODxJ88ll+VNfCTwUJURDoDwmU8jIJTULVQRJ1BFEi7HeiKDL+
      oIehVIScajA0n2U2XeDY2BJ/++QA6sICn2zOciraRZFruB26LP3LzFnZhWWYdp/Ioj1Gt8bV
      MX9WM4wre2s2YgxbPT9msvM+Vcq27vyspoWsdsV6xvNGtJuGtFUAACAASURBVGM1SCh6PEjR
      RrSUDoLIXs8kARmalkY4efgwD9x8AwtLWXQDbt61aSUPa8TrfKHE6aFprmtykWkT+PtREV0V
      EDNJMvkCglC+DaY56uHuTREee2mI10sF2ho1woLKpK6xOTNHeymJePIkc0NneMcf/A9OJIpM
      DU+iGQJoKi5DJy85EXUNR8BDRoWOzdcRDfsRZInOz/w/TF+4zGOXQZNkHKLB+3e2clN7+WCQ
      KIhsqm9kdsdObplbQLqcoq4pzr42H4997ce8MpohXchRDGfZEYR3kOTJYiu5RBpPcpq6WIx4
      KUXi6Ot8PxkgoQuUgjH+VZaI4mI8JyALgrBiwJqluc7GLqu78oCV0B+rJ8DywCsisk3YkQrz
      Wy31WpKyMpB2jGqFGLUkeLX1ADOMuxrj3Pz+m8nDPFmt7wqCAILAvc0Kl1JNBI0iX0mqfElp
      5T2OcfadOYQ7P4dcv5sJw8Uzx0e5Z3sT3oB35V2ARLbEX3/zED84Pk3Uq9DRFqdjfz2FZJLS
      zBQu+YoWvryY57NPnuf1c1P4nTJb74oRkAz601P8wtArCJLEXKiesbkCX/zH58kpDgJOGXly
      kPpikncWRvh87CYifVtpjDoYnstx8uQgnxo+T6CzlznBwfuvb+L+bQY/ubBIZ9jFdS0BdF0j
      rwl8/+QkE2mVkTPnuXToEE4MHuzv4JPONk6MutDzKnImRVHMcyoncte2JpZODjF08iyiorDZ
      r+Fv7+JvR7PkcwlAQRQg7hHoiDlIJiRkRZLxOF1rBqmkqhT04sYHHuHKKkP5gWlDUnUyM2xF
      sm/ErWi9bNvukr1qknU9hrRqJWsetd61M6ArE7Vau6x1NmuS1afW4JwzihJOk8oXmcwaGCpc
      SNfxnfol8lOTTHluIKMonJ5aZPHQN3jXL7+fUMDDVKrAvxwZ54XTU4xcnKIkOJjIidR5w4RD
      PgzDYNsNPfQ1hcr4v6jxxz88z8W0ircuSINs0Ni/hZ91SHzjy0/guKSDZpDetIV/9u2grq2F
      91wX5dVzs8SGZrkveZI50U1LZyMfv7eViFvi0IjCU2d1Dp8bIDFyFk9rC4vZEn/zvu3c2hXG
      MMpR9NIF+LtnBvnhwBw9XXHywyMsFMvnGH74+hiTm+K0dMTJJFwkRjKgG6SLOuNpncXJKYqZ
      8tnslN7BeFJk4PIShUKJWMjF/T0eAosTvCD4CfiVtRBoPdel3cBtjOxXj62MXGESMxyyK88O
      t9vBDztYsd475lVaWDu51rTMAr+sGsV6NsDcllpGuB1klFMJDGRERaZJUZk3FO7uqKMxqjIT
      aqQzM8+QqnJyNMnBSTddQ/PcvtPDT8/N893jU5BZQsnNYeAsu05npwgGuhAE6Ak7yY0ModU3
      UpDdLGbKAlBSZH7p/k201PmZzPVwdNPNODWNsEti/95NeCeC3N4bYjGn8+SFPGrdfs4aHqYF
      CX9jKy6l3Hc3tXnYHHfx2aV5FucNZEmkPuBEFsv3wC03msdeGuLrzw8iOh2kMgWCXd1Epqdp
      VNO4wxGcHXXUNYQpFcNMy0UWJufpi3gIaAW6utoxsmmchsF4VkFzZFEcEoVCiXqxxL3qOP/o
      asMv6Wh6FS9QWWXajvWaAdn4JFgrQWtJw/XyvZrJZ+fGXI/MNoZZcteCZdbNb3a2jHlS2bWl
      2sbAimb4hT2N6C8NEzcK9MYFPnc2zVA+xMDt72NTU5B3T83y1IsD/GB0Cd1wc2I8ze07oTnk
      IuAQWBi4AIl5FEFAkBQW3hjDmZihvTHOqZEst2fewGjvRL3/ffQ3+XltNEmTU6fz4lEuzIWp
      39rPjr4WBhvfwXt31bN7U5A/ycDE7AKnhucoqDq6pDDSuYO0IJHJizx2Js3uBic74w58DoFd
      9V52NYjkmmN01YfKxvJKFwhMLuXRDXCjsy3sINTWzm880E9YzSAuzPK/Zn3MA7Is43Q7KM6O
      0HLdfvbeuJ0PNvgpFW9FlgTG5rPMpgqcHVlAP/oqosfFP/h34lCLbHWkOXt54soEMEtDwzBg
      44pgw1TNq1ON7LTAmy3PbrLWemaGUNXSVisTql+kV821WvFsVcuzcqtM+9ZN/GF7I+lsnj/9
      8lMsXBpkTlL4yZZmeqO9hAJe9t22i/7J46RzJW7ZHEdMLHCrL4/n/h7+68h55pcWMRQ3gsdL
      Kpcip8QZzniol53cJwRpnZrl0197jVdG0zTGfPwMl9l+6hST0xl+/Ew/48FeHE6ZPe0RBI+L
      dg90xH1s66hHdvsRgPt2t3BiKs0bY0kuzCQZmMkjFQvkCjr37GrDq2couDVez+VJlQzCy6Gp
      xpMFXp7I4gr5uHNrnD98qA9RqIxFCLG7lesGFnjywiKiKBKKhtl67z5+5R17ifrK3ivZWWbr
      zno/XQ0B9vbG4UAXswWDHWmN/ngZ8i+cHbwyAcwemauhqzXwribfavWxwiIrBNENY3mT1BUy
      S/Nat8rYSXrrRKzF2HbY3Zqmkoc1feW3dLbsc2+sC9i+l9d0Cpq2cpZWkUS2Db+G9Ohz5aBQ
      dc38+buvZ3I+Rb8zi/TNbyJls+y96yE+82sP84dfOchQQsfjETHmDJCVctQJZJRYHZNNbRx+
      PkUqW6Jj7iQNiweZ6mji+DOnONTo5NT28vUaRy/O8fD1LSt1DHgcfOT2HqB8g2RzOsOSlGXS
      7UBxw7G5LFIqxf7Tz9Eq5clF49C1G+crg4i7diFGYxTUIsginqCH+pgPUbjCB5U+3dng5eDl
      JKpu8O59m9jX5kcUBMYXcsiyQH3QtbIDdEWQyTIxRSDoVimW8siiSMO2XqTf+q3f+mNFUVYx
      hyAI6JRjWF6N1KtFsiTX3H5gl0+1q1Tt3q1QUS2RK+aRJWklEJX5nzkvKw43M2UFclQW49ab
      ANZ8arWxVn/NLKT55U99lUefeAWn08mO3uZVeaqqysTEBKVSkbzTz/EliXh9nF/RLzCaUfmv
      i428lpJYXEry9YsFxs+cZ3fqMkoxR8odpHH3DuqjPsaWCuQcXnKSj1JeRZZErgvq3C/Psdi1
      jemCSCmdpr/eSZ2WIdnYSWlqAW1ugenOzTS3xPjZA90YgkAip+Jzli+tEwQQ0ZEOPs3ckz/m
      OUcrSU8ICYMGt8BIUYZ0iptKU8yqCo85NvHiZBHtyCt8PR/jjYFRPnzoUXbnJri3O0CguRFD
      Uvj6wbN8+itPc2JknjMJjaQhYyCwmEjR7ILXhpb4+Bde5tuHR7iuK0ZDyLWqX5fyGj84NkEq
      r5EzJFwOB25FWg2BwCQVqw7R6sHcOFXXAJWJV82TY1eOVXpXGM0hK4iiiLq82U2RlbU1sfHp
      W6FLZeXWvLHPbsJsdGHL+re5rEp7AA6dvszERPnapB8ePM4HH7hhTbsrdOvmOK8vOTg5vsSf
      6hJJ2UPG5ednrwvQFnbQMKfy7GSIr2T8dI2e5bFXi9wXHmVRdtHY00rx/CWSmQwlQUHQDYTm
      CI9eKHH88knuuGMXPr/CojvI97fs5Oe3BNj+9gfpOXqKO7f184bq5uh0jidPXiSRLfHbd3Uv
      ++8B3WAsVeKrsZtIOr2Ius49bRJNHg874w5enPYzI3n5aWwbs44ARoOfx6ONiFkNWfbg0Erc
      dPIZtJCB2NbAaKSNr3z3JVJTE0wOX2bbww/j9DkBuLBQ4vM/PoPD5aWg6hQ1nYHxBDsrdQEE
      UeK/f/t1Dp6dxed14I4E6Gvw8ysHulZDoMqAC4KArtlHVrDS1frJ18vDbkFrPcOzQhVmlUUJ
      SajutbHD/Xb52NXDbBvYpbFKfGvg3WoGb+W93b0thCNh0pkcB27YvKbuFS+VpmkoooHfKaEj
      cFiso87rpJjJ883ji3zo+jBuh4LoknhDbOf7bhfDs3MIxydo3dxKwRDIjA7TnMww17KFeH2I
      hDvIPxSaKaQ0si+dJ7qlCwQBXZRw+n346hvwbergifMJXhtLYOgGE6kSyUyB10eW2NsRKrdD
      kpjctJN7unLIksgTF7PImoymKyQzRb4346TQfgOBaAuGZiAYOpHFKRbjrYiGjksrIHq91Ptl
      8AdxyBKSJIIgIIgiommbiaoZXFoyuDFcFnQOWaSz3r9qDUoA0tkcW3d04PMozEzMcXkhx8WF
      3Gov0CrJu6br3ypV9wKZ8b4V31fzFNmls0KZWmQHe8y/WZndLO3NeVeMU/N7Vg1mV661PRVq
      awjx1T/9RWYTGfo64msWCCVJwu/3k81mCQYD3N7rYnghRz5fxOcQ8Tc0omsaT52dI1ZK4/PV
      4fX4CDQF8BoaH9jfSc7h5KnBIqGOLkYuTtG1qZFw2Ecpl6cu4CKdLdHTFCaXS1N0eenQk3SE
      21bqEPMqeBQRhyRwfWuQVLbAvVvrrrRNEEgWdeJOAVmC3U0+ZKnEoeE0j74yRbakkw3VsTXq
      RZ1KsMMHe0MyxxtC6IZB784/wEMJMRRGDYSoEwQ+9v47+Z/fex2nz4e3lKfodIIo4nTJNLbW
      cc+eFiJ+J41hDzs7Kts+Kouk8O6bO/jBmIoO9DQGuLW3npta/Wsh0ApT1GAeK21MC9SW5hVp
      aCcVre+Zn9tBlI3Ut5KnHVOb87N+Wn+3syvMjF/LqVCtvrGwl1jYW0m1ZtJEo1EikQiCIHC3
      32BPe5BLU0t848hlsgLIkkhLQ4QPRFyUvAGMphb8Lpl8ScfnkilpBk0+halWF38+W+Di+Umi
      UR+PKLP8lw8fIKUJdDcE+MJTp3h5bIElxWB8PklPUwzDMLih0UuDT8EliUTcErph4JJXa825
      LDxzfBa/S6KloxlFV9kalblrWxRFErh9RzP9HXF0rRl5OWLbLSv9X455WjIMWIbj4UgQYk0U
      gJaIj7BL53RSw5BFBJeDJdXgE/f1MZos8ujJWaJuhYd6Q0joaJrGjo44R2fHWSzCL93SQVvY
      DXDtL8mrRus5gaxwxvzMDjvbbYbb6CSwhjVcW9e1EMeuvtZya8Elc9qNxjsdWyowMJ1mR1OA
      uE9Z0ZRmewVBwKtA2OtierFA1JlD0wwaO+rwbutdlZ/XIWLoOrIAuxq9jLslutqjXJrJ4kfl
      tsQ5OsL3IHi9jCaLvDSnM5M3mM4bPDO4RHdjWbLKInQEzSH1V2t3zTCoDzg5eDFJyOfkc3dF
      UE8fR3HAu3fWoRoQCLrK9wKI9hE8rOO6qznA3ZvrSBdU3nlDK60hFzOZEt88M09RM9haV977
      /8LlJCeny6eFrmvy0uIrw6WYz8HH97eRLWrEPDKGoWMYy0ci18PatWjj79SW0hv104M9A1fz
      wFRzWdrVvZLemn+tCVGLke3yt0tvxwDZksGnf3iegek0eztC/MkjfStnXCuTS9U10qrIXFYn
      nVUZmkxzcbFId2OAXS1XjEC9Um/MTAr/cvAii7NL3NzgZt/kMdwLsxREmTdGUywVNPweJ4vp
      AugG9QH3Sn551WBkMUe934lTFknkStT5yhMinVf52mvjPP7yJRZTRRKpAicuTLHD56bo92EA
      sqwQDXhX2qobMHB5hmJRpak+TH3Ig5bNlePDOJ3oBngdBr9/XzeGAaqqcW5yiSPjaXqDTvZ2
      RPA5BHL5EmJiEaOgEXVCwCTeDcPAq4h4lfK9bINTGb763MVrowE2JHltcPlGJW21s8N25dtB
      FytcqTxfcfmaXJ3Wss1l2NXT7p2Neoxq3XSp6QbZ5f0v6YK2EhfUvJ6hGjKPHp9mdKnA7kYv
      H7tnE988NMz05CIHz07xgb3tpLMF/vG7L1AsqnzkXQcIB8qS8sJ4gu8cGiZT0JhdzNKsFZHq
      ezg3muEHF5YQBHhEnEIXpwjkk9zWu6vcHuDLr4zwxKlpeuq8BN0KJ8aT3NMbpVebZ2pijhdy
      QaKNEVqbwszNJEhkMqSb/DiWc1gynHTKEoauIwgi3zk+weB8lu1Bg3R6iYJTovGVJ5l2hflO
      5+0UDbij3qA9FmCpKPG5x48xoskslMq3yjzYG+LXbu/mhT/7a/wHn6Or93rUzZt5w1fgjlv6
      bUJlivzry8P88PWx8m7Qt6IB1qMViVfD+LPbEm1+92rwvZ3fvlbdrKFXqpW1EVfnXKbE0+fm
      qPM5ONAToRIm1c4eqDWJAPxOkd+7t4cjIwkOdEdxyWvbk9d05nMqBc0gkddw6waXp9OomsGX
      nxnk7de3cvDIAI9+/yUMAxrqgvzMQzejajqPP3mIfCqJ4PAS7WjibNsOThVLbJtJIwjlqNVS
      Icelhk1E80mMqQno6kLT4dREinRBY2AqjSwK5FSN4xenyGkJnskFUNwOOqLl0CM+xcE3z2fI
      T89x+542MEDLpsmrcZwiLBVUjs+XSKsKx1IG2x1F2iYH8S9O81SshUvp8sGV0bRBSFniW28s
      kgjGUNN5KBXQDDh4boaHW5x4fvRdIqk54vlF+puzHHl6mKmtndQF3ehG2c2uyAr5fI56j4HP
      KSHbMdzysFzVhKgGYUyjvCZt5feKz11VVdstxFZIUg3WiKJY9QSZ3WSw3g9gl+eV6tfuC92A
      7xyf4p9fHcPnkqnzOehv9FVNX037mSfh9kYf/U3+qlAv5JR4qDfMxYU8Nzb7GBgzcDpltLxK
      R9yPIgk01YcJ+jyomk7rMoY3DINMJotjYQg12IjiWF7NFQS2xlzs7fZiaDo/ea2FSUeAUXeM
      O/xROijj/5+7sYXvn5xme6OfE8NzOEYvoXgaeHYxQtbQ8ehGOVCyJJApaORVnYuzeSKjaRyy
      gMPhQFruTq9DJuySSKVUcgWVyyWRu7ZtJzUzQgaZYqGESxFxoGMoHvraolwcyxOVPaSzRQRd
      45aOIA2tcS5u2YV04lU8jQ24HRKtyUW0QhEBN6nZRQqiQn08xOLCArf1eOmJ96y2ASpMUe7h
      N+/jX49x7FyFFextJyWtUMauLEG4cs9vLahSzetTzXVaubhjvb4QBHDKIpIo4JAEFGntOoTV
      BjAbznb9YW6fuY1XNKfG7noXO+tdyKJIo7+e1Nt3MJfM867rm5FFgZ2b2/i7P/4oqqbT1VoH
      gCJLfPRdB2ioCzGlKsx6PGDo9Hjhpq4IHofMbLLAxfkC27tUNEMg6HOv1Gdro59nzs1xZCTB
      7uwE7zBO81lnJ4ZUAnS0kkrYKJIsQMwtIhUl9vY1c3Q4RdTnoKk5sBLPRxYM2ooLPPfGZUrI
      7OmqR4/3UHzvR/j+Fw9z4dIFfD4XvmIdd/R30dEkkpOnOT2xyP5OgemZHO/dv5NgwMOeP/8U
      Tzz6IyZ1mdNug2R+gQfSGUZeep7f/fEAKSRuu3s/79vXiUMW6W8LlCeArVF3FQsB1Tweqxhg
      BQmtlXjmQd2Id8QOS8uyvJKfdcKY8b6dW7IaYwuCgCzLK75+uxtsTJXiXTsbaAm7iXoVNtd7
      V+Vjbre5ftU0nvX8gG4sbzMwHSCSJXlVn7llgfff0GxpA3Q0x9ZUt6M5xsd/5i7+5dg0iYks
      AgYNYScOuVx21O/gwzfEaPCU7RCvtLzTFYEvvjTETwbKZ3L9eo6gmuPOxTOo/i5KQQcP7Gji
      QF8DqaU0nsQs2bFFjogO3nNjA5M5GM4rSCIYOhRLGodfO838yUEMQeJHs71sbfRyU3cY0ik6
      1SwX59xMz7qQRQFRgNzCHPfWG3icIc6HfRQpC71wLMSRhu0UnS5mvU5ysTSOx5+nafQU4xkP
      UOInr19i++4t3NMRQ1HkKxPAvPFsI0xYjapKSeHK79bJUpOxTFSNee0C09qlsbZzI2TdFg3V
      F7N8Tom7eqNV05iZfBVzL08wWZZXnpmh3PhSga+/PkFb2M3b+8vXKdlpSlVVmZ2dxTAM6urq
      qOzxqkaGYSDrOtlMAUEwaA4GkZb7UBQEtreGWFhYQNN1nnjuGAvJHPuu6+bybApJAM2AUjDM
      twvbiBgCNzc42bN7E/VhL6JaIv6jx2BqHF+pCJ5NfL17P0lNoMFdLE9oytpo//WbGbw8zWxG
      oz7oYmudiJSY5nP+szgcWb6QiDCpeXHIIiVNZ3BklucWVXIqbGlycfOWDgRBYGoxz4XxBJ2b
      msr9IgrodfXsaJToPDRNQnLhbmom5HYgySIltcY9wVc7CdaDSpW9ORVj2LB5R0BYuWbV6i9f
      D/+bpWmtdJXPWvW1M4it75rhVq3Q5+b6VKuTnWYyuwgfOzrB4yemcCkiWxp8bF3WLlaIl8vl
      yGbLPvDySnGQWqQbcGRgmmMnxhFFgXtbfQhCdEVjBoNBRFHk5PlxPvuPT6JrOtMzs/Rv62dH
      XEEtqTQKCntueDvNITeCaGpfKgmTYwhqifxCgpYzz9GUU5iKbaL/5h4qgUoEAd52fRdnjg3w
      g9cuEMiM4XNtx7GQpUHLIAgau5jjlbNnWUrfQsDroiESZHh+jk/e3YIsGDz2kzf4xDv30hBy
      0RdxcersKI11PjYtXuah27t4qtBNxK8RkyTqxRL7Wn0YWvkAzpqV4Fp4+K2Qbugb2l8kSeJK
      WO+NGKF2LtBatBHmN3/awcNqGN2s2dbrx40KGEGAlpALlywS9ToIuhVbTZfNF3n97ChaKcem
      tjhut7tKjldIEuD2rfWcHJoj7HWwuyO85lBPKBQiFsuiyBJF3cDndrCvI8y5RY24w6CvOUw8
      uLasYbyMx7bRP38BITXO0ze9kwudO6kTYWej/0r7Mhn0L32eiUEQ/CHmkjkcbj+h3ghHzg6T
      vjDIv86qpMQCS+k8Xo8LByXubJOpDyyHjXGqvDo4w939TfzKvkZ+5ysHeTgzyYf9i4jPHWe+
      /g6keDcAS6JELlfE61bKaxKwHMkB676Ya78b6GpoI25MczqrBqiWdr00te4JtuJ4WH2jjKqq
      KzfTXI0AqTVRBOCdOxvoa/AT9sg0B522guEbPz7MV759EJ/Hyd/8wc/jWI7/s55t9cDORq7v
      CONUJELuK9rXrAU3dzTy6d/8AC+fn+KmnR1sba2jv722W/jMfIGn6m5gHicPJBfQIrFyawyd
      zz19jru3NnBfXwySSwj5DK6uG5CkOFGPQKwuikcRKXb18d1xgaXgPHe3hAiGAgyOLRBV09yc
      vkg+X0fakDg2mibSJbCUSPO5p86Rb+xgThcwigskkEjlCjhyScZHJgn43PzVjxJ89M7NNIac
      5fMADodjFXOUjR0DVdvYeYBrSavCpwj2TGdHVqO4mut0vXwqtoKZccwGtHly2MEca12qOQYq
      cMnuHStJokCD30HQJYOJOccX83zmuyc5enGeuYlJBi6OU1RVmupCRP1uTk6k+fIzFxieSdIW
      9eBxOdbkfWloiqeeeQMpmaC5NY5gab+w7K1pb4xw6/Y2WmMBBMFeQ5rJ45AYS5VQY/X09HXg
      b6kj5IDdYZ2ZuRSHpwo8sDWO5PWSyxV5POGh30iQNiQEv58tcQ8NQTe3TJ9kvyvHYs9uXhjP
      8MMzs0SFEqPzOSZmM8xPzPNCKcKWBh9f/fqTHD85gCFK4A1yS3aEb4V2MO2P0+XM0xGSGTo7
      yLODGeazKnfvaFrrBfr3pnyxsPyXgENRkATRVmrbwRArJjenhTffTrNBWovs8q9leNudOa5V
      jnUiPv7qCN9/bRQB+O0HN7E3V6Qz4mRnT5Q3Bkb482cmWchpSJLI6FKO332gD4dDWekjVdX5
      q+eGObbkpH46wf9sHqelt32lPCuMs4N41ajJp/DxPY2IAownYnjmJ9gZNsgXNVRJ4UBntHy1
      LAK+ex/g90a+zJbEEOOal3+ZbqW0rQ4lEMB4x8/wmW+dRFoyuLPHIFV08Gwiwh3CJA9mhng9
      1MWDu5rZHJb5h+FJjFIR39I0PxOeIRlt4KgQg2SO2/e2o0gCLQGZgX89Sci7BVWjvBBmNuAq
      Ljhtg+cBrjlZOrUaZLEzVK9kYR9V4s3Qm10LMVMlGrUdBLsa9681bXeDH69LxqVI3Li1hS6P
      jqTlEASBgwMLLORUQEDTdObzOqWiisOhrMA1AxFDlsEoossK4jJsMkNiax9U63M7ckrl9Cfn
      CgxOCcQcsDke5hP3dhH2yGCU7y+TLp7Dl5pHAIKCijOfRRHB0A2KgsiCKvBzfV62xBTcLoW5
      VJKHi8O06Sk8WpEXN2+jrz3O/bfu5HsHT1Hf1UE6pqItDjGfSeOPBspuV8MobxRsb0D0uvny
      i0PlrRDmTr1yIkoEbd02/puSYVS/X7cadLCDH9UiyK0uq/qEeasLguX+rK5FrJjeWkfz94r0
      1jSNe3c2sbk5iEuRqA86afO1c+axbzH+WpHpURD0KIos0dUSZl9niJOTWdrrBJrC7pXtIr9z
      32aeOTbCzpYAjW0Na7alVFu80wzQdHCs48E2DIOtMReHh+H0RI4jp6f5v+7ro84XRtNAUEvo
      h1/ggrOOC44mjitxnN7yRjnRMDASCe7uDiEIOiDgFnXCisGYM0xE1RgPN5HTRVxOhfc+tJ83
      lgSCXT08LQi86m5jZ6nAy0MJvvbqLHG3zitnRqnbvJNnLsyTK6hXIJCVAQz939cILpO9J8Ws
      sexUtF3QrFpuSPOnbS3eJIRaT7pbJ3FZQmkrhrXdVvDKGGmahiwLdNZdWXDLlYqEDuwlMTjK
      5MmjOIsJtrdG+M37d/Pdkwn+8run6W4I8L9+dV851ijQHvfzi/dtX7F1KlTLPsmpBt8/t8B0
      usR9PSF6o6vP31rJ0DSkpUVOnJihVCjSQIE/+KU7kCSJgaOnmZ2HQVUhIDsZFb0cfX4QCgVu
      XBhkWFPYtrWTgiYSiTYQjDuYHH6DSd3BWecmniq0UjqbwOGb4YGtdWztbGSccpzavbu7uaMr
      yI0X5vnaq6MYHidaTGJ0fLF8KbkgXNEAVtX2fwL7a5pmG1PULJ3W1NvyvJLe/Jt1vcD8jnnS
      VNtWcTVkznu9dLD6rLO5ntYz07ahEwFkGU9DnHDIS2EuyZ4dHWzqambk2XFyRY2JhSzZoroy
      AcxlV/VEWTTjeKrI0Yk0edUgOpGhO+Ja2dtjpcVsrPRccgAAGPpJREFUiT95YoCxtEqgMYxH
      gIi7yNLSErlUhqmvPcbftN7NjOhiWyHJg90ODp43+OHhIYr7eol7RJqGT6GLMsU6H/lwHO/w
      ed5RuIRWgKJD5VGhk0dfHeO2ngi/ft9WTk6mCXmcdEfKN8Tf3hfjQF8dogDTiQLz6QKjqSJD
      89nqgbFE8c0N+LUkzagdW8e8umuGB9ZJbX3XLi/rHQMVssKnWlrEbtJVyDrRrOVUYz7zO+a6
      WGGKIAiEw2EURaGpSebPfrOR6fkk/b0tOBWJT9zfR0vUw+7OKLHlA+XVqDKhrI6EyrM6j0Jn
      2MVspsTmmBszq1j7aHgqwWy2RFEr5xVqCNK51c/s7CzFfJGsbmCoJXC4UAyNhcUMfhm2dse4
      vcOFU4RA2oXz2GuMd/Uxk5NoGzmNEXeg6DrRYoqQW6UtKCMJBk5JZE9rgExRZ2wxR1PIhSwI
      iIZBoVAiHnBQH3SwBRCFWHkC2OO+mn3070pW1WzWAtVsAjsJa/7dnKYaXAJ7OGVlfDvMXI3s
      4JFdG+yMT3ObZxaSOGSZUCCAYRh0tXroao2v5L+rI8z2thCyWBEYq7WL3YSytqvyPegU+fld
      cfKqTtAplV2zlrYKgsDTr5zmn7/3Ev39OzmyHAox5HVQF3CDVsTpdtL8kQ/z4NkJ5hPztLp0
      Ds4LRGJetjb6EJeji4NBRnLiikSolxy8QoiTQgP7po5x/eUnCEdPkNjyYU4NjrCjt510UecL
      r4wxm1WJyzrbmvzMLyR58cw0dT6ZO/ZuJplTeWR7vOwFsqN/f/l/hWqp6I265Woxd0WL1Mpj
      IzaC1WCsVmfzb3YMbc27FswDePHoef7489/G43Twl7/3QXra6lcd1q9oDklY3Y6rde2a03sF
      DY+jHD/KOukrZzKeeeU054cnuaGvkXv39lA4dITQoz+l+cBNuD/4QZwuB64uF7uu24ogCDz5
      8gDnDs2iIvLqSJJpyUMrGXxZD+0P/yybW+IADDzyCJ9/4gx9lydpz6bYog7yuR+9QOvdd3F6
      7hKiLDJbEhGdDk5NLjCcKDA9Mc/odBpJEjmavoimG2SK6urzAP+RyXw4HuwlcYXsYMh6fWAn
      ge1+X4/spLg5D/PlH+Z62Wm5CuQ7e2mCdCZPOpPn8sQ8PW31q96tGLjVAg9sdHNghbGlqXH0
      gz9B8PiQ7rwf3bP63EOlro/csZvx6QWmEwU+2l7H+B8+RvHSJQYvXuRHwmZ++0P7cQHzqQIL
      6SLdzRG2+OdIFDQ6G8MM5WVGhSAfu20zvZXYiUJ5a3ZCFRmLd7JpMYcrGuGj3gXS51/i6FyR
      o0UXxesOIDqdpJI5fPVBHKXictsFnLJItqjhdchXjGDrYo3+f4QZvJqx7IxVKxQxe1HMf9di
      0Eq6jXpt7MgKG9bD9Hb5WW0Ya72tzyu/PXBgJxdGpgh4PVy/rXNNfa1Mbu7Hog4DkynaI27C
      bnlVmkrfVHapiqIIBhw+MsDjwx6SmsBe/QwP3NFPwOtcVS+Avbt62NnXhiJLKAIEbr+Nsfkl
      Xg1v4sfnE+wdmCHmd/KNY1NkDJE7u0O8b087X3/xIlGfh+vao3gVie6wE0GATDbHkycm+Mbr
      U4SCDp4w2ulsDdElFdgiFNHzk1zvg7M5kd84cgRnaw+tlAhOLtK9uZ7ukoigKGxri9AccnNL
      VwRhbGzMcDqdth1UWt4xZ+188/O3QoZhrNwrcCUQi2H6H7xO9yqGWs+laWZEc9paniFzG6sZ
      qlcbM3W9dpvrUCtdLSeA+dNYhsvWmKi1NKJuwJ89dYGnB2ZpC7v57Lu3EfNeuadsYmKCQqFA
      OBwmHC7H71/MFPmvX3mewZkkbp8bT7yRe7t8PHJ9B0GPQi3fiaDrvHF0kE89PYLidOCURS7M
      Ztl1QzcOh0xQgsvnxzk2NE/Y6+Azv3Azi6pBd9hFRCxwaWyas2dGWVjKcijt5NdOfQupp5cJ
      0cd71YtIooggigyoLj6h7uBXH74eUdf43EtjxAMOPrEnTHPITVd760pf2EKgyndlOZ6nlVRd
      25C63wjJkoRjOXyhgbGy/mAnHWF9Rqy8Zz7JZc1no7jcOhHeClTciMfHms6uTLN7drXWLguT
      WldHmcs3DIOiZnB2Ko1uwFSywFSyQMyrrGjSfD6PYRhks1nC4fKF0wKQmRgjcWmEpCjSd/ON
      PHtB47EXnufdN3fwC3f0UK15hiiyc89mvrSlk1xJ49f/92FKJZVCvoTTIbO5wYsj5ef40DxB
      n5OvnZxFkyQo5KmfGWR3g493Dr+IB5V6tZ6pxTTGfI43BDd5dxO0teMWDQ7mfGg5J5oBnoAP
      TZKZTGukpADtLfFVfbyyGc6O7CStruuo2rVbIpZEceVkUyWYrWEYa6CL9ZRULXejXTvsPmHt
      Mr/5eeXZep4cc3rz92pem1p1rVZvs5FuV99agYSt9a98l0QBWRKZWMqzvyvC/VvjyMsi3Nz/
      4XB45cSdIoucPTvEpbEZHILOjXUuBgoexmZSLKQLPLKnFVmsvbvV7ZAIuB00RTwYhsHD2+t5
      W389e1v97Out447+Rvb21XN4NIXiUChkcxx94VVai0vsl5ZworMoexhNFlFcbu4cPEhjeoZX
      N99CZH6CluFTFCMxFjWRD93STdzv5OauCHf1xZHF1dq/6oEYc6dbF44EgWvmJrXrKDOzm9OY
      YY055mY1g7Habxuph9X2qPWuNX21/GD1hraN1MNqM9RqR7Xxqlon4G39ce7qjeJ2SKsWswzD
      WIE9BlcmbyabZ3t3A52zFwjqBWbqInizDtrrfLx9Txsupfoio7UeB7bWc+vW+lXMZEgCW5oD
      aAb0np7g2OQcc6Oj5FWdsUADL/kjKKUCB6PbuKy1c2JOZ2dnjP/XeZJfGXqK0tEjCMUiairD
      aM+Hcckij2yP2/Y1bCAynP1Aln2zb5WqGZ12g2vdTFbLkKyWhzVNJd1GpXutdGZoUssQvlpb
      wpzXem2yu+/AznGwKn/A57Tf0FOOPFfJW6JYUvnTv3+c189cZl9fC57GVl5IOcjrAn/3CzfR
      U+ddFo7V3cKV59bvVoNdwuCTd/fw+A8O881sjBu2d/Ib923l0lKRH59fQACmHVnSRoL2gITP
      F8KVzTIrCKgISMEguzuitmWZqeodYbUMzWtJ1txqSWi7RSwrZjYMY+VQykZoI7h+vX4wS7pq
      acz51PIEWd+vNQ52mm6jl4qYn1X7Xvms5JfKFDg/PEU6m2d0KUvvzgbSC/P4nBJRnxOE8ga5
      WrsIqtlVlb/N209kp4P3vPs27i2ouBURRRSI+hxsjXtwyiLnNgX54k/O0eoJoS8uUfD4+enb
      biNhyFyId/P2gH9N+VaeWbUSbO2gCsxYi5Ov4SSoIimtTLUehKn8VoFJ5md26TZCtco0wzGw
      v+xvPYO28r2i3dazb6yn1aw2kRn+WDVHZYuzmdHM+VpjrZrtrso7kaCXD7/jVl55Y5AHb9vF
      dTu62d0eoTXkJuJVODWyyODYPP0tPtobYyjy2n1ctfrZ+t0wDFRNxasAK6vC4JEFNF1jW0uQ
      //GhPSiiwNJ0D0MTM7w46sRwuCiWNLzLcGxsIUuuqBEOuCnp0Oi7IveF0dFRw+VyrYIWVuli
      lSi5Qv6arRPIooRTsTfCNwKNqknia+m2rFamlcmtdTQzk1mSWyeoVetWc/XaOQGqBQqu5GNd
      ILQLzGvur/XG36Acm1OWpVXCq6jqfOHHp7m104HPKaG4PLS3NFNNWNbyqlV+03Sdola+e1oU
      yvdZK5K8anJns1mKxSIej4elpSQ/HEzy1KUMOxq8fOLWdi5MJvnDr71O0RC47vouHIrEb+1v
      JuQst0muNLAiIcwbzOzClRiGca1MgLX5stZYrJAdY1XD2ubndsy6UQ1gLsvuPXN+dtEg7LRA
      5XktAWMXK8j8njWtXT9VGNlsdFfD5Fcz/hgGiixVClt5LIkC7XUe3Eq5zmOLWVqajaq7RCuk
      GzC8kKeo6XTH3CjL8KmolRAFCUmU0HQNURCRhNX9UiqVmJmZQdM0SqUS8XicGw0PQ9lpxOQC
      Lzx2kn9ORhhfyBIMeUmXdFwILOW11RPA2nHmEINW4+pqmOet0EYkuB1zW3FltfRXQxUIYYUO
      tTRSLQbfyPt2z2vheOuENwxj1TqIXf+Y83nr46+za1MDxy6MIxk6uHwr0d/M/WHV0AMzWf73
      a5PoCDy0OcLdPeWLuufTGn/75Blifhe/eFc3TkFco70q9cmrOmLRoA746cVFFksCi64It86e
      okGVyDeH2dEcoK/Njy4INPmvxEtamQDVtv3aD1KVPniLtFHGtA6GdcuDNT+re7CW+rWWU3l/
      vXPBVghRKd886BsVIFa4Uqm71WYwP7OWaRcszKp57OpfyWsjNldJU1c0h24YNAQc3LK9i9l0
      ga6YB8Mo39FS2YRn1czyxAjSG+eIluLMOIOcn89zZzfIosCXnhnke4cvA9DT6OehXU0r9ZlZ
      yvPK4Bx9TQHcvih/f+giS4UMnzjgpD2gcGGxgEfNg6riiEb5nVu3cHNHeWKVLQmLEWzX8GpM
      Uu68azcDzMyxUbIbdPNv5vMBlWfVBn4j5VTKMjN0LThU+XwrGseap3kiWCejnaaz04J2NkS1
      9+yurLKmEQURDY3yVhaJ14eWKKo6N/fWkcxrfOv0NKoBj/RFmZtPc25iiTu3NxIPuhBzGaQn
      /pUdiUWkYDuPbX6APS3+FcgUD7kRhPJtN1GfE90oH4kEgc9+/zQ/emOc1qiHjz3cz8BsnoKq
      8+rlRX7xpha0dJL5iSSp627h93Z1E3LLqzWoaTxk86ys1iHWTrymCqCKVKyF4a+8unajnF1Y
      E/OnOf9qeVmFwNVMnGqMtVGqNrmtF2lX8H0F6pjbsN6Eq8XU1npY0686lSYIOBUHqqbx2lCC
      3/nHV9F0gz967y7SssKp2fIBff3UDN9+8hTz6QLPn52mpytOp1vnfbqBBGyKuvlPexsJuJWV
      8j58axetUS9hr4PrOkPlOlG2GbKFstbJl3S6Yx72tIeYTRXZ3xXB61a4Z3cXpW3NKKKBy1nb
      JbzqPEA1tbcGz17xSL1lMgydoloq4yrrwBnlSHGiIK6KWGFmcDuvSNV6m8hsZK+nhaoZ49XS
      rJd2I2SdhFYtYG23HfNbJ5Nd+MX1xr9aHiuChbLfP1MokSuW94glcyVicTeGriNJIvVeBUQB
      h8/F6bkc86UJflAU2H77OzBGhvm7i9D45Dl+7f4+fK7lLReSQbvPYGhslFSdk7DfgyAKCIbO
      f35nPzs6wuzqiLCtOcCnGnyouoFbljg0lubgUILbYioxRcXlctHU1HRFkOhglONhIIrilQmw
      US0gCMI1Y34oY0e9yu5SwzBQkHEqqw2yamT1dNSCdBthavPvVwuf/i3IDpLYwTQzWTWg3e9X
      gwKsfSEKAggS+zbH+d13bCdf1Hno+hZcDpmAS0YSRXY0+jBK2/j8i5cxENhap+ASDNzt7Xxx
      IMuzoyN4Zka4s7+RPd3l4MLJdIHf/czXWFhK8+Btu/iDX33bSh+0RNz88t295XoYBoooIAug
      6gZHx9PMZooUgjqGvPoWz1xR52+fHMAAfvXezfhd4upD8dU6ag2mvIYaYD2qqPpq9bMbYKux
      VUs614JC1t/tjO5a9Ta/s17aVUxV5TC+dWLb1c2uzhvRblc1/pZ3DcPArYi8f1/H8rb2sp14
      Y2tgJd10Vl1JX5CdPNAq0xR0srM9wvOnp2iJemiJXolwoWo6qroMdQqlmnZL5VMSBXY0eFnI
      lViSFLaGZbwez4rQPDeZ5BsvDyOKcPu2BvZ0R9dGhquGBa/WUL1WZGZoOwloTlchc1rz8wo8
      snpIzJrDzng25ysIwoaYv9a5hY3U387gtvrm15PYtYz2au9Xm1jVJkElzUowLXHtxSAAo/NZ
      2uqDSLJEySHzg8ki1xkG79rbxi1b6vG7ZLyuK1tY4hE//+2T7+Hc0CT33rJ9XXtMEAQwDG5t
      83NdoxeXLCKLq+vaFHazuSkAgkDz8k7UVTfFmz//LVdSN0pWrL+eJDMvRlWuW9qoBK68B6sn
      iPV+gI1IdkEQNly2NS+zLWM2cKsuTNVoU6X/NmIcrweV7OpbmeiSJNU8g6AZ5fO36XSJWMTL
      Uq5Ee52nvG0aqPMrq96rTNo9/Z3c0F/RKusL4fL7Ol5FQNNUdFa7ieMBJ5/96I0YQMzvBMOg
      KpdbsbSmaSsM9m9xj3ytelTILNHMzyrpahm9lWd2e2Ws5Zn/rbR5g5DGKqGs9a32jrVNZk1j
      LttcHztJXJHGVgN/I/WoVifr+JvLq7Y4Ze4nEYFbemIIhkFMMvjF3fV8bF/rCoqupK/EPjKX
      bb6yvdb4r/y97KWXJAnN5PGvlBHzO6nzO6+UPTo6ang8njUMVA1GGIZBppD7/w0OyZKMQ5JX
      DehKY01kPT9QK3zJRuGcWaO8mfaaoVAtjWpnYJonqF2Eh2pt3Ei+tdKav9uN/5shwzAQRJGF
      TAm/S0IR7etj3hRo/s0OftmNPwYk3jiGNjPFRMd2Xkw76Y64uKsriCLaOzPWbIWwfv57k6Zp
      FI2Kzikf+7PKsbJ/2EAQzBLDzlIXkEQRaYPwrpoheDW0EShpHRgz3DFDGWu97CaL3TsbmfR2
      NtQ1IUHg2FiKE+NJ7uqLEfHIVW0k8z4ka502soiXHJ8i/Pz3caoFLg1Ncr7zTiZTRXY1eGnw
      2W+RX5kAZgOxmuS7GhV6rcigfCP6BhNvgKRV1zCtxxTrGV+1yMqA5jzNv5vTVKCPneatvFtZ
      FLMLn2L929qOarQeg5nrUO37mvYDo6cG+W8/nWROkzk7leJPHulDEqpv+FvPBq0GW0VRRHIo
      lGQHklrC4fPid0q0h5wEXZJtHFlBEOw3w5m/mxObZ+d/VKoMrRnqbUQyrmd82alrax5WLG7H
      tLaqnbWLehsxaK351oIS1ufW9+3yWI8MVSX53e8gFbsh1IBb1MtaugYMs4N0G4V5gfo4qbd9
      kNT8HH29m/kN2Y3PKeKSBHRTsGfz2K85EWaWAmb8abfn/D8irQAk49qdG9iogVwhuzKrTRq7
      kIUVCFGr7nYQw8y81epaawJe9fhLEg0dTXzsH77K9Jbruefdv7xme7S1bbUESa36Vurl72xH
      6OrAMAzMN5eZkU2lXYIg2BvBZgPIrG7/v+6uJbttGAaCUtxtcoPc/1y5g/sc/bpIYY9GA5Bq
      VNcuNnEkEQQJEByAFOUFfw4Xe1bqS7d5Aee78U70cj4T9nGtTnRAyLPFiP055qWgRmTwSv9e
      BnfHRtDrWv882/DxYf3rq3Vvb01t5t8tZfCrnVWZgDa7Qb0Q4tGVII8RG3+L0PMfMaPxQlqr
      DDVMjo6HYaiCpIqfShuqIJMHhNI/zkrIa1mW1YBY9WnX2en9/domLI/tZDkUZTOty4KBdATr
      kMcmBogevEkRyvcUxJ6wZrBKaTW+aHTqBZqWQcLHtavAbxxH6Ym5DjQOlwnXCjKZImPD3/g/
      b0VHUrCN+ycy8mhGxHvY/9lLSChb9VgUxaAvHR1geBNkPiBv/EjUgnuzoPMoGVQwvAcj80zS
      +uG/Vv6K2DA3aML0+kONb0aRLqL6XlDQiCHmpUv52gOOMMmZjtNol3H4I8HvSS1eHzuvZnRs
      7Nzx2TS/B+eiISleCsZE9WAmJJNDJQsk1AHiBS2UIcpE8UyrsDwnAhSUxVglkhP5rr4SiQ1E
      o+flblWJM/4fvD8mAfZQFOAqhWNKFLNsShbG5dGAVDrhZ3iGirJF7PQi/TN/vh8Ngkgu1ef4
      vIKUysBXbeuK2aIHeccRPjZCeUKvUA2apwgPGsYnvhDOxJ6Tf0/i3NRsCnal1qAED4QosNuz
      Cc/sBkta9c+emGVkOTLIE3nqvXFaKcVm+JyW66Dve/v6OH1smR1PK1hh1ED/i9+TLaWYHYR5
      /zax91VG7UpkY3PPgv8j4RaGyNi9v5WRcDm/jxvFuO7aAKz1hdfTon+Uj/XPfcnyIi+1oMoG
      zGUyh4TeFx3F5fPTJthJwO1YvQ9Qm56Y3FM+1erwYhtlsaLV1OrX0/OSiNSzEX8sg2sublx8
      xEkEtfZsmY4gF9/L9O8D02yb0WF7wlPmsD0RhMLrKm2NfYXtxmd/nE7XV2r5XYppmrbbofca
      88pIdpX8N4SDfe+effZ0qFAFIyPjd6NBnlwmiguUd87kZco8sxvFEcQOJoI3ivhQNEVKf2o2
      74o+KtLs9/Z4LpxtQlLXjtoye0/iqdyvMSkDxZiJc97Z4prCuziQ2GNGEModFDsqBeeUHLU+
      UanKrE1oWCwry4ELe/gMU7bmgvpolRN5Yj+VUtbrABnDaLrKGvKoxB4pghRm23aj90B++Fvl
      7Ll+hAC4T6Ul+5RlQyLYpdqg+DLV9J/pHo11WZYwPdrCC+VBx8tOO+pz5u/PvAzDYOfzuVqx
      F4oGwLIsNs2TTQ8eD8zdZGO3XavIZrEMs0ekAlkuj1MyD0j1fKbc6D7KXivf0p5M//cijqPY
      AUXxnaJf6Gs4nENRglIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      mpxX+4UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab and Heirarchies' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='144' name='Sheet 6' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACQCAYAAABeUmTwAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABl0lEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR96KoFHAM5sswAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      xUHz/wNStk/jNKPpjwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
