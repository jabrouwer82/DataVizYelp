<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ACCIDENT (C##CS347_NOS98)' inline='true' name='oracle.41915.474954919000' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_NOS98' server='128.83.138.158' service='orcl' username='C##CS347_nos98'>
        <relation name='ACCIDENT' table='[C##CS347_NOS98].[ACCIDENT]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ST_CASE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ST_CASE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ST_CASE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VE_TOTAL</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VE_TOTAL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>VE_TOTAL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VE_FORMS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VE_FORMS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>VE_FORMS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PVH_INVL</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PVH_INVL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PVH_INVL</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEDS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PEDS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PEDS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERNOTMVIT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PERNOTMVIT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PERNOTMVIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERMVIT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PERMVIT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PERMVIT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERSONS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PERSONS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PERSONS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DAY]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>DAY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_WEEK</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DAY_WEEK]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>DAY_WEEK</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOUR</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MINUTE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MINUTE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MINUTE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NHS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>NHS</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROAD_FNC</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ROAD_FNC]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ROAD_FNC</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROUTE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ROUTE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ROUTE</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TWAY_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TWAY_ID]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>TWAY_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TWAY_ID2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TWAY_ID2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>TWAY_ID2</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MILEPT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MILEPT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MILEPT</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUD</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUD]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>LONGITUD</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP_JUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SP_JUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>SP_JUR</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HARM_EV</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HARM_EV]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HARM_EV</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAN_COLL</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MAN_COLL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MAN_COLL</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RELJCT1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[RELJCT1]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>RELJCT1</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RELJCT2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[RELJCT2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>RELJCT2</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TYP_INT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TYP_INT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>TYP_INT</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WRK_ZONE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WRK_ZONE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WRK_ZONE</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REL_ROAD</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REL_ROAD]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>REL_ROAD</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LGT_COND</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LGT_COND]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>LGT_COND</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WEATHER1]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WEATHER1</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WEATHER2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WEATHER2</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WEATHER]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WEATHER</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCH_BUS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SCH_BUS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>SCH_BUS</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RAIL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RAIL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>RAIL</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>7</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOT_HOUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NOT_HOUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>NOT_HOUR</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOT_MIN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NOT_MIN]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>NOT_MIN</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_HOUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ARR_HOUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ARR_HOUR</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_MIN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ARR_MIN]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ARR_MIN</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSP_HR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOSP_HR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOSP_HR</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSP_MN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOSP_MN]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOSP_MN</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CF1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CF1]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CF1</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CF2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CF2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CF2</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CF3</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CF3]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CF3</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FATALS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[FATALS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>FATALS</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRUNK_DR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DRUNK_DR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>DRUNK_DR</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSP_TRAVEL_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOSP_TRAVEL_TIME]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOSP_TRAVEL_TIME</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Arr Hour' datatype='integer' name='[ARR_HOUR]' role='measure' type='quantitative'>
      </column>
      <column caption='Arr Min' datatype='integer' name='[ARR_MIN]' role='measure' type='quantitative'>
      </column>
      <column caption='City' datatype='integer' name='[CITY]' role='measure' type='quantitative'>
      </column>
      <column caption='County' datatype='integer' name='[COUNTY]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[DAY]' role='dimension' type='quantitative'>
      </column>
      <column caption='Day Week' datatype='integer' name='[DAY_WEEK]' role='dimension' type='quantitative'>
      </column>
      <column caption='Drunk Dr' datatype='integer' name='[DRUNK_DR]' role='measure' type='quantitative'>
      </column>
      <column caption='Fatals' datatype='integer' name='[FATALS]' role='measure' type='quantitative'>
      </column>
      <column caption='Harm Ev' datatype='integer' name='[HARM_EV]' role='measure' type='quantitative'>
      </column>
      <column caption='Hosp Hr' datatype='integer' name='[HOSP_HR]' role='measure' type='quantitative'>
      </column>
      <column caption='Hosp Mn' datatype='integer' name='[HOSP_MN]' role='measure' type='quantitative'>
      </column>
      <column caption='Hosp Travel Time' datatype='integer' name='[HOSP_TRAVEL_TIME]' role='measure' type='quantitative'>
      </column>
      <column caption='Hour' datatype='integer' name='[HOUR]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column caption='Lgt Cond' datatype='integer' name='[LGT_COND]' role='measure' type='quantitative'>
      </column>
      <column caption='Longitud' datatype='real' name='[LONGITUD]' role='measure' type='quantitative'>
      </column>
      <column caption='Man Coll' datatype='integer' name='[MAN_COLL]' role='measure' type='quantitative'>
      </column>
      <column caption='Milept' datatype='integer' name='[MILEPT]' role='measure' type='quantitative'>
      </column>
      <column caption='Minute' datatype='integer' name='[MINUTE]' role='measure' type='quantitative'>
      </column>
      <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative'>
      </column>
      <column caption='Not Hour' datatype='integer' name='[NOT_HOUR]' role='measure' type='quantitative'>
      </column>
      <column caption='Not Min' datatype='integer' name='[NOT_MIN]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Peds' datatype='integer' name='[PEDS]' role='measure' type='quantitative'>
      </column>
      <column caption='Permvit' datatype='integer' name='[PERMVIT]' role='measure' type='quantitative'>
      </column>
      <column caption='Pernotmvit' datatype='integer' name='[PERNOTMVIT]' role='measure' type='quantitative'>
      </column>
      <column caption='Persons' datatype='integer' name='[PERSONS]' role='measure' type='quantitative'>
      </column>
      <column caption='Pvh Invl' datatype='integer' name='[PVH_INVL]' role='measure' type='quantitative'>
      </column>
      <column caption='Rail' datatype='string' name='[RAIL]' role='dimension' type='nominal'>
      </column>
      <column caption='Reljct1' datatype='integer' name='[RELJCT1]' role='measure' type='quantitative'>
      </column>
      <column caption='Reljct2' datatype='integer' name='[RELJCT2]' role='measure' type='quantitative'>
      </column>
      <column caption='Rel Road' datatype='integer' name='[REL_ROAD]' role='measure' type='quantitative'>
      </column>
      <column caption='Road Fnc' datatype='integer' name='[ROAD_FNC]' role='measure' type='quantitative'>
      </column>
      <column caption='Route' datatype='integer' name='[ROUTE]' role='measure' type='quantitative'>
      </column>
      <column caption='Sch Bus' datatype='integer' name='[SCH_BUS]' role='measure' type='quantitative'>
      </column>
      <column caption='Sp Jur' datatype='integer' name='[SP_JUR]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='integer' name='[STATE]' role='measure' type='quantitative'>
      </column>
      <column caption='St Case' datatype='integer' name='[ST_CASE]' role='measure' type='quantitative'>
      </column>
      <column caption='Tway Id2' datatype='string' name='[TWAY_ID2]' role='dimension' type='nominal'>
      </column>
      <column caption='Tway Id' datatype='string' name='[TWAY_ID]' role='dimension' type='nominal'>
      </column>
      <column caption='Typ Int' datatype='integer' name='[TYP_INT]' role='measure' type='quantitative'>
      </column>
      <column caption='Ve Forms' datatype='integer' name='[VE_FORMS]' role='measure' type='quantitative'>
      </column>
      <column caption='Ve Total' datatype='integer' name='[VE_TOTAL]' role='measure' type='quantitative'>
      </column>
      <column caption='Weather1' datatype='integer' name='[WEATHER1]' role='measure' type='quantitative'>
      </column>
      <column caption='Weather2' datatype='integer' name='[WEATHER2]' role='measure' type='quantitative'>
      </column>
      <column caption='Weather' datatype='integer' name='[WEATHER]' role='measure' type='quantitative'>
      </column>
      <column caption='Wrk Zone' datatype='integer' name='[WRK_ZONE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.301059' measure-ordering='alphabetic' measure-percentage='0.606657' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='FIN_COMPLAINT (C##CS347_ACC2634)' inline='true' name='oracle.41915.481211979200' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_ACC2634' server='128.83.138.158' service='orcl' username='C##CS347_acc2634'>
        <relation name='FIN_COMPLAINT' table='[C##CS347_ACC2634].[FIN_COMPLAINT]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COMPLAINT_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COMPLAINT_ID]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>COMPLAINT_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRODUCT]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>PRODUCT</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUB_PRODUCT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUB_PRODUCT]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>SUB_PRODUCT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISSUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISSUE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>ISSUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUB_ISSUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUB_ISSUE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>SUB_ISSUE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZIP_CODE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>ZIP_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUBMITTEDVIA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUBMITTEDVIA]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>SUBMITTEDVIA</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE_RECIEVED</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE_RECIEVED]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>DATE_RECIEVED</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE_SENT</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE_SENT]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>DATE_SENT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMPANY_RESPONSE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COMPANY_RESPONSE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>COMPANY_RESPONSE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIMELY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TIMELY]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>TIMELY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISPUTE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISPUTE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>DISPUTE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMPANY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COMPANY_ID]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>COMPANY_ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Company Id' datatype='real' name='[COMPANY_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Company Response' datatype='string' name='[COMPANY_RESPONSE]' role='dimension' type='nominal'>
      </column>
      <column caption='Complaint Id' datatype='real' name='[COMPLAINT_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Date Recieved' datatype='datetime' name='[DATE_RECIEVED]' role='dimension' type='ordinal'>
      </column>
      <column caption='Date Sent' datatype='datetime' name='[DATE_SENT]' role='dimension' type='ordinal'>
      </column>
      <column caption='Dispute' datatype='string' name='[DISPUTE]' role='dimension' type='nominal'>
      </column>
      <column caption='Issue' datatype='string' name='[ISSUE]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Product' datatype='string' name='[PRODUCT]' role='dimension' type='nominal'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Submittedvia' datatype='string' name='[SUBMITTEDVIA]' role='dimension' type='nominal'>
      </column>
      <column caption='Sub Issue' datatype='string' name='[SUB_ISSUE]' role='dimension' type='nominal'>
      </column>
      <column caption='Sub Product' datatype='string' name='[SUB_PRODUCT]' role='dimension' type='nominal'>
      </column>
      <column caption='Timely' datatype='string' name='[TIMELY]' role='dimension' type='nominal'>
      </column>
      <column caption='Zip Code' datatype='string' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' inline='true' name='oracle.41914.754624965300' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
              <expression op='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[BUSINESS].[BUSINESS_ID]'>
                </expression>
                <expression op='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[BUSINESS_CATEGORY].[CATEGORY_ID]'>
                  </expression>
                  <expression op='[CATEGORY].[CATEGORY_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[BUSINESS_CATEGORY].[BUSINESS_ID]'>
                    </expression>
                    <expression op='[BUSINESS].[BUSINESS_ID]'>
                    </expression>
                  </expression>
                </clause>
                <relation name='BUSINESS_CATEGORY' table='[C##CS347_JAB5948].[BUSINESS_CATEGORY]' type='table' />
                <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
              </relation>
              <relation name='CATEGORY' table='[C##CS347_JAB5948].[CATEGORY]' type='table' />
            </relation>
            <relation name='BUSINESS_NEIGHBORHOOD' table='[C##CS347_JAB5948].[BUSINESS_NEIGHBORHOOD]' type='table' />
          </relation>
          <relation name='NEIGHBORHOOD' table='[C##CS347_JAB5948].[NEIGHBORHOOD]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[BUSINESS_ID (BUSINESS)]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' value='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS_CATEGORY].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CATEGORY_ID (CATEGORY)]' value='[CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_ID]' value='[BUSINESS_CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_NAME]' value='[CATEGORY].[CATEGORY_NAME]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_ID]' value='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_NAME]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_NAME]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS)]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID (CATEGORY)]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY_NAME]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID (NEIGHBORHOOD)]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NEIGHBORHOOD_NAME]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_NAME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business)' datatype='real' name='[BUSINESS_ID (BUSINESS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Neighborhood)' datatype='real' name='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Category Id (Category)' datatype='real' name='[CATEGORY_ID (CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Category Id' datatype='real' name='[CATEGORY_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[Category Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CATEGORY_NAME]' default='&quot;Zoos&quot;'>
          <bin value='&quot;Burgers&quot;'>
            <value>&quot;Burgers&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Zoos&quot;' value='Other' />
        </aliases>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id (Neighborhood)' datatype='real' name='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id' datatype='real' name='[NEIGHBORHOOD_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
      <group name='[Adult]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='except'>
          <groupfilter function='except'>
            <groupfilter function='union'>
              <groupfilter function='union'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult&quot;' />
                    <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult&quot;' />
                    <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult Entertainment&quot;' />
                  <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult Entertainment&quot;' />
                <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult&quot;' />
              <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult Entertainment&quot;' />
            <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='STATE, CITY'>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CATEGORY_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;ATV Rentals/Tours&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;American (New)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Anesthesiologists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Barre Classes&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Boat Repair&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Burgers&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cards &amp; Stationery&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Christmas Markets&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cosmetic Dentists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Dance Studios&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Divorce &amp; Family Law&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Egyptian&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Electronics Repair&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fences &amp; Gates&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Food Court&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Halal&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Home Organization&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Immigration Law&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Juice Bars &amp; Smoothies&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Latin American&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Masonry/Concrete&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Midwives&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Nail Salons&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Organic Stores&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Pediatric Dentists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Photo Booth Rentals&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Pressure Washers&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Radiologists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Restaurants&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Self Storage&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Skin Care&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Spray Tanning&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tapas/Small Plates&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Train Stations&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Vape Shops&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Wheel &amp; Rim Repair&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Adult&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Adult Entertainment&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Airlines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Antiques&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Audiologist&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bartenders&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Body Shops&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Buses&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cinema&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cosmetics &amp; Beauty Supply&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Day Camps&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Do-It-Yourself Food&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Embroidery &amp; Crochet&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fertility&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Food Stands&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Glass &amp; Mirrors&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hardware Stores&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Home Staging&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Indonesian&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Karaoke&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Leather Goods&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Massage&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mobile Phone Repair&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Naturopathic/Holistic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Orthopedists&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Performing Arts&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Photography Stores &amp; Services&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Poutineries&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Print Media&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ramen&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Roofing&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Session Photography&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Smog Check Stations&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Steakhouses&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tattoo Removal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Trampoline Parks&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Vegetarian&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Wigs&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Aquarium Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Auto Glass Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Beaches&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Botanical Gardens&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cafes&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Casinos&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Country Dance Halls&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dentists&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dominican&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Endodontists&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Health Markets&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Horse Boarding&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Internal Medicine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Knitting Supplies&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Life Coach&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Maternity Wear&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Moroccan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Notaries&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Outlet Stores&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Personal Assistants&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Pilates&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Professional Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;RV Parks&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Real Estate Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Shared Office Spaces&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Slovakian&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Solar Installation&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Surfing&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Television Service Providers&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Trophy Shops&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Video/Film Production&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Wine Bars&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Art Supplies&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bankruptcy Law&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bistros&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bubble Tea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Car Share Services&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chimney Sweeps&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Contractors&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cycling Classes&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Discount Store&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Family Practice&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Flowers&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Gay Bars&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Hair Extensions&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Home Cleaning&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jazz &amp; Blues&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Laotian&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Makeup Artists&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Men&apos;s Hair Salons&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Music &amp; DVDs&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Opera &amp; Ballet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Party Supplies&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pet Stores&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pool Halls&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pubs&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Resorts&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Skate Parks&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sports Bars&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Talent Agencies&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tours&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Used, Vintage &amp; Consignment&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Waxing&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Advertising&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Argentine&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bagels&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bespoke Clothing&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Breweries&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;CSA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cannabis Clinics&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cheesesteaks&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Comic Books&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Diagnostic Services&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Dry Cleaning &amp; Laundry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Eyelash Service&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Flea Markets&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gardeners&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gun/Rifle Ranges&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Himalayan/Nepalese&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hot Air Balloons&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Island Pub&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Landmarks &amp; Historical Buildings&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Local Services&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Medical Transportation&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Motorcycle Repair&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Office Equipment&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Parks&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Pet Adoption&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Police Departments&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Psychologists&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rehabilitation Center&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Scottish&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Shopping Centers&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Specialty Food&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Synagogues&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Thrift Stores&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Uniforms&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Walk-in Clinics&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Automotive&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Beer, Wine &amp; Spirits&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Campgrounds&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Check Cashing/Pay-day Loans&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Comedy Clubs&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Creperies&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Driving Schools&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Event Photography&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fishing&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Furniture Stores&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Grocery&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Herbs &amp; Spices&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Hospitals&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lactation Services&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Live/Raw Food&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Medical Spas&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Motorcycle Gear&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Occupational Therapy&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Peruvian&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Plus Size Fashion&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Psychiatrists&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Reflexology&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Rock Climbing&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sandwiches&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Shoe Stores&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Swimming Pools&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tex-Mex&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tutoring Centers&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vinyl Records&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Yoga&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Active Life&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Airport Shuttles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Aquariums&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Auto Loan Providers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Beauty &amp; Spas&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bowling&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cafeteria&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Caterers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;College Counseling&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Couriers &amp; Delivery Services&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Department Stores&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Donuts&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Estate Planning Law&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Firewood&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Fruits &amp; Veggies&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Golf Equipment&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Health Retreats&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Horse Racing&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Internet Cafes&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lighting Fixtures &amp; Equipment&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mattresses&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mortgage Brokers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nightlife&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nurseries &amp; Gardening&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Paddleboarding&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Personal Chefs&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Professional Sports Teams&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;RV Rental&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Recording &amp; Rehearsal Studios&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Shaved Ice&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Soul Food&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Surgeons&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Television Stations&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Truck Rental&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Videographers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Wineries&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;American (Traditional)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Animal Shelters&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Auction Houses&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Bars&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Boating&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Burmese&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Career Counseling&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Churches&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Cosmetic Surgeons&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;DJs&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Data Recovery&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Elementary Schools&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fencing Clubs&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Food Delivery Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Gift Shops&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Handyman&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Home Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Junk Removal &amp; Hauling&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lawyers&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Mass Media&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Mini Golf&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nanny Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Orthodontists&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Pediatricians&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Photographers&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Pretzels&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Rafting/Kayaking&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Septic Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Skydiving&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Stadiums &amp; Arenas&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tattoo&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Trainers&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Wholesale Stores&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Apartments&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bartending Schools&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Books, Mags, Music &amp; Video&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Business Law&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Carpet Cleaning&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Climbing&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cosmetology Schools&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Day Spas&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Doctors&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Employment Agencies&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Festivals&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Food Trucks&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Gluten-Free&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hats&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Home Theatre Installation&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Insulation Installation&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Keys &amp; Locksmiths&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Massage Schools&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mobile Phones&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Neurologist&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Orthotics&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Periodontists&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Physical Therapy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Printing Services&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Rugs&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sewing &amp; Alterations&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Soccer&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Street Vendors&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tax Services&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Transportation&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Venezuelan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Window Washing&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Allergists&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Arts &amp; Entertainment&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbeque&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Boat Charters&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Buffets&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Car Wash&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chiropractors&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Cooking Classes&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Czech&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Dance Clubs&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Dive Bars&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Electricians&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fashion&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fondue&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;General Dentistry&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Hair Salons&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Home Health Care&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Hypnosis/Hypnotherapy&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jewelry&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Laser Hair Removal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marketing&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Middle Eastern&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Musical Instruments &amp; Teachers&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Optometrists&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pawn Shops&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pets&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Post Offices&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Race Tracks&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Retirement Homes&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Security Services&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ski Resorts&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sports Medicine&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tanning Beds&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Toy Stores&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Vacation Rental Agents&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Wedding Planning&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Afghan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Art Classes&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bail Bondsmen&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bike Rentals&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Brewing Supplies&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cantonese&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Chicken Wings&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Commercial Real Estate&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Dim Sum&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Drywall Installation &amp; Repair&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Eyewear &amp; Opticians&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Flight Instruction&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Gas &amp; Service Stations&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guns &amp; Ammo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hindu Temples&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hot Dogs&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IT Services &amp; Computer Repair&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Landscape Architects&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Lounges&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Meditation Centers&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mountain Biking&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Officiants&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Party &amp; Event Planning&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pet Boarding/Pet Sitting&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Public Relations&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Reiki&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Screen Printing&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Shredding Services&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Specialty Schools&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Szechuan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ticket Sales&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;University Housing&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Watch Repair&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Adult Education&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Architects&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Baby Gear &amp; Furniture&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Belgian&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Breakfast &amp; Brunch&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Canadian (New)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Candy Stores&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cheese Shops&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Comfort Food&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Criminal Defense Law&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Diagnostic Imaging&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Drugstores&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Event Planning &amp; Services&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Fitness &amp; Instruction&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Garage Door Services&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Guest Houses&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Hiking&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Hostels&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Irrigation&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Lakes&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Local Flavor&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Medical Supplies&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Motorcycle Rental&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Office Cleaning&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Parking&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Pest Control&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Podiatrists&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Psychics &amp; Astrologers&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Registration Services&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Scandinavian&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Shopping&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Special Education&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Swimwear&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ukrainian&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Vocational &amp; Technical School&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Zoos&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Airports&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Arts &amp; Crafts&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Banks &amp; Credit Unions&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Blow Dry/Out Services&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Buddhist Temples&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Car Stereo Installation&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Convenience Stores&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Damage Restoration&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Distilleries&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Educational Services&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Farmers Market&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Flowers &amp; Gifts&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Gelato&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Hair Removal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Home Decor&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Hotels &amp; Travel&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Jet Skis&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Laser Eye Surgery/Lasik&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Music Venues&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Ophthalmologists&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Patisserie/Cake Shop&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pet Training&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Portuguese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pulmonologist&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Rolfing&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Seafood Markets&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Skating Rinks&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Sports Clubs&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tanning&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Towing&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Utilities&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Web Design&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Arabian&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Auto Parts &amp; Supplies&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bed &amp; Breakfast&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cajun/Creole&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Challenge Courses&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Colleges &amp; Universities&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Courthouses&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Departments of Motor Vehicles&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Door Sales/Installation&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ethiopian&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;First Aid Classes&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Funeral Services &amp; Cemeteries&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Graphic Design&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hearing Aid Providers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Horseback Riding&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Internet Service Providers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Kosher&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Limos&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Meat Shops&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Mosques&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Nutritionists&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Paintball&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Personal Injury Law&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Playgrounds&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Propane&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Recreation Centers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Salad&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Shipping Centers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Soup&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sushi Bars&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tubing&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Videos &amp; Video Game Rental&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Women&apos;s Clothing&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Amateur Sports Teams&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Amusement Parks&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Asian Fusion&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Barbers&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Boat Dealers&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Building Supplies&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cardiologists&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chocolatiers &amp; Shops&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cooking Schools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Dance Schools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Electronics&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fast Food&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;General Litigation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Hair Stylists&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Home Inspectors&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Ice Cream &amp; Frozen Yogurt&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Jewelry Repair&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Laser Tag&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Martial Arts&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Middle Schools &amp; High Schools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Musicians&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Payroll Services&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Pharmacy&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Preschools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Radio Stations&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Rheumatologists&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Security Systems&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Skiing&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sports Wear&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tapas Bars&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Traditional Chinese Medicine&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Vacation Rentals&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Weight Loss Centers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Art Galleries&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bakeries&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bike Repair/Maintenance&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bridal&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Car Dealers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Child Care &amp; Day Care&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Community Service/Non-Profit&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cultural Center&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;DUI Law&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Diners&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fabric Stores&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Flooring&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Gastroenterologist&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Hobby Shops&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Hot Pot&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Landscaping&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Luggage&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Movers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Oil Change Stations&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Party Bus Rentals&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pet Groomers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pool &amp; Hot Tub Service&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Public Services &amp; Government&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Religious Organizations&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Screen Printing/T-Shirt Printing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Signmaking&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Speech Therapists&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tai Chi&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tires&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Urgent Care&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Watches&quot;</bucket>
            </map>
            <map to='#f26c64'>
              <bucket>&quot;Hotels&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Art Schools&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bangladeshi&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bikes&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Car Rental&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Children&apos;s Clothing&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Computers&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cupcakes&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Disc Golf&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ear Nose &amp; Throat&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Falafel&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Florists&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Gastropubs&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Gyms&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Home &amp; Garden&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Hot Tub &amp; Pool&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Language Schools&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Magicians&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Men&apos;s Clothing&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Museums&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Oncologist&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Party Equipment Rentals&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Pet Services&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Pool Cleaners&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Public Transportation&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Religious Schools&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Scuba Diving&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Singaporean&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sporting Goods&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Taiwanese&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tobacco Shops&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Urologists&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Water Delivery&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Auto Customization&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Basque&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bookstores&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Butcher&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Carpet Installation&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Clowns&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Costumes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Delicatessen&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dog Parks&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Employment Law&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Formal Wear&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Go Karts&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Home Window Tinting&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kids Activities&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Leisure Centers&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Massage Therapy&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Modern European&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Newspapers &amp; Magazines&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Osteopathic Physicians&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Permanent Makeup&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Piano Bars&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Private Investigation&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Real Estate Agents&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Shades &amp; Blinds&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Social Clubs&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Summer Camps&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Taxis&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Travel Services&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Venues &amp; Event Spaces&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Windows Installation&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Acupuncture&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Arcades&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Auto Repair&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Beer Bar&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brasseries&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;CPR Classes&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cambodian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Champagne Bars&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dermatologists&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Doulas&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ethnic Food&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Fish &amp; Chips&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Furniture Reupholstery&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Heating &amp; Air Conditioning/HVAC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hospice&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Investing&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Laboratory Testing&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lingerie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Medical Centers&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Motorcycle Dealers&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Obstetricians &amp; Gynecologists&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Painters&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Personal Shopping&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Plumbing&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Property Management&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Recycling Center&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Salvadoran&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Shoe Repair&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Swimming Lessons/Schools&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Test Preparation&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Yelp Events&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Accountants&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Appliances &amp; Repair&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Auto Detailing&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Batting Cages&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Boot Camps&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cabinetry&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Carpeting&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cocktail Bars&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Counseling &amp; Mental Health&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Delis&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dog Walkers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Endocrinologists&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Financial Advising&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Framing&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Gold Buyers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Health &amp; Medical&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hookah Bars&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Interior Design&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kitchen &amp; Bath&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Libraries&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Matchmakers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mongolian&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Oral Surgeons&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Outdoor Gear&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Persian/Iranian&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Piercing&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Private Tutors&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;RV Dealers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Real Estate Law&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Shanghainese&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Software Development&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Surf Shop&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tea Rooms&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tree Services&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Veterinarians&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Windshield Installation &amp; Repair&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='BUSINESS+ (C##CS347_JAB5948)' inline='true' name='oracle.41918.842183125000' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
              <expression op='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[BUSINESS].[BUSINESS_ID]'>
                </expression>
                <expression op='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[BUSINESS_CATEGORY].[CATEGORY_ID]'>
                  </expression>
                  <expression op='[CATEGORY].[CATEGORY_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[BUSINESS].[BUSINESS_ID]'>
                    </expression>
                    <expression op='[BUSINESS_CATEGORY].[BUSINESS_ID]'>
                    </expression>
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]'>
                      </expression>
                      <expression op='[ATTRIBUTE].[ATTRIBUTE_ID]'>
                      </expression>
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[BUSINESS].[BUSINESS_ID]'>
                        </expression>
                        <expression op='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]'>
                        </expression>
                      </expression>
                    </clause>
                    <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
                    <relation name='ATTRIBUTE_BUSINESS' table='[C##CS347_JAB5948].[ATTRIBUTE_BUSINESS]' type='table' />
                  </relation>
                  <relation name='ATTRIBUTE' table='[C##CS347_JAB5948].[ATTRIBUTE]' type='table' />
                </relation>
                <relation name='BUSINESS_CATEGORY' table='[C##CS347_JAB5948].[BUSINESS_CATEGORY]' type='table' />
              </relation>
              <relation name='CATEGORY' table='[C##CS347_JAB5948].[CATEGORY]' type='table' />
            </relation>
            <relation name='BUSINESS_NEIGHBORHOOD' table='[C##CS347_JAB5948].[BUSINESS_NEIGHBORHOOD]' type='table' />
          </relation>
          <relation name='NEIGHBORHOOD' table='[C##CS347_JAB5948].[NEIGHBORHOOD]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[ATTRIBUTE_ID (ATTRIBUTE)]' value='[ATTRIBUTE].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_ID]' value='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_NAME]' value='[ATTRIBUTE].[ATTRIBUTE_NAME]' />
          <map key='[ATTRIBUTE_VALUE]' value='[ATTRIBUTE].[ATTRIBUTE_VALUE]' />
          <map key='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' value='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_CATEGORY)]' value='[BUSINESS_CATEGORY].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' value='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CATEGORY_ID (CATEGORY)]' value='[CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_ID]' value='[BUSINESS_CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_NAME]' value='[CATEGORY].[CATEGORY_NAME]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_ID]' value='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_NAME]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_NAME]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (ATTRIBUTE_BUSINESS)]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID (ATTRIBUTE)]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_NAME]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_VALUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_VALUE]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_VALUE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_CATEGORY)]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID (CATEGORY)]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY_NAME]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_NAME</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID (NEIGHBORHOOD)]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NEIGHBORHOOD_NAME]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_NAME</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Attribute Id (Attribute)' datatype='real' name='[ATTRIBUTE_ID (ATTRIBUTE)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Attribute Id' datatype='real' name='[ATTRIBUTE_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Attribute Name' datatype='string' name='[ATTRIBUTE_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Attribute Value' datatype='string' name='[ATTRIBUTE_VALUE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Attribute Business)' datatype='real' name='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Category)' datatype='real' name='[BUSINESS_ID (BUSINESS_CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Neighborhood)' datatype='real' name='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Category Id (Category)' datatype='real' name='[CATEGORY_ID (CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Category Id' datatype='real' name='[CATEGORY_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Elite' datatype='string' name='[Calculation_1091006220708935]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ([Parameters].[Elite Year Parameter] = ATTR([oracle.41918.885422395800].[ELITE_YEAR])) Then&#10;    &quot;Yes&quot;&#10;Else&#10;    &quot;No&quot;&#10;End' scope-isolation='false' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id (Neighborhood)' datatype='real' name='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id' datatype='real' name='[NEIGHBORHOOD_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[ATTRIBUTE_NAME]' derivation='None' name='[none:ATTRIBUTE_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='STATE, CITY'>
          <field>[STATE]</field>
          <field>[CITY]</field>
          <field>[NEIGHBORHOOD_NAME]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.335175' measure-ordering='alphabetic' measure-percentage='0.325967' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ATTRIBUTE_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Coat Check&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Good For latenight&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Open 24 Hours&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Accepts Credit Cards&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Delivery&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hair Types Specialized In africanamerican&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Outdoor Seating&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ambience casual&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dietary Restrictions kosher&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hair Types Specialized In extensions&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Parking valet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;By Appointment Only&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Good For dinner&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Music live&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Takes Reservations&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ambience touristy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Good For breakfast&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Music background_music&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Payment Types visa&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ambience intimate&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dogs Allowed&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Happy Hour&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Payment Types discover&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Ambience classy&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Dietary Restrictions soy-free&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hair Types Specialized In kids&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Parking validated&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Corkage&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Good For lunch&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Order at Counter&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Accepts Insurance&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Dietary Restrictions dairy-free&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hair Types Specialized In asian&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Parking garage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;BYOB/Corkage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Good For Kids&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Music video&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Wheelchair Accessible&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ambience trendy&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Good For brunch&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Music dj&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Price Range&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ambience romantic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Drive-Thru&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Has TV&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Payment Types mastercard&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;BYOB&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Good For Groups&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Music playlist&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Waiter Service&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ambience divey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dietary Restrictions vegan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hair Types Specialized In perms&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Payment Types amex&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Caters&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Good for Kids&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Noise Level&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Wi-Fi&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ambience upscale&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Good For Dancing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Music jukebox&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Smoking&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Attire&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Good For dessert&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Music karaoke&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Take-out&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ages Allowed&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dietary Restrictions gluten-free&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hair Types Specialized In coloring&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Parking lot&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ambience hipster&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dietary Restrictions vegetarian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hair Types Specialized In straightperms&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Payment Types cash_only&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Alcohol&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dietary Restrictions halal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hair Types Specialized In curly&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Parking street&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;EDH&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;XGL&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;NTH&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MLN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.41914.754624965300'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.41915.481211979200'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.41915.474954919000' target='oracle.41914.754624965300'>
      <column-mapping>
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.41915.481211979200' target='oracle.41914.754624965300'>
      <column-mapping>
        <map key='[oracle.41915.481211979200].[none:STATE:nk]' value='[oracle.41914.754624965300].[none:STATE:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Other Categories By Type' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Category Name' />
        <param name='target' value='Other Categories By Type' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Category Name' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Athletics By Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Popular Sports By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Archery&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bowling&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Boxing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Climbing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cycling Classes&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Dance Studios&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Disc Golf&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Fencing Clubs&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Fishing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Hiking&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Mountain Biking&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Paddleboarding&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Paintball&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Pilates&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Rafting/Kayaking&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Rock Climbing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Scuba Diving&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Skate Parks&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Ski Resorts&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Skiing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Skydiving&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Soccer&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Surfing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Swimming Pools&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Tennis&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Tubing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Yoga&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CATEGORY_NAME:nk]' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Archery&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter from='&quot;ELN&quot;' function='range' level='[none:STATE:nk]' to='&quot;NTH&quot;' />
              <groupfilter from='&quot;NY&quot;' function='range' level='[none:STATE:nk]' to='&quot;XGL&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='692' />
            <format attr='height' field='[oracle.41914.754624965300].[none:STATE:nk]' value='243' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' />
              <color column='[oracle.41914.754624965300].[avg:STARS:qk]' />
              <text column='[oracle.41914.754624965300].[none:STATE:nk]' />
              <text column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[none:STATE:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Counts By Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([REVIEW_COUNT])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;ATV Rentals/Tours&quot;' function='range' level='[none:CATEGORY_NAME:nk]' to='&quot;Resorts&quot;' />
                  <groupfilter from='&quot;Retirement Homes&quot;' function='range' level='[none:CATEGORY_NAME:nk]' to='&quot;Zoos&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' direction='DESC' using='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]'>
          </sort>
          <filter class='quantitative' column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]</rows>
        <cols>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab and Heirarchies'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS+ (C##CS347_JAB5948)' name='oracle.41918.842183125000' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.842183125000'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[REVIEW_COUNT]' derivation='Count' name='[cnt:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[NEIGHBORHOOD_NAME]' derivation='None' name='[none:NEIGHBORHOOD_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STARS]' derivation='Sum' name='[sum:STARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:CITY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Ahwatukee&quot;' function='range' level='[none:CITY:nk]' to='&quot;Buckeye&quot;' />
              <groupfilter from='&quot;Cambridge&quot;' function='range' level='[none:CITY:nk]' to='&quot;El Mirage&quot;' />
              <groupfilter from='&quot;Fitchburg&quot;' function='range' level='[none:CITY:nk]' to='&quot;Goodyear&quot;' />
              <groupfilter from='&quot;Guadalupe&quot;' function='range' level='[none:CITY:nk]' to='&quot;Las Vegas&quot;' />
              <groupfilter from='&quot;Lasswade&quot;' function='range' level='[none:CITY:nk]' to='&quot;Musselburgh&quot;' />
              <groupfilter from='&quot;NELLIS AFB&quot;' function='range' level='[none:CITY:nk]' to='&quot;Newington&quot;' />
              <groupfilter from='&quot;North Queensferry&quot;' function='range' level='[none:CITY:nk]' to='&quot;Old Town&quot;' />
              <groupfilter from='&quot;Paradise Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;South Gyle&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;South Queensferry&quot;' />
              <groupfilter from='&quot;St Clements&quot;' function='range' level='[none:CITY:nk]' to='&quot;Straiton&quot;' />
              <groupfilter from='&quot;Summerlin South&quot;' function='range' level='[none:CITY:nk]' to='&quot;Sun Prairie&quot;' />
              <groupfilter from='&quot;Sunrise Manor&quot;' function='range' level='[none:CITY:nk]' to='&quot;Victoria Park&quot;' />
              <groupfilter from='&quot;W Spring Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;chandler&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;EDH&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41918.842183125000].[none:CITY:nk]</column>
            <column>[oracle.41918.842183125000].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[oracle.41918.842183125000].[cnt:REVIEW_COUNT:qk]' value='15' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]' value='18' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41918.842183125000].[sum:STARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#c0bdc5</color>
                <color>#b6b1c0</color>
                <color>#ada6bb</color>
                <color>#a49ab7</color>
                <color>#9b8fb2</color>
                <color>#9285ad</color>
                <color>#8a7ba9</color>
                <color>#8271a4</color>
                <color>#7a689f</color>
                <color>#735f9b</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41918.842183125000].[sum:STARS:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41918.842183125000].[none:STATE:nk] / ([oracle.41918.842183125000].[none:CITY:nk] / [oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]))</rows>
        <cols>[oracle.41918.842183125000].[cnt:REVIEW_COUNT:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Foods By Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;African&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;American (New)&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Arabian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Argentine&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Asian Fusion&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bagels&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bakeries&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bangladeshi&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Barbeque&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Belgian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bistros&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Brazilian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Breakfast &amp; Brunch&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Burgers&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cambodian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cantonese&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Caribbean&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cheesesteaks&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Colombian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Comfort Food&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cuban&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Czech&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Delis&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Dominican&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Egyptian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Ethiopian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Ethnic Food&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Fast Food&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;EDH&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;WI&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='654' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41914.754624965300].[avg:STARS:qk]' num-steps='5' palette='tableau-red' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' />
              <color column='[oracle.41914.754624965300].[avg:STARS:qk]' />
              <text column='[oracle.41914.754624965300].[none:STATE:nk]' />
              <text column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[none:STATE:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Map By Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Hotels&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Nightlife&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Restaurants&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LONGITUDE:qk]' field-type='quantitative' max='-12799692.270824492' min='-12841824.502693756' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LATITUDE:qk]' field-type='quantitative' max='4347104.0598019874' min='4289717.0543248868' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
              <lod column='[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[avg:LATITUDE:qk]</rows>
        <cols>[oracle.41914.754624965300].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Map By Neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[NEIGHBORHOOD_NAME]' derivation='None' name='[none:NEIGHBORHOOD_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Hotels&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Nightlife&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Restaurants&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LONGITUDE:qk]' field-type='quantitative' max='-12800759.259663519' min='-12840922.061531108' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LATITUDE:qk]' field-type='quantitative' max='4331026.924064558' min='4299999.4028371088' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' />
              <lod column='[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[avg:LATITUDE:qk]</rows>
        <cols>[oracle.41914.754624965300].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Other Categories By Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Adult&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Adult Entertainment&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Aquariums&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Arcades&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bars&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Beauty &amp; Spas&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Dance Clubs&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Festivals&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Gyms&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter from='&quot;FIF&quot;' function='range' level='[none:STATE:nk]' to='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;SCB&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;XGL&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='643' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' />
              <color column='[oracle.41914.754624965300].[avg:STARS:qk]' />
              <text column='[oracle.41914.754624965300].[none:STATE:nk]' />
              <text column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[none:STATE:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='FIN_COMPLAINT (C##CS347_ACC2634)' name='oracle.41915.481211979200' />
          </datasources>
          <datasource-dependencies datasource='oracle.41915.481211979200'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.41915.481211979200].[none:STATE:nk]</rows>
        <cols>[oracle.41915.481211979200].[none:STATE:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style>
      </style>
      <size maxheight='1000' maxwidth='1000' minheight='1000' minwidth='1000' />
      <zones>
        <zone h='32200' id='1' name='Athletics By Type' show-title='true' w='90400' x='500' y='1100'>
        </zone>
        <zone h='14250' id='6' name='Athletics By Type' param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' values='relevant' w='6100' x='89300' y='10125'>
        </zone>
        <zone h='40100' id='7' name='Foods By Type' show-title='true' w='97300' x='800' y='31600'>
        </zone>
        <zone h='6300' id='13' name='Foods By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' w='14000' x='78000' y='42600'>
        </zone>
        <zone h='6250' id='14' name='Athletics By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' w='14000' x='84000' y='1125'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style>
      </style>
      <size maxheight='1400' maxwidth='1000' minheight='1400' minwidth='1000' />
      <zones>
        <zone h='37714' id='1' name='Map By Neighborhood' show-title='true' w='76800' x='1600' y='857'>
        </zone>
        <zone h='31643' id='7' name='Map By Neighborhood' pane-specification-id='0' param='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' type='color' w='16300' x='79600' y='3000'>
        </zone>
        <zone h='31857' id='8' name='Crosstab and Heirarchies' show-title='true' w='76200' x='1100' y='38714'>
        </zone>
        <zone h='12286' id='13' name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' values='relevant' w='16000' x='79200' y='58500'>
        </zone>
        <zone h='9429' id='14' name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' values='relevant' w='15400' x='79400' y='47643'>
        </zone>
        <zone h='6286' id='15' name='Crosstab and Heirarchies' pane-specification-id='0' param='[oracle.41918.842183125000].[sum:STARS:qk]' type='color' w='14000' x='79800' y='41429'>
        </zone>
        <zone h='26429' id='16' name='Map By Category' show-title='true' w='49400' x='900' y='71643'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard'>
      <active id='6' />
      <zones>
        <zone name='Athletics By Type' param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' values='relevant' />
        <zone name='Foods By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
        <zone name='Athletics By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Counts By Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</field>
          <field>[oracle.41914.754624965300].[none:CITY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Athletics By Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
            <card param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[avg:STARS:qk]</field>
          <field>[oracle.41914.754624965300].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Other Categories By Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
            <card param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[avg:STARS:qk]</field>
          <field>[oracle.41914.754624965300].[none:CITY:nk]</field>
          <field>[oracle.41914.754624965300].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map By Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map By Neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]</field>
          <field>[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Foods By Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
            <card param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[avg:STARS:qk]</field>
          <field>[oracle.41914.754624965300].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41915.481211979200].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 2'>
      <active id='14' />
      <zones>
        <zone name='Map By Neighborhood'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
        </zone>
        <zone name='Map By Neighborhood' pane-specification-id='0' param='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' type='color' />
        <zone name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' values='relevant' />
        <zone name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' values='relevant' />
        <zone name='Crosstab and Heirarchies' pane-specification-id='0' param='[oracle.41918.842183125000].[sum:STARS:qk]' type='color' />
        <zone name='Map By Category'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstab and Heirarchies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41918.842183125000].[sum:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' values='relevant' />
            <card param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.842183125000].[none:CATEGORY_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:CITY:nk]</field>
          <field>[oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Counts By Category' width='192'>
      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
      Np3lXZ4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Athletics By Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAGzElEQVR4nO3dS2xU5x2G8Xc8Fw+D7RhMDDE2hpAbBpOmAuIaVapqISCN0khV2qrqou2m
      mywqZZNFK7UL1O6iSpEaVUo3kSqRNopIFRoKKbm1YFBxCFW4xLGwjU0wtpnBGc/MmfE5XUC6
      ioQVsA/wPr/VHGtk/Y81z3zfOZqRE1EURQJM1cU9ABAnAoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoC11Jf9cHp6WqVSabFnWVBRFKlWqymdTsc9Cm4jCZd/kBEEgfL5vFpb
      W+MeBbeRL10B7nblclmzs7Nxj4HbgGUAIyMjevXISyrWCnGPgphZBiBJQ8UBTQajcY+BmHEX
      CNasA0g3btWzO3+tloTUsvJ7+v0zL2j9PS26977dem738/pu72/06MrOuMfEArLdAklStTim
      5JJ16lqW09z6b6mlsUOPNLdpsqlLqZlRZXK9yqa4bXo3s14BFF7UwMSUHlrTpy3Lc3r9o8Pa
      1LlZbc3tGhgdjHs6LALvABTp3PkTWrvhJ2pLfKKDn55S46oderS5TueLF+MeDovAPABpptCv
      cOmDGr/Qr6v5AY3UGpQoD2tyhlukDqyvASSpVL6gfR/s0dXxU1J0RQeOv6yVGlIhKOm/g39T
      oTAV94hYQPYBhHMlnTiz9//Hw6N/1/D1x6fPvxXPUFg09lsgeLMOoC7ZoNZ71ih7/a+QrW/R
      qqYV8Q6FRWUdQCrbrh/2vaDd67uVSTZo1/Y9+sHGb8Y9FhaR9TVAUDyr1478Wb/o/Zny9Z9q
      a/Yz/fHYu9q68Vn1retWVBnTG//5k5pWP6Nvr31YmXS9hs6+rOPlTj35yHbl6uZ05MMXdXD0
      bNyngq/IegWQIo1f2q/9Y9KPH9+hN46/pMlwuZ7YtEUH+/eov1Cnn277kb7T1a1/HP2tTk6V
      1dnUqubGFToz8rYuBDn1djwc90ngJlivAJIUhSV9MnFCY82DOn75M+WWblayOqnp2csqzowp
      s/pBVapXVChNq+HzC4qyKbW3PKaH0vdpJplUqDDuU8BNMF8BrgnDUOFcWaGkSjCuofIyPbnt
      OT39wDYdPbNPZ2eW6Kme57V7ww7N1QI1ZjOaCQpKpxt177L2uMfHTbBfASRpYuxN/WHy2ntB
      tTqlVw//Um3NqxQFU7o8G+iJlZP6eGJA5dRqXZka0/6Pf6VVjU0qVf6qkC/V3NEIQFKtmtel
      6hdHkWZLFzVYuvZZoLq6eg1NT6mnvVeVq+/o3YtnVCjOqDAT27i4hQjgBsKwomOnXtTJ0/UK
      5yqqhnNxj4RbiADmI5pTpcqX6O9GXATDGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHAGgHA
      GgHAGgHAGgHAGgHAGgHAGgHAGgHAWuqGz4gqOvn2IY0m7teuvrU69MorCtY9rp1f69B7/zyg
      xIpOTV+Rnt7Zo0yKnnBnmccrNqVMMKp/H31HE2Pn9Je3Dmvvvn/p8viwPjjwvvL5Ub13YlC1
      MFr4aYFb7MYBJJJa09Wlq8UJfXSsX9nmDjUXh3V6eFjTdQ+ooykjXvq4U81rz5Lr2KT24iXt
      ff2oHnvq++rZtFSvvXlYbVs2KpdKLvSMwIKZVwCJ5HL1fGOtPg9XaOf2zerb1q3SbFJbuzco
      k0wow9Yfd6hEFEXz2sHUgrLK1Ui5XFaJsKbZSlX19Vklopoq1UhLshklEomFnvcrC4JA+Xxe
      ra2tOnfunH536OeaDEbjHgsxu/FdoC+emMmqIXP9IJnW0lz6+kFGuXn/FuD2wuYF1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1lJx
      DxCXrzfvUmVuNu4xELP/Acy7pi4TS9THAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Other Categories By Type' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Map By Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map By Neighborhood' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Foods By Type' width='192'>
      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
      mFz64/p9AQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='Sheet 6' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAYAAACRfFAzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABmUlEQVR4nO3SQQ0AIBDAMMC/58MDH7KkVbDH9szMgpjzOwBeGJck45JkXJKMS5JxSTIu
      ScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45Jk
      XJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYl
      ybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKM
      S5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgk
      GZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5Jx
      STIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck
      45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuSRePYgUc7kJNEQAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab and Heirarchies' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
