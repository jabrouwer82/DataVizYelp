<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Stars' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='4' min='1' />
      </column>
    </datasource>
    <datasource caption='YELPER+ (C##CS347_JAB5948) (2)' inline='true' name='oracle.41918.885422395800' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ELITE_YEAR_YELPER].[ELITE_YEAR_ID]'>
              </expression>
              <expression op='[ELITE_YEAR].[ELITE_YEAR_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[YELPER].[YELPER_ID]'>
                </expression>
                <expression op='[ELITE_YEAR_YELPER].[YELPER_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[YELPER].[YELPER_ID]'>
                  </expression>
                  <expression op='[REVIEW].[YELPER_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation name='YELPER' table='[C##CS347_JAB5948].[YELPER]' type='table' />
              <relation name='REVIEW' table='[C##CS347_JAB5948].[REVIEW]' type='table' />
            </relation>
            <relation name='ELITE_YEAR_YELPER' table='[C##CS347_JAB5948].[ELITE_YEAR_YELPER]' type='table' />
          </relation>
          <relation name='ELITE_YEAR' table='[C##CS347_JAB5948].[ELITE_YEAR]' type='table' />
        </relation>
        <cols>
          <map key='[AVERAGE_STARS]' value='[YELPER].[AVERAGE_STARS]' />
          <map key='[BUSINESS_ID]' value='[REVIEW].[BUSINESS_ID]' />
          <map key='[ELITE_YEAR]' value='[ELITE_YEAR].[ELITE_YEAR]' />
          <map key='[ELITE_YEAR_ID (ELITE_YEAR)]' value='[ELITE_YEAR].[ELITE_YEAR_ID]' />
          <map key='[ELITE_YEAR_ID]' value='[ELITE_YEAR_YELPER].[ELITE_YEAR_ID]' />
          <map key='[FANS]' value='[YELPER].[FANS]' />
          <map key='[REVIEW_COUNT]' value='[YELPER].[REVIEW_COUNT]' />
          <map key='[REVIEW_DATE]' value='[REVIEW].[REVIEW_DATE]' />
          <map key='[REVIEW_ID]' value='[REVIEW].[REVIEW_ID]' />
          <map key='[STARS]' value='[REVIEW].[STARS]' />
          <map key='[TEXT]' value='[REVIEW].[TEXT]' />
          <map key='[YELPER_ID (ELITE_YEAR_YELPER)]' value='[ELITE_YEAR_YELPER].[YELPER_ID]' />
          <map key='[YELPER_ID (REVIEW)]' value='[REVIEW].[YELPER_ID]' />
          <map key='[YELPER_ID]' value='[YELPER].[YELPER_ID]' />
          <map key='[YELPER_ID_STR]' value='[YELPER].[YELPER_ID_STR]' />
          <map key='[YELPER_NAME]' value='[YELPER].[YELPER_NAME]' />
          <map key='[YELPING_SINCE]' value='[YELPER].[YELPING_SINCE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YELPER_ID_STR]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YELPER_NAME]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_STARS]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>AVERAGE_STARS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>17</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPING_SINCE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[YELPING_SINCE]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPING_SINCE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FANS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[FANS]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>FANS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_ID]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>REVIEW_ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID (REVIEW)]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEXT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TEXT]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>TEXT</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[REVIEW_DATE]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>REVIEW_DATE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[REVIEW]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ELITE_YEAR_ID]</local-name>
            <parent-name>[ELITE_YEAR_YELPER]</parent-name>
            <remote-alias>ELITE_YEAR_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID (ELITE_YEAR_YELPER)]</local-name>
            <parent-name>[ELITE_YEAR_YELPER]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ELITE_YEAR_ID (ELITE_YEAR)]</local-name>
            <parent-name>[ELITE_YEAR]</parent-name>
            <remote-alias>ELITE_YEAR_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ELITE_YEAR]</local-name>
            <parent-name>[ELITE_YEAR]</parent-name>
            <remote-alias>ELITE_YEAR</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Stars' datatype='real' name='[AVERAGE_STARS]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Elite Year' datatype='string' name='[ELITE_YEAR]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Elite Year Id (Elite Year)' datatype='real' name='[ELITE_YEAR_ID (ELITE_YEAR)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Elite Year Id' datatype='real' name='[ELITE_YEAR_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Fans' datatype='real' name='[FANS]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Review Date' datatype='datetime' name='[REVIEW_DATE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Review Id' datatype='real' name='[REVIEW_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='Text' datatype='string' name='[TEXT]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Yelper Id (Elite Year Yelper)' datatype='real' name='[YELPER_ID (ELITE_YEAR_YELPER)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Yelper Id (Review)' datatype='real' name='[YELPER_ID (REVIEW)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Yelper Id' datatype='real' name='[YELPER_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Yelper Id Str' datatype='string' name='[YELPER_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Yelper Name' datatype='string' name='[YELPER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Yelping Since' datatype='datetime' name='[YELPING_SINCE]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.443831' measure-ordering='alphabetic' measure-percentage='0.298343' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='BUSINESS+ (C##CS347_JAB5948)' inline='true' name='oracle.41918.842183125000' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
              <expression op='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[BUSINESS].[BUSINESS_ID]'>
                </expression>
                <expression op='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[BUSINESS_CATEGORY].[CATEGORY_ID]'>
                  </expression>
                  <expression op='[CATEGORY].[CATEGORY_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[BUSINESS].[BUSINESS_ID]'>
                    </expression>
                    <expression op='[BUSINESS_CATEGORY].[BUSINESS_ID]'>
                    </expression>
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]'>
                      </expression>
                      <expression op='[ATTRIBUTE].[ATTRIBUTE_ID]'>
                      </expression>
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[BUSINESS].[BUSINESS_ID]'>
                        </expression>
                        <expression op='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]'>
                        </expression>
                      </expression>
                    </clause>
                    <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
                    <relation name='ATTRIBUTE_BUSINESS' table='[C##CS347_JAB5948].[ATTRIBUTE_BUSINESS]' type='table' />
                  </relation>
                  <relation name='ATTRIBUTE' table='[C##CS347_JAB5948].[ATTRIBUTE]' type='table' />
                </relation>
                <relation name='BUSINESS_CATEGORY' table='[C##CS347_JAB5948].[BUSINESS_CATEGORY]' type='table' />
              </relation>
              <relation name='CATEGORY' table='[C##CS347_JAB5948].[CATEGORY]' type='table' />
            </relation>
            <relation name='BUSINESS_NEIGHBORHOOD' table='[C##CS347_JAB5948].[BUSINESS_NEIGHBORHOOD]' type='table' />
          </relation>
          <relation name='NEIGHBORHOOD' table='[C##CS347_JAB5948].[NEIGHBORHOOD]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[ATTRIBUTE_ID (ATTRIBUTE)]' value='[ATTRIBUTE].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_ID]' value='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_NAME]' value='[ATTRIBUTE].[ATTRIBUTE_NAME]' />
          <map key='[ATTRIBUTE_VALUE]' value='[ATTRIBUTE].[ATTRIBUTE_VALUE]' />
          <map key='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' value='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_CATEGORY)]' value='[BUSINESS_CATEGORY].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' value='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CATEGORY_ID (CATEGORY)]' value='[CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_ID]' value='[BUSINESS_CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_NAME]' value='[CATEGORY].[CATEGORY_NAME]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_ID]' value='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_NAME]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_NAME]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (ATTRIBUTE_BUSINESS)]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID (ATTRIBUTE)]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_NAME]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_VALUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_VALUE]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_VALUE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_CATEGORY)]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID (CATEGORY)]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY_NAME]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_NAME</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID (NEIGHBORHOOD)]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NEIGHBORHOOD_NAME]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_NAME</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Attribute Id (Attribute)' datatype='real' name='[ATTRIBUTE_ID (ATTRIBUTE)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Attribute Id' datatype='real' name='[ATTRIBUTE_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Attribute Name' datatype='string' name='[ATTRIBUTE_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Attribute Value' datatype='string' name='[ATTRIBUTE_VALUE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Attribute Business)' datatype='real' name='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Category)' datatype='real' name='[BUSINESS_ID (BUSINESS_CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Neighborhood)' datatype='real' name='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Category Id (Category)' datatype='real' name='[CATEGORY_ID (CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Category Id' datatype='real' name='[CATEGORY_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Elite' datatype='string' name='[Calculation_1091006220708935]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ([Parameters].[Elite Year Parameter] = ATTR([oracle.41918.885422395800].[ELITE_YEAR])) Then&#10;    &quot;Yes&quot;&#10;Else&#10;    &quot;No&quot;&#10;End' scope-isolation='false' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id (Neighborhood)' datatype='real' name='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id' datatype='real' name='[NEIGHBORHOOD_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[ATTRIBUTE_NAME]' derivation='None' name='[none:ATTRIBUTE_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='STATE, CITY'>
          <field>[STATE]</field>
          <field>[CITY]</field>
          <field>[NEIGHBORHOOD_NAME]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.335175' measure-ordering='alphabetic' measure-percentage='0.325967' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ATTRIBUTE_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Coat Check&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Good For latenight&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Open 24 Hours&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Accepts Credit Cards&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Delivery&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hair Types Specialized In africanamerican&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Outdoor Seating&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ambience casual&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dietary Restrictions kosher&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hair Types Specialized In extensions&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Parking valet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;By Appointment Only&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Good For dinner&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Music live&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Takes Reservations&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ambience touristy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Good For breakfast&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Music background_music&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Payment Types visa&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ambience intimate&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dogs Allowed&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Happy Hour&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Payment Types discover&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Ambience classy&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Dietary Restrictions soy-free&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hair Types Specialized In kids&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Parking validated&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Corkage&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Good For lunch&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Order at Counter&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Accepts Insurance&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Dietary Restrictions dairy-free&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hair Types Specialized In asian&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Parking garage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;BYOB/Corkage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Good For Kids&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Music video&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Wheelchair Accessible&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ambience trendy&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Good For brunch&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Music dj&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Price Range&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ambience romantic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Drive-Thru&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Has TV&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Payment Types mastercard&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;BYOB&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Good For Groups&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Music playlist&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Waiter Service&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ambience divey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dietary Restrictions vegan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hair Types Specialized In perms&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Payment Types amex&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Caters&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Good for Kids&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Noise Level&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Wi-Fi&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ambience upscale&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Good For Dancing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Music jukebox&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Smoking&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Attire&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Good For dessert&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Music karaoke&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Take-out&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ages Allowed&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dietary Restrictions gluten-free&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hair Types Specialized In coloring&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Parking lot&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ambience hipster&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dietary Restrictions vegetarian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hair Types Specialized In straightperms&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Payment Types cash_only&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Alcohol&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dietary Restrictions halal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hair Types Specialized In curly&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Parking street&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;EDH&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;XGL&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;NTH&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MLN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='YELPER+ (C##CS347_JAB5948)' inline='true' name='oracle.41914.707405555600' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS].[BUSINESS_ID]'>
              </expression>
              <expression op='[CHECKIN].[BUSINESS_ID]'>
              </expression>
            </expression>
          </clause>
          <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
          <relation name='CHECKIN' table='[C##CS347_JAB5948].[CHECKIN]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[BUSINESS_ID (CHECKIN)]' value='[CHECKIN].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CHECKIN_ID]' value='[CHECKIN].[CHECKIN_ID]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CHECKIN_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CHECKIN_ID]</local-name>
            <parent-name>[CHECKIN]</parent-name>
            <remote-alias>CHECKIN_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (CHECKIN)]</local-name>
            <parent-name>[CHECKIN]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Checkin)' datatype='real' name='[BUSINESS_ID (CHECKIN)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column caption='Checkin Id' datatype='real' name='[CHECKIN_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column datatype='integer' name='[Stars (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[STARS]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
      </column>
      <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CHECKIN_ID]' derivation='Count' name='[cnt:CHECKIN_ID:qk]' pivot='key' type='quantitative' />
      <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='STATE, CITY'>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.41914.707405555600].[avg:STARS:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.41914.707405555600].[cnt:CHECKIN_ID:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.41914.707405555600].[sum:REVIEW_COUNT:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Stars' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <range max='4' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.41914.707405555600'>
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[ADDRESS]' derivation='None' name='[none:ADDRESS:nk]' pivot='key' type='nominal' />
      <column-instance column='[BUSINESS_ID]' derivation='None' name='[none:BUSINESS_ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[BUSINESS_ID_STR]' derivation='None' name='[none:BUSINESS_ID_STR:nk]' pivot='key' type='nominal' />
      <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[BUSINESS_OPEN]' derivation='None' name='[none:BUSINESS_OPEN:nk]' pivot='key' type='nominal' />
      <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.41918.842183125000'>
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[ADDRESS]' derivation='None' name='[none:ADDRESS:nk]' pivot='key' type='nominal' />
      <column-instance column='[BUSINESS_ID]' derivation='None' name='[none:BUSINESS_ID:ok]' pivot='key' type='ordinal' />
      <column-instance column='[BUSINESS_ID_STR]' derivation='None' name='[none:BUSINESS_ID_STR:nk]' pivot='key' type='nominal' />
      <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[BUSINESS_OPEN]' derivation='None' name='[none:BUSINESS_OPEN:nk]' pivot='key' type='nominal' />
      <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.41918.842183125000' target='oracle.41914.707405555600'>
      <column-mapping>
        <map key='[oracle.41918.842183125000].[none:ADDRESS:nk]' value='[oracle.41914.707405555600].[none:ADDRESS:nk]' />
        <map key='[oracle.41918.842183125000].[none:BUSINESS_ID:ok]' value='[oracle.41914.707405555600].[none:BUSINESS_ID:ok]' />
        <map key='[oracle.41918.842183125000].[none:BUSINESS_ID_STR:nk]' value='[oracle.41914.707405555600].[none:BUSINESS_ID_STR:nk]' />
        <map key='[oracle.41918.842183125000].[none:BUSINESS_NAME:nk]' value='[oracle.41914.707405555600].[none:BUSINESS_NAME:nk]' />
        <map key='[oracle.41918.842183125000].[none:BUSINESS_OPEN:nk]' value='[oracle.41914.707405555600].[none:BUSINESS_OPEN:nk]' />
        <map key='[oracle.41918.842183125000].[none:CITY:nk]' value='[oracle.41914.707405555600].[none:CITY:nk]' />
        <map key='[oracle.41918.842183125000].[none:STATE:nk]' value='[oracle.41914.707405555600].[none:STATE:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crosstab and Heirarchies'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS+ (C##CS347_JAB5948)' name='oracle.41918.842183125000' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.842183125000'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[REVIEW_COUNT]' derivation='Count' name='[cnt:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[NEIGHBORHOOD_NAME]' derivation='None' name='[none:NEIGHBORHOOD_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STARS]' derivation='Sum' name='[sum:STARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:CITY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Ahwatukee&quot;' function='range' level='[none:CITY:nk]' to='&quot;Buckeye&quot;' />
              <groupfilter from='&quot;Cambridge&quot;' function='range' level='[none:CITY:nk]' to='&quot;El Mirage&quot;' />
              <groupfilter from='&quot;Fitchburg&quot;' function='range' level='[none:CITY:nk]' to='&quot;Goodyear&quot;' />
              <groupfilter from='&quot;Guadalupe&quot;' function='range' level='[none:CITY:nk]' to='&quot;Las Vegas&quot;' />
              <groupfilter from='&quot;Lasswade&quot;' function='range' level='[none:CITY:nk]' to='&quot;Musselburgh&quot;' />
              <groupfilter from='&quot;NELLIS AFB&quot;' function='range' level='[none:CITY:nk]' to='&quot;Newington&quot;' />
              <groupfilter from='&quot;North Queensferry&quot;' function='range' level='[none:CITY:nk]' to='&quot;Old Town&quot;' />
              <groupfilter from='&quot;Paradise Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;South Gyle&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;South Queensferry&quot;' />
              <groupfilter from='&quot;St Clements&quot;' function='range' level='[none:CITY:nk]' to='&quot;Straiton&quot;' />
              <groupfilter from='&quot;Summerlin South&quot;' function='range' level='[none:CITY:nk]' to='&quot;Sun Prairie&quot;' />
              <groupfilter from='&quot;Sunrise Manor&quot;' function='range' level='[none:CITY:nk]' to='&quot;Victoria Park&quot;' />
              <groupfilter from='&quot;W Spring Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;chandler&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;EDH&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41918.842183125000].[none:CITY:nk]</column>
            <column>[oracle.41918.842183125000].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[oracle.41918.842183125000].[cnt:REVIEW_COUNT:qk]' value='17' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]' value='18' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41918.842183125000].[sum:STARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#c0bdc5</color>
                <color>#b6b1c0</color>
                <color>#ada6bb</color>
                <color>#a49ab7</color>
                <color>#9b8fb2</color>
                <color>#9285ad</color>
                <color>#8a7ba9</color>
                <color>#8271a4</color>
                <color>#7a689f</color>
                <color>#735f9b</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41918.842183125000].[sum:STARS:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41918.842183125000].[none:STATE:nk] / ([oracle.41918.842183125000].[none:CITY:nk] / [oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]))</rows>
        <cols>[oracle.41918.842183125000].[cnt:REVIEW_COUNT:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41914.707405555600' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.707405555600'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Stars (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[STARS]' peg='0' size-parameter='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[STARS]' derivation='Count' name='[cnt:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.707405555600].[none:CITY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Boulder City&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Edinburgh&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Las Vegas&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Phoenix&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.707405555600].[none:CITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.41914.707405555600].[cnt:STARS:qk]</rows>
        <cols>[oracle.41914.707405555600].[Stars (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41914.707405555600' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41914.707405555600'>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STARS]' derivation='Sum' name='[sum:STARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41914.707405555600].[avg:LONGITUDE:qk]' field-type='quantitative' max='-12780295.84218247' min='-12841269.786336765' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.41914.707405555600].[avg:LATITUDE:qk]' field-type='quantitative' max='4346755.044759226' min='4290970.372447852' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41914.707405555600].[sum:STARS:qk]' palette='tableau-red-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.41914.707405555600].[sum:STARS:qk]' />
              <lod column='[oracle.41914.707405555600].[none:BUSINESS_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.71364641189575195' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.707405555600].[avg:LATITUDE:qk]</rows>
        <cols>[oracle.41914.707405555600].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41914.707405555600' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.707405555600'>
            <column caption='Checkin Id' datatype='real' name='[CHECKIN_ID]' role='dimension' type='ordinal'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CHECKIN_ID]' derivation='Count' name='[cnt:CHECKIN_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.707405555600].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;EDH&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;WI&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.707405555600].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.41914.707405555600].[avg:STARS:qk]' />
              <size column='[oracle.41914.707405555600].[cnt:CHECKIN_ID:qk]' />
              <text column='[oracle.41914.707405555600].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS+ (C##CS347_JAB5948)' name='oracle.41918.842183125000' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.842183125000'>
            <column caption='Attribute Name' datatype='string' name='[ATTRIBUTE_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ATTRIBUTE_NAME]' derivation='None' name='[none:ATTRIBUTE_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ATTRIBUTE_NAME:nk]' member='&quot;Ambience hipster&quot;' />
              <groupfilter function='member' level='[none:ATTRIBUTE_NAME:nk]' member='&quot;Take-out&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
          </pane>
        </panes>
        <rows>[oracle.41918.842183125000].[avg:STARS:qk]</rows>
        <cols>([oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk] / [oracle.41918.842183125000].[none:BUSINESS_NAME:nk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='1300' maxwidth='1000' minheight='1300' minwidth='1000' />
      <zones>
        <zone h='34846' id='1' name='Sheet 1' show-title='true' w='23800' x='71900' y='3923'>
        </zone>
        <zone h='41308' id='10' name='Sheet 3' show-title='true' w='68400' x='700' y='769'>
        </zone>
        <zone h='6231' id='11' name='Sheet 3' pane-specification-id='0' param='[oracle.41914.707405555600].[sum:STARS:qk]' type='color' w='14000' x='53100' y='6077'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.707405555600].[none:CITY:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.707405555600].[sum:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.707405555600].[none:BUSINESS_NAME:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <zones>
        <zone name='Sheet 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[oracle.41914.707405555600].[Stars (bin)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[oracle.41914.707405555600].[cnt:STARS:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[oracle.41914.707405555600].[Stars (bin)]</field>
                    <field>[oracle.41914.707405555600].[cnt:STARS:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>4</value>
                  <value>6857</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </zone>
        <zone name='Sheet 3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Sheet 3' pane-specification-id='0' param='[oracle.41914.707405555600].[sum:STARS:qk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.707405555600].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.707405555600].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.707405555600].[avg:STARS:qk]</field>
          <field>[oracle.41914.707405555600].[cnt:CHECKIN_ID:qk]</field>
          <field>[oracle.41914.707405555600].[none:CHECKIN_ID:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstab and Heirarchies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41918.842183125000].[sum:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' values='relevant' />
            <card param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.842183125000].[none:CATEGORY_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:CITY:nk]</field>
          <field>[oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Elite Year Parameter]</field>
          <field>[oracle.41914.707405555600].[none:STATE:nk]</field>
          <field>[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
          <field>[oracle.41918.885422395800].[none:Calculation_0431006221131687:nk]</field>
          <field>[oracle.41918.885422395800].[none:ELITE_YEAR:nk]</field>
          <field>[oracle.41918.885422395800].[none:TEXT:nk]</field>
          <field>[oracle.41918.885422395800].[none:YELPER_ID (ELITE_YEAR_YELPER):qk]</field>
          <field>[oracle.41918.885422395800].[none:YELPER_ID:ok]</field>
          <field>[oracle.41918.885422395800].[none:YELPER_NAME:nk]</field>
          <field>[oracle.41918.885422395800].[yr:YELPING_SINCE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='213'>
            <card param='[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.842183125000].[none:ATTRIBUTE_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crosstab and Heirarchies' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 6' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAYAAACRfFAzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABmUlEQVR4nO3SQQ0AIBDAMMC/58MDH7KkVbDH9szMgpjzOwBeGJck45JkXJKMS5JxSTIu
      ScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45Jk
      XJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYl
      ybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKM
      S5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgk
      GZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5Jx
      STIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck
      45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuSRePYgUc7kJNEQAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
