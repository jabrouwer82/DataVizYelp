<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='ACCIDENT (C##CS347_NOS98)' inline='true' name='oracle.41915.474954919000' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_NOS98' server='128.83.138.158' service='orcl' username='C##CS347_nos98'>
        <relation name='ACCIDENT' table='[C##CS347_NOS98].[ACCIDENT]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ST_CASE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ST_CASE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ST_CASE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VE_TOTAL</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VE_TOTAL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>VE_TOTAL</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VE_FORMS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VE_FORMS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>VE_FORMS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PVH_INVL</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PVH_INVL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PVH_INVL</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PEDS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PEDS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PEDS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERNOTMVIT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PERNOTMVIT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PERNOTMVIT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERMVIT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PERMVIT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PERMVIT</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PERSONS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[PERSONS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>PERSONS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COUNTY]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>COUNTY</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DAY]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>DAY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_WEEK</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DAY_WEEK]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>DAY_WEEK</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOUR</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MINUTE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MINUTE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MINUTE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NHS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NHS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>NHS</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROAD_FNC</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ROAD_FNC]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ROAD_FNC</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROUTE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ROUTE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ROUTE</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TWAY_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TWAY_ID]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>TWAY_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TWAY_ID2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TWAY_ID2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>TWAY_ID2</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MILEPT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MILEPT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MILEPT</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUD</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUD]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>LONGITUD</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SP_JUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SP_JUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>SP_JUR</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HARM_EV</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HARM_EV]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HARM_EV</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MAN_COLL</remote-name>
            <remote-type>131</remote-type>
            <local-name>[MAN_COLL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>MAN_COLL</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RELJCT1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[RELJCT1]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>RELJCT1</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RELJCT2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[RELJCT2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>RELJCT2</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TYP_INT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[TYP_INT]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>TYP_INT</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WRK_ZONE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WRK_ZONE]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WRK_ZONE</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REL_ROAD</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REL_ROAD]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>REL_ROAD</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LGT_COND</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LGT_COND]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>LGT_COND</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WEATHER1]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WEATHER1</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WEATHER2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WEATHER2</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEATHER</remote-name>
            <remote-type>131</remote-type>
            <local-name>[WEATHER]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>WEATHER</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCH_BUS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[SCH_BUS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>SCH_BUS</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RAIL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[RAIL]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>RAIL</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>7</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOT_HOUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NOT_HOUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>NOT_HOUR</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOT_MIN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NOT_MIN]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>NOT_MIN</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_HOUR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ARR_HOUR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ARR_HOUR</remote-alias>
            <ordinal>43</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_MIN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ARR_MIN]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>ARR_MIN</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSP_HR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOSP_HR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOSP_HR</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSP_MN</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOSP_MN]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOSP_MN</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CF1</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CF1]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CF1</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CF2</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CF2]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CF2</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CF3</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CF3]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>CF3</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FATALS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[FATALS]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>FATALS</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRUNK_DR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[DRUNK_DR]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>DRUNK_DR</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HOSP_TRAVEL_TIME</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HOSP_TRAVEL_TIME]</local-name>
            <parent-name>[ACCIDENT]</parent-name>
            <remote-alias>HOSP_TRAVEL_TIME</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>16</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Arr Hour' datatype='integer' name='[ARR_HOUR]' role='measure' type='quantitative'>
      </column>
      <column caption='Arr Min' datatype='integer' name='[ARR_MIN]' role='measure' type='quantitative'>
      </column>
      <column caption='City' datatype='integer' name='[CITY]' role='measure' type='quantitative'>
      </column>
      <column caption='County' datatype='integer' name='[COUNTY]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[DAY]' role='dimension' type='quantitative'>
      </column>
      <column caption='Day Week' datatype='integer' name='[DAY_WEEK]' role='dimension' type='quantitative'>
      </column>
      <column caption='Drunk Dr' datatype='integer' name='[DRUNK_DR]' role='measure' type='quantitative'>
      </column>
      <column caption='Fatals' datatype='integer' name='[FATALS]' role='measure' type='quantitative'>
      </column>
      <column caption='Harm Ev' datatype='integer' name='[HARM_EV]' role='measure' type='quantitative'>
      </column>
      <column caption='Hosp Hr' datatype='integer' name='[HOSP_HR]' role='measure' type='quantitative'>
      </column>
      <column caption='Hosp Mn' datatype='integer' name='[HOSP_MN]' role='measure' type='quantitative'>
      </column>
      <column caption='Hosp Travel Time' datatype='integer' name='[HOSP_TRAVEL_TIME]' role='measure' type='quantitative'>
      </column>
      <column caption='Hour' datatype='integer' name='[HOUR]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column caption='Lgt Cond' datatype='integer' name='[LGT_COND]' role='measure' type='quantitative'>
      </column>
      <column caption='Longitud' datatype='real' name='[LONGITUD]' role='measure' type='quantitative'>
      </column>
      <column caption='Man Coll' datatype='integer' name='[MAN_COLL]' role='measure' type='quantitative'>
      </column>
      <column caption='Milept' datatype='integer' name='[MILEPT]' role='measure' type='quantitative'>
      </column>
      <column caption='Minute' datatype='integer' name='[MINUTE]' role='measure' type='quantitative'>
      </column>
      <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative'>
      </column>
      <column caption='Not Hour' datatype='integer' name='[NOT_HOUR]' role='measure' type='quantitative'>
      </column>
      <column caption='Not Min' datatype='integer' name='[NOT_MIN]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Peds' datatype='integer' name='[PEDS]' role='measure' type='quantitative'>
      </column>
      <column caption='Permvit' datatype='integer' name='[PERMVIT]' role='measure' type='quantitative'>
      </column>
      <column caption='Pernotmvit' datatype='integer' name='[PERNOTMVIT]' role='measure' type='quantitative'>
      </column>
      <column caption='Persons' datatype='integer' name='[PERSONS]' role='measure' type='quantitative'>
      </column>
      <column caption='Pvh Invl' datatype='integer' name='[PVH_INVL]' role='measure' type='quantitative'>
      </column>
      <column caption='Rail' datatype='string' name='[RAIL]' role='dimension' type='nominal'>
      </column>
      <column caption='Reljct1' datatype='integer' name='[RELJCT1]' role='measure' type='quantitative'>
      </column>
      <column caption='Reljct2' datatype='integer' name='[RELJCT2]' role='measure' type='quantitative'>
      </column>
      <column caption='Rel Road' datatype='integer' name='[REL_ROAD]' role='measure' type='quantitative'>
      </column>
      <column caption='Road Fnc' datatype='integer' name='[ROAD_FNC]' role='measure' type='quantitative'>
      </column>
      <column caption='Route' datatype='integer' name='[ROUTE]' role='measure' type='quantitative'>
      </column>
      <column caption='Sch Bus' datatype='integer' name='[SCH_BUS]' role='measure' type='quantitative'>
      </column>
      <column caption='Sp Jur' datatype='integer' name='[SP_JUR]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='integer' name='[STATE]' role='measure' type='quantitative'>
      </column>
      <column caption='St Case' datatype='integer' name='[ST_CASE]' role='measure' type='quantitative'>
      </column>
      <column caption='Tway Id2' datatype='string' name='[TWAY_ID2]' role='dimension' type='nominal'>
      </column>
      <column caption='Tway Id' datatype='string' name='[TWAY_ID]' role='dimension' type='nominal'>
      </column>
      <column caption='Typ Int' datatype='integer' name='[TYP_INT]' role='measure' type='quantitative'>
      </column>
      <column caption='Ve Forms' datatype='integer' name='[VE_FORMS]' role='measure' type='quantitative'>
      </column>
      <column caption='Ve Total' datatype='integer' name='[VE_TOTAL]' role='measure' type='quantitative'>
      </column>
      <column caption='Weather1' datatype='integer' name='[WEATHER1]' role='measure' type='quantitative'>
      </column>
      <column caption='Weather2' datatype='integer' name='[WEATHER2]' role='measure' type='quantitative'>
      </column>
      <column caption='Weather' datatype='integer' name='[WEATHER]' role='measure' type='quantitative'>
      </column>
      <column caption='Wrk Zone' datatype='integer' name='[WRK_ZONE]' role='measure' type='quantitative'>
      </column>
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.301059' measure-ordering='alphabetic' measure-percentage='0.606657' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='FIN_COMPLAINT (C##CS347_ACC2634)' inline='true' name='oracle.41915.481211979200' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_ACC2634' server='128.83.138.158' service='orcl' username='C##CS347_acc2634'>
        <relation name='FIN_COMPLAINT' table='[C##CS347_ACC2634].[FIN_COMPLAINT]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>COMPLAINT_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COMPLAINT_ID]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>COMPLAINT_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRODUCT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRODUCT]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>PRODUCT</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUB_PRODUCT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUB_PRODUCT]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>SUB_PRODUCT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>100</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ISSUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ISSUE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>ISSUE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUB_ISSUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUB_ISSUE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>SUB_ISSUE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZIP_CODE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>ZIP_CODE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>25</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUBMITTEDVIA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SUBMITTEDVIA]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>SUBMITTEDVIA</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE_RECIEVED</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE_RECIEVED]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>DATE_RECIEVED</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE_SENT</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE_SENT]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>DATE_SENT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMPANY_RESPONSE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COMPANY_RESPONSE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>COMPANY_RESPONSE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIMELY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TIMELY]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>TIMELY</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISPUTE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISPUTE]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>DISPUTE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMPANY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[COMPANY_ID]</local-name>
            <parent-name>[FIN_COMPLAINT]</parent-name>
            <remote-alias>COMPANY_ID</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Company Id' datatype='real' name='[COMPANY_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Company Response' datatype='string' name='[COMPANY_RESPONSE]' role='dimension' type='nominal'>
      </column>
      <column caption='Complaint Id' datatype='real' name='[COMPLAINT_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Date Recieved' datatype='datetime' name='[DATE_RECIEVED]' role='dimension' type='ordinal'>
      </column>
      <column caption='Date Sent' datatype='datetime' name='[DATE_SENT]' role='dimension' type='ordinal'>
      </column>
      <column caption='Dispute' datatype='string' name='[DISPUTE]' role='dimension' type='nominal'>
      </column>
      <column caption='Issue' datatype='string' name='[ISSUE]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Product' datatype='string' name='[PRODUCT]' role='dimension' type='nominal'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column caption='Submittedvia' datatype='string' name='[SUBMITTEDVIA]' role='dimension' type='nominal'>
      </column>
      <column caption='Sub Issue' datatype='string' name='[SUB_ISSUE]' role='dimension' type='nominal'>
      </column>
      <column caption='Sub Product' datatype='string' name='[SUB_PRODUCT]' role='dimension' type='nominal'>
      </column>
      <column caption='Timely' datatype='string' name='[TIMELY]' role='dimension' type='nominal'>
      </column>
      <column caption='Zip Code' datatype='string' name='[ZIP_CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' inline='true' name='oracle.41914.754624965300' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
              <expression op='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[BUSINESS].[BUSINESS_ID]'>
                </expression>
                <expression op='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[BUSINESS_CATEGORY].[CATEGORY_ID]'>
                  </expression>
                  <expression op='[CATEGORY].[CATEGORY_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[BUSINESS_CATEGORY].[BUSINESS_ID]'>
                    </expression>
                    <expression op='[BUSINESS].[BUSINESS_ID]'>
                    </expression>
                  </expression>
                </clause>
                <relation name='BUSINESS_CATEGORY' table='[C##CS347_JAB5948].[BUSINESS_CATEGORY]' type='table' />
                <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
              </relation>
              <relation name='CATEGORY' table='[C##CS347_JAB5948].[CATEGORY]' type='table' />
            </relation>
            <relation name='BUSINESS_NEIGHBORHOOD' table='[C##CS347_JAB5948].[BUSINESS_NEIGHBORHOOD]' type='table' />
          </relation>
          <relation name='NEIGHBORHOOD' table='[C##CS347_JAB5948].[NEIGHBORHOOD]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[BUSINESS_ID (BUSINESS)]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' value='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS_CATEGORY].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CATEGORY_ID (CATEGORY)]' value='[CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_ID]' value='[BUSINESS_CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_NAME]' value='[CATEGORY].[CATEGORY_NAME]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_ID]' value='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_NAME]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_NAME]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS)]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID (CATEGORY)]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY_NAME]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID (NEIGHBORHOOD)]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NEIGHBORHOOD_NAME]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_NAME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business)' datatype='real' name='[BUSINESS_ID (BUSINESS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Neighborhood)' datatype='real' name='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Category Id (Category)' datatype='real' name='[CATEGORY_ID (CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Category Id' datatype='real' name='[CATEGORY_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column datatype='string' name='[Category Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[CATEGORY_NAME]' default='&quot;Zoos&quot;'>
          <bin value='&quot;Burgers&quot;'>
            <value>&quot;Burgers&quot;</value>
          </bin>
        </calculation>
        <aliases>
          <alias key='&quot;Zoos&quot;' value='Other' />
        </aliases>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id (Neighborhood)' datatype='real' name='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id' datatype='real' name='[NEIGHBORHOOD_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
      <group name='[Adult]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='except'>
          <groupfilter function='except'>
            <groupfilter function='union'>
              <groupfilter function='union'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult&quot;' />
                    <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult&quot;' />
                    <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult Entertainment&quot;' />
                  <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult Entertainment&quot;' />
                <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
              </groupfilter>
            </groupfilter>
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult&quot;' />
              <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[CATEGORY_NAME]' member='&quot;Adult Entertainment&quot;' />
            <groupfilter function='member' level='[CITY]' member='&quot;Las Vegas&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='STATE, CITY'>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:CATEGORY_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;ATV Rentals/Tours&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;American (New)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Anesthesiologists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Barre Classes&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Boat Repair&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Burgers&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cards &amp; Stationery&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Christmas Markets&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cosmetic Dentists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Dance Studios&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Divorce &amp; Family Law&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Egyptian&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Electronics Repair&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fences &amp; Gates&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Food Court&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Halal&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Home Organization&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Immigration Law&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Juice Bars &amp; Smoothies&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Latin American&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Masonry/Concrete&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Midwives&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Nail Salons&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Organic Stores&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Pediatric Dentists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Photo Booth Rentals&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Pressure Washers&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Radiologists&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Restaurants&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Self Storage&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Skin Care&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Spray Tanning&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tapas/Small Plates&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Train Stations&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Vape Shops&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Wheel &amp; Rim Repair&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Adult&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Adult Entertainment&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Airlines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Antiques&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Audiologist&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bartenders&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Body Shops&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Buses&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cinema&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cosmetics &amp; Beauty Supply&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Day Camps&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Do-It-Yourself Food&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Embroidery &amp; Crochet&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fertility&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Food Stands&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Glass &amp; Mirrors&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hardware Stores&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Home Staging&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Indonesian&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Karaoke&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Leather Goods&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Massage&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mobile Phone Repair&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Naturopathic/Holistic&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Orthopedists&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Performing Arts&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Photography Stores &amp; Services&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Poutineries&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Print Media&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ramen&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Roofing&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Session Photography&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Smog Check Stations&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Steakhouses&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tattoo Removal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Trampoline Parks&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Vegetarian&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Wigs&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Aquarium Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Auto Glass Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Beaches&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Botanical Gardens&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cafes&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Casinos&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Coffee &amp; Tea&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Country Dance Halls&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dentists&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dominican&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Endodontists&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Health Markets&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Horse Boarding&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Internal Medicine&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Knitting Supplies&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Life Coach&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Maternity Wear&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Moroccan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Notaries&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Outlet Stores&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Personal Assistants&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Pilates&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Professional Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;RV Parks&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Real Estate Services&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Shared Office Spaces&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Slovakian&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Solar Installation&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Surfing&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Television Service Providers&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Trophy Shops&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Video/Film Production&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Wine Bars&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Art Supplies&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bankruptcy Law&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bistros&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bubble Tea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Car Share Services&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chimney Sweeps&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Contractors&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cycling Classes&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Discount Store&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Family Practice&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Flowers&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Gay Bars&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Hair Extensions&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Home Cleaning&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jazz &amp; Blues&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Laotian&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Makeup Artists&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Men&apos;s Hair Salons&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Music &amp; DVDs&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Opera &amp; Ballet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Party Supplies&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pet Stores&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pool Halls&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pubs&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Resorts&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Seafood&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Skate Parks&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sports Bars&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Talent Agencies&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tours&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Used, Vintage &amp; Consignment&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Waxing&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Advertising&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Argentine&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bagels&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bespoke Clothing&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Breweries&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;CSA&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cannabis Clinics&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cheesesteaks&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Comic Books&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Diagnostic Services&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Dry Cleaning &amp; Laundry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Eyelash Service&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Flea Markets&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gardeners&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gun/Rifle Ranges&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Himalayan/Nepalese&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hot Air Balloons&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Island Pub&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Landmarks &amp; Historical Buildings&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Local Services&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Medical Transportation&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Motorcycle Repair&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Office Equipment&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Parks&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Pet Adoption&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Police Departments&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Psychologists&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rehabilitation Center&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Scottish&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Shopping Centers&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Specialty Food&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Synagogues&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Thrift Stores&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Uniforms&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Walk-in Clinics&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Automotive&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Beer, Wine &amp; Spirits&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Campgrounds&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Check Cashing/Pay-day Loans&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Comedy Clubs&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Creperies&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Desserts&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Driving Schools&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Event Photography&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fishing&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Furniture Stores&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Grocery&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Herbs &amp; Spices&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Hospitals&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lactation Services&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Live/Raw Food&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Medical Spas&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Motorcycle Gear&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Occupational Therapy&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Peruvian&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Plus Size Fashion&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Psychiatrists&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Reflexology&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Rock Climbing&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sandwiches&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Shoe Stores&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Swimming Pools&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tex-Mex&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tutoring Centers&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vinyl Records&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Yoga&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Active Life&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Airport Shuttles&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Aquariums&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Auto Loan Providers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Beauty &amp; Spas&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Bowling&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cafeteria&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Caterers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;College Counseling&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Couriers &amp; Delivery Services&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Department Stores&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Donuts&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Estate Planning Law&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Firewood&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Fruits &amp; Veggies&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Golf Equipment&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Health Retreats&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Horse Racing&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Internet Cafes&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Lighting Fixtures &amp; Equipment&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mattresses&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Mortgage Brokers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nightlife&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nurseries &amp; Gardening&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Paddleboarding&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Personal Chefs&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Pizza&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Professional Sports Teams&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;RV Rental&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Recording &amp; Rehearsal Studios&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Shaved Ice&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Soul Food&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Surgeons&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Television Stations&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Truck Rental&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Videographers&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Wineries&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;American (Traditional)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Animal Shelters&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Auction Houses&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Bars&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Boating&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Burmese&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Career Counseling&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Churches&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Cosmetic Surgeons&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;DJs&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Data Recovery&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Elementary Schools&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fencing Clubs&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Food Delivery Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Gift Shops&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Handyman&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Home Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Junk Removal &amp; Hauling&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lawyers&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Mass Media&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Mini Golf&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Nanny Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Orthodontists&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Pediatricians&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Photographers&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Pretzels&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Rafting/Kayaking&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Septic Services&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Skydiving&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Stadiums &amp; Arenas&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tattoo&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Trainers&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Vegan&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Wholesale Stores&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Apartments&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bartending Schools&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Books, Mags, Music &amp; Video&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Business Law&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Carpet Cleaning&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Climbing&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cosmetology Schools&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Day Spas&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Doctors&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Employment Agencies&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Festivals&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Food Trucks&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Gluten-Free&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hats&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Home Theatre Installation&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Insulation Installation&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Keys &amp; Locksmiths&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Massage Schools&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mobile Phones&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Neurologist&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Orthotics&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Periodontists&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Physical Therapy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Printing Services&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Rugs&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sewing &amp; Alterations&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Soccer&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Street Vendors&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tax Services&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Transportation&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Venezuelan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Window Washing&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Allergists&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Arts &amp; Entertainment&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Barbeque&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Boat Charters&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Buffets&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Car Wash&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chiropractors&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Cooking Classes&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Czech&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Dance Clubs&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Dive Bars&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Electricians&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fashion&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fondue&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;General Dentistry&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Hair Salons&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Home Health Care&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Hypnosis/Hypnotherapy&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jewelry&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Laser Hair Removal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Marketing&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Middle Eastern&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Musical Instruments &amp; Teachers&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Optometrists&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pawn Shops&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pets&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Post Offices&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Race Tracks&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Retirement Homes&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Security Services&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ski Resorts&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sports Medicine&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tanning Beds&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Toy Stores&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Vacation Rental Agents&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Wedding Planning&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Afghan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Art Classes&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bail Bondsmen&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bike Rentals&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Brewing Supplies&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cantonese&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Chicken Wings&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Commercial Real Estate&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Dim Sum&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Drywall Installation &amp; Repair&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Eyewear &amp; Opticians&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Flight Instruction&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Gas &amp; Service Stations&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Guns &amp; Ammo&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hindu Temples&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Hot Dogs&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;IT Services &amp; Computer Repair&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Landscape Architects&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Lounges&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Meditation Centers&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mountain Biking&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Officiants&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Party &amp; Event Planning&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pet Boarding/Pet Sitting&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Public Relations&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Reiki&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Screen Printing&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Shredding Services&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Specialty Schools&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Szechuan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ticket Sales&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;University Housing&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Watch Repair&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Adult Education&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Architects&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Baby Gear &amp; Furniture&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Belgian&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Breakfast &amp; Brunch&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Canadian (New)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Candy Stores&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cheese Shops&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Comfort Food&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Criminal Defense Law&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Diagnostic Imaging&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Drugstores&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Event Planning &amp; Services&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Fitness &amp; Instruction&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Garage Door Services&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Guest Houses&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Hiking&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Hostels&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Irrigation&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Lakes&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Local Flavor&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Medical Supplies&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Motorcycle Rental&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Office Cleaning&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Parking&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Pest Control&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Podiatrists&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Psychics &amp; Astrologers&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Registration Services&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Scandinavian&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Shopping&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Special Education&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Swimwear&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ukrainian&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Vocational &amp; Technical School&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Zoos&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Airports&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Arts &amp; Crafts&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Banks &amp; Credit Unions&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Blow Dry/Out Services&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Buddhist Temples&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Car Stereo Installation&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Convenience Stores&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Damage Restoration&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Distilleries&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Educational Services&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Farmers Market&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Flowers &amp; Gifts&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Gelato&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Hair Removal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Home Decor&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Hotels &amp; Travel&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Jet Skis&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Laser Eye Surgery/Lasik&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Music Venues&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Ophthalmologists&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Patisserie/Cake Shop&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pet Training&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Portuguese&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pulmonologist&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Rolfing&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Seafood Markets&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Skating Rinks&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Sports Clubs&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tanning&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Towing&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Utilities&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Web Design&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Arabian&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Auto Parts &amp; Supplies&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bed &amp; Breakfast&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cajun/Creole&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Challenge Courses&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Colleges &amp; Universities&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Courthouses&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Departments of Motor Vehicles&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Door Sales/Installation&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ethiopian&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;First Aid Classes&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Funeral Services &amp; Cemeteries&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Graphic Design&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hearing Aid Providers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Horseback Riding&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Internet Service Providers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Kosher&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Limos&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Meat Shops&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Mosques&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Nutritionists&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Paintball&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Personal Injury Law&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Playgrounds&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Propane&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Recreation Centers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Salad&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Shipping Centers&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Soup&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sushi Bars&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tubing&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Videos &amp; Video Game Rental&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Women&apos;s Clothing&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Amateur Sports Teams&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Amusement Parks&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Asian Fusion&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Barbers&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Boat Dealers&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Building Supplies&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cardiologists&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chocolatiers &amp; Shops&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cooking Schools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Dance Schools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Electronics&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fast Food&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Food&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;General Litigation&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Hair Stylists&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Home Inspectors&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Ice Cream &amp; Frozen Yogurt&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Jewelry Repair&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Laser Tag&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Martial Arts&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Middle Schools &amp; High Schools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Musicians&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Payroll Services&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Pharmacy&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Preschools&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Radio Stations&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Rheumatologists&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Security Systems&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Skiing&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sports Wear&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tapas Bars&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Traditional Chinese Medicine&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Vacation Rentals&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Weight Loss Centers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Art Galleries&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bakeries&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bike Repair/Maintenance&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bridal&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Car Dealers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Child Care &amp; Day Care&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Community Service/Non-Profit&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cultural Center&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;DUI Law&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Diners&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fabric Stores&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Flooring&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Gastroenterologist&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Gymnastics&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Hobby Shops&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Hot Pot&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Landscaping&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Luggage&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mediterranean&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Movers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Oil Change Stations&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Party Bus Rentals&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pet Groomers&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pool &amp; Hot Tub Service&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Public Services &amp; Government&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Religious Organizations&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Screen Printing/T-Shirt Printing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Signmaking&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Speech Therapists&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tai Chi&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tires&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Urgent Care&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Watches&quot;</bucket>
            </map>
            <map to='#f26c64'>
              <bucket>&quot;Hotels&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Art Schools&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bangladeshi&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bikes&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Car Rental&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Children&apos;s Clothing&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Computers&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cupcakes&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Disc Golf&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ear Nose &amp; Throat&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Falafel&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Florists&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Gastropubs&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Gyms&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Home &amp; Garden&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Hot Tub &amp; Pool&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Language Schools&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Magicians&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Men&apos;s Clothing&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Museums&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Oncologist&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Party Equipment Rentals&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Pet Services&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Pool Cleaners&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Public Transportation&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Religious Schools&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Scuba Diving&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Singaporean&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sporting Goods&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Taiwanese&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tobacco Shops&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Urologists&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Water Delivery&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Auto Customization&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Basque&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bookstores&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Butcher&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Carpet Installation&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Clowns&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Costumes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Delicatessen&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dog Parks&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Employment Law&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Formal Wear&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Go Karts&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hawaiian&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Home Window Tinting&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kids Activities&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Leisure Centers&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Massage Therapy&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Modern European&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Newspapers &amp; Magazines&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Osteopathic Physicians&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Permanent Makeup&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Piano Bars&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Private Investigation&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Real Estate Agents&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Shades &amp; Blinds&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Social Clubs&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Summer Camps&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Taxis&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Travel Services&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Venues &amp; Event Spaces&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Windows Installation&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Acupuncture&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Arcades&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Auto Repair&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Beer Bar&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brasseries&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;CPR Classes&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cambodian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Champagne Bars&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dermatologists&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Doulas&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ethnic Food&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Fish &amp; Chips&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Furniture Reupholstery&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Heating &amp; Air Conditioning/HVAC&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hospice&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Investing&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Laboratory Testing&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lingerie&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Medical Centers&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Motorcycle Dealers&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Obstetricians &amp; Gynecologists&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Painters&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Personal Shopping&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Plumbing&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Property Management&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Recycling Center&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Salvadoran&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Shoe Repair&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Southern&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Swimming Lessons/Schools&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Test Preparation&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Yelp Events&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Accountants&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Appliances &amp; Repair&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Auto Detailing&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Batting Cages&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Boot Camps&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cabinetry&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Carpeting&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cocktail Bars&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Counseling &amp; Mental Health&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Delis&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dog Walkers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Endocrinologists&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Financial Advising&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Framing&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Gold Buyers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Health &amp; Medical&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hookah Bars&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Interior Design&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kitchen &amp; Bath&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Libraries&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Matchmakers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mongolian&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Oral Surgeons&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Outdoor Gear&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Persian/Iranian&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Piercing&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Private Tutors&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;RV Dealers&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Real Estate Law&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Shanghainese&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Software Development&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Surf Shop&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tea Rooms&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tree Services&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Veterinarians&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Windshield Installation &amp; Repair&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='BUSINESS+ (C##CS347_JAB5948)' inline='true' name='oracle.41918.842183125000' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
              <expression op='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[BUSINESS].[BUSINESS_ID]'>
                </expression>
                <expression op='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]'>
                </expression>
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[BUSINESS_CATEGORY].[CATEGORY_ID]'>
                  </expression>
                  <expression op='[CATEGORY].[CATEGORY_ID]'>
                  </expression>
                </expression>
              </clause>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[BUSINESS].[BUSINESS_ID]'>
                    </expression>
                    <expression op='[BUSINESS_CATEGORY].[BUSINESS_ID]'>
                    </expression>
                  </expression>
                </clause>
                <relation join='inner' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]'>
                      </expression>
                      <expression op='[ATTRIBUTE].[ATTRIBUTE_ID]'>
                      </expression>
                    </expression>
                  </clause>
                  <relation join='inner' type='join'>
                    <clause type='join'>
                      <expression op='='>
                        <expression op='[BUSINESS].[BUSINESS_ID]'>
                        </expression>
                        <expression op='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]'>
                        </expression>
                      </expression>
                    </clause>
                    <relation name='BUSINESS' table='[C##CS347_JAB5948].[BUSINESS]' type='table' />
                    <relation name='ATTRIBUTE_BUSINESS' table='[C##CS347_JAB5948].[ATTRIBUTE_BUSINESS]' type='table' />
                  </relation>
                  <relation name='ATTRIBUTE' table='[C##CS347_JAB5948].[ATTRIBUTE]' type='table' />
                </relation>
                <relation name='BUSINESS_CATEGORY' table='[C##CS347_JAB5948].[BUSINESS_CATEGORY]' type='table' />
              </relation>
              <relation name='CATEGORY' table='[C##CS347_JAB5948].[CATEGORY]' type='table' />
            </relation>
            <relation name='BUSINESS_NEIGHBORHOOD' table='[C##CS347_JAB5948].[BUSINESS_NEIGHBORHOOD]' type='table' />
          </relation>
          <relation name='NEIGHBORHOOD' table='[C##CS347_JAB5948].[NEIGHBORHOOD]' type='table' />
        </relation>
        <cols>
          <map key='[ADDRESS]' value='[BUSINESS].[ADDRESS]' />
          <map key='[ATTRIBUTE_ID (ATTRIBUTE)]' value='[ATTRIBUTE].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_ID]' value='[ATTRIBUTE_BUSINESS].[ATTRIBUTE_ID]' />
          <map key='[ATTRIBUTE_NAME]' value='[ATTRIBUTE].[ATTRIBUTE_NAME]' />
          <map key='[ATTRIBUTE_VALUE]' value='[ATTRIBUTE].[ATTRIBUTE_VALUE]' />
          <map key='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' value='[ATTRIBUTE_BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_CATEGORY)]' value='[BUSINESS_CATEGORY].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' value='[BUSINESS_NEIGHBORHOOD].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID]' value='[BUSINESS].[BUSINESS_ID]' />
          <map key='[BUSINESS_ID_STR]' value='[BUSINESS].[BUSINESS_ID_STR]' />
          <map key='[BUSINESS_NAME]' value='[BUSINESS].[BUSINESS_NAME]' />
          <map key='[BUSINESS_OPEN]' value='[BUSINESS].[BUSINESS_OPEN]' />
          <map key='[CATEGORY_ID (CATEGORY)]' value='[CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_ID]' value='[BUSINESS_CATEGORY].[CATEGORY_ID]' />
          <map key='[CATEGORY_NAME]' value='[CATEGORY].[CATEGORY_NAME]' />
          <map key='[CITY]' value='[BUSINESS].[CITY]' />
          <map key='[LATITUDE]' value='[BUSINESS].[LATITUDE]' />
          <map key='[LONGITUDE]' value='[BUSINESS].[LONGITUDE]' />
          <map key='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_ID]' value='[BUSINESS_NEIGHBORHOOD].[NEIGHBORHOOD_ID]' />
          <map key='[NEIGHBORHOOD_NAME]' value='[NEIGHBORHOOD].[NEIGHBORHOOD_NAME]' />
          <map key='[REVIEW_COUNT]' value='[BUSINESS].[REVIEW_COUNT]' />
          <map key='[STARS]' value='[BUSINESS].[STARS]' />
          <map key='[STATE]' value='[BUSINESS].[STATE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_ID_STR]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_NAME]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>15</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[STARS]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>STARS</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>2</precision>
            <scale>1</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_OPEN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BUSINESS_OPEN]</local-name>
            <parent-name>[BUSINESS]</parent-name>
            <remote-alias>BUSINESS_OPEN</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (ATTRIBUTE_BUSINESS)]</local-name>
            <parent-name>[ATTRIBUTE_BUSINESS]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ATTRIBUTE_ID (ATTRIBUTE)]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_ID</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_NAME]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_NAME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ATTRIBUTE_VALUE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ATTRIBUTE_VALUE]</local-name>
            <parent-name>[ATTRIBUTE]</parent-name>
            <remote-alias>ATTRIBUTE_VALUE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_CATEGORY)]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID]</local-name>
            <parent-name>[BUSINESS_CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CATEGORY_ID (CATEGORY)]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CATEGORY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CATEGORY_NAME]</local-name>
            <parent-name>[CATEGORY]</parent-name>
            <remote-alias>CATEGORY_NAME</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BUSINESS_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>BUSINESS_ID</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID]</local-name>
            <parent-name>[BUSINESS_NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[NEIGHBORHOOD_ID (NEIGHBORHOOD)]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_ID</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NEIGHBORHOOD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[NEIGHBORHOOD_NAME]</local-name>
            <parent-name>[NEIGHBORHOOD]</parent-name>
            <remote-alias>NEIGHBORHOOD_NAME</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Attribute Id (Attribute)' datatype='real' name='[ATTRIBUTE_ID (ATTRIBUTE)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Attribute Id' datatype='real' name='[ATTRIBUTE_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Attribute Name' datatype='string' name='[ATTRIBUTE_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Attribute Value' datatype='string' name='[ATTRIBUTE_VALUE]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Business Id (Attribute Business)' datatype='real' name='[BUSINESS_ID (ATTRIBUTE_BUSINESS)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Category)' datatype='real' name='[BUSINESS_ID (BUSINESS_CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Business Id (Business Neighborhood)' datatype='real' name='[BUSINESS_ID (BUSINESS_NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Business Id' datatype='real' name='[BUSINESS_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Business Id Str' datatype='string' name='[BUSINESS_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Business Open' datatype='string' name='[BUSINESS_OPEN]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Category Id (Category)' datatype='real' name='[CATEGORY_ID (CATEGORY)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Category Id' datatype='real' name='[CATEGORY_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
      </column>
      <column caption='Elite' datatype='string' name='[Calculation_1091006220708935]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF ([Parameters].[Elite Year Parameter] = ATTR([oracle.41918.885422395800].[ELITE_YEAR])) Then&#10;    &quot;Yes&quot;&#10;Else&#10;    &quot;No&quot;&#10;End' scope-isolation='false' />
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id (Neighborhood)' datatype='real' name='[NEIGHBORHOOD_ID (NEIGHBORHOOD)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Neighborhood Id' datatype='real' name='[NEIGHBORHOOD_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
      </column>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[ATTRIBUTE_NAME]' derivation='None' name='[none:ATTRIBUTE_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='STATE, CITY'>
          <field>[STATE]</field>
          <field>[CITY]</field>
          <field>[NEIGHBORHOOD_NAME]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.335175' measure-ordering='alphabetic' measure-percentage='0.325967' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ATTRIBUTE_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Coat Check&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Good For latenight&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Open 24 Hours&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Accepts Credit Cards&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Delivery&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hair Types Specialized In africanamerican&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Outdoor Seating&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ambience casual&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dietary Restrictions kosher&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hair Types Specialized In extensions&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Parking valet&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;By Appointment Only&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Good For dinner&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Music live&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Takes Reservations&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ambience touristy&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Good For breakfast&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Music background_music&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Payment Types visa&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ambience intimate&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dogs Allowed&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Happy Hour&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Payment Types discover&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Ambience classy&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Dietary Restrictions soy-free&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hair Types Specialized In kids&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Parking validated&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Corkage&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Good For lunch&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Order at Counter&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Accepts Insurance&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Dietary Restrictions dairy-free&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hair Types Specialized In asian&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Parking garage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;BYOB/Corkage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Good For Kids&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Music video&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Wheelchair Accessible&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ambience trendy&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Good For brunch&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Music dj&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Price Range&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Ambience romantic&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Drive-Thru&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Has TV&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Payment Types mastercard&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;BYOB&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Good For Groups&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Music playlist&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Waiter Service&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ambience divey&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dietary Restrictions vegan&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hair Types Specialized In perms&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Payment Types amex&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Caters&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Good for Kids&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Noise Level&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Wi-Fi&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ambience upscale&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Good For Dancing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Music jukebox&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Smoking&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Attire&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Good For dessert&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Music karaoke&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Take-out&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ages Allowed&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Dietary Restrictions gluten-free&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hair Types Specialized In coloring&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Parking lot&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ambience hipster&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dietary Restrictions vegetarian&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hair Types Specialized In straightperms&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Payment Types cash_only&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Alcohol&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dietary Restrictions halal&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hair Types Specialized In curly&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Parking street&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;EDH&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;XGL&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;NTH&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;MLN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.41914.754624965300'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.41915.481211979200'>
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
      </column>
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.41915.474954919000' target='oracle.41914.754624965300'>
      <column-mapping>
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.41915.481211979200' target='oracle.41914.754624965300'>
      <column-mapping>
        <map key='[oracle.41915.481211979200].[none:STATE:nk]' value='[oracle.41914.754624965300].[none:STATE:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Other Categories By Type' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Category Name' />
        <param name='target' value='Other Categories By Type' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Category Name' />
        <param name='target' value='Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Athletics By Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Popular Sports By State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Archery&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bowling&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Boxing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Climbing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cycling Classes&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Dance Studios&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Disc Golf&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Fencing Clubs&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Fishing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Hiking&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Mountain Biking&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Paddleboarding&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Paintball&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Pilates&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Rafting/Kayaking&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Rock Climbing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Scuba Diving&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Skate Parks&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Ski Resorts&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Skiing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Skydiving&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Soccer&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Surfing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Swimming Pools&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Tennis&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Tubing&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Yoga&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CATEGORY_NAME:nk]' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Archery&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter from='&quot;ELN&quot;' function='range' level='[none:STATE:nk]' to='&quot;SCB&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;XGL&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='692' />
            <format attr='height' field='[oracle.41914.754624965300].[none:STATE:nk]' value='243' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41914.754624965300].[avg:STARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#b4c2bf</color>
                <color>#9fbbb5</color>
                <color>#8cb4ab</color>
                <color>#79ada2</color>
                <color>#68a698</color>
                <color>#579e8f</color>
                <color>#489786</color>
                <color>#3a907d</color>
                <color>#2d8975</color>
                <color>#21826d</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' />
              <color column='[oracle.41914.754624965300].[avg:STARS:qk]' />
              <text column='[oracle.41914.754624965300].[none:STATE:nk]' />
              <text column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[none:STATE:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Counts By Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter count='50' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([REVIEW_COUNT])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter from='&quot;ATV Rentals/Tours&quot;' function='range' level='[none:CATEGORY_NAME:nk]' to='&quot;Resorts&quot;' />
                  <groupfilter from='&quot;Retirement Homes&quot;' function='range' level='[none:CATEGORY_NAME:nk]' to='&quot;Zoos&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' direction='DESC' using='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]'>
          </sort>
          <filter class='quantitative' column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' included-values='all'>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]</rows>
        <cols>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab and Heirarchies'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS+ (C##CS347_JAB5948)' name='oracle.41918.842183125000' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.842183125000'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
            </column>
            <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REVIEW_COUNT]' derivation='Count' name='[cnt:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[NEIGHBORHOOD_NAME]' derivation='None' name='[none:NEIGHBORHOOD_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:CITY:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Ahwatukee&quot;' function='range' level='[none:CITY:nk]' to='&quot;Buckeye&quot;' />
              <groupfilter from='&quot;Cambridge&quot;' function='range' level='[none:CITY:nk]' to='&quot;El Mirage&quot;' />
              <groupfilter from='&quot;Fitchburg&quot;' function='range' level='[none:CITY:nk]' to='&quot;Goodyear&quot;' />
              <groupfilter from='&quot;Guadalupe&quot;' function='range' level='[none:CITY:nk]' to='&quot;Las Vegas&quot;' />
              <groupfilter from='&quot;Lasswade&quot;' function='range' level='[none:CITY:nk]' to='&quot;Musselburgh&quot;' />
              <groupfilter from='&quot;NELLIS AFB&quot;' function='range' level='[none:CITY:nk]' to='&quot;Newington&quot;' />
              <groupfilter from='&quot;North Queensferry&quot;' function='range' level='[none:CITY:nk]' to='&quot;Old Town&quot;' />
              <groupfilter from='&quot;Paradise Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;South Gyle&quot;' />
              <groupfilter function='member' level='[none:CITY:nk]' member='&quot;South Queensferry&quot;' />
              <groupfilter from='&quot;St Clements&quot;' function='range' level='[none:CITY:nk]' to='&quot;Straiton&quot;' />
              <groupfilter from='&quot;Summerlin South&quot;' function='range' level='[none:CITY:nk]' to='&quot;Sun Prairie&quot;' />
              <groupfilter from='&quot;Sunrise Manor&quot;' function='range' level='[none:CITY:nk]' to='&quot;Victoria Park&quot;' />
              <groupfilter from='&quot;W Spring Valley&quot;' function='range' level='[none:CITY:nk]' to='&quot;chandler&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41918.842183125000].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;EDH&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41918.842183125000].[none:CITY:nk]</column>
            <column>[oracle.41918.842183125000].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[oracle.41918.842183125000].[cnt:REVIEW_COUNT:qk]' value='15' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]' value='18' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41918.842183125000].[avg:STARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#c0bdc5</color>
                <color>#b6b1c0</color>
                <color>#ada6bb</color>
                <color>#a49ab7</color>
                <color>#9b8fb2</color>
                <color>#9285ad</color>
                <color>#8a7ba9</color>
                <color>#8271a4</color>
                <color>#7a689f</color>
                <color>#735f9b</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41918.842183125000].[avg:STARS:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.41918.842183125000].[none:STATE:nk] / ([oracle.41918.842183125000].[none:CITY:nk] / [oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]))</rows>
        <cols>[oracle.41918.842183125000].[cnt:REVIEW_COUNT:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Foods By Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;African&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;American (New)&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Arabian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Argentine&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Asian Fusion&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bagels&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bakeries&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bangladeshi&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Barbeque&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Belgian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bistros&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Brazilian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Breakfast &amp; Brunch&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Burgers&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cambodian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cantonese&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Caribbean&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cheesesteaks&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Chicken Wings&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Colombian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Comfort Food&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Cuban&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Czech&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Delis&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Dominican&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Egyptian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Ethiopian&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Ethnic Food&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Fast Food&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:STATE:nk]'>
            <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='700' />
            <format attr='height' field='[oracle.41914.754624965300].[none:STATE:nk]' value='295' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41914.754624965300].[avg:STARS:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#bdbcc5</color>
                <color>#b2aec0</color>
                <color>#a6a1bc</color>
                <color>#9b94b7</color>
                <color>#9188b3</color>
                <color>#867cae</color>
                <color>#7c71a9</color>
                <color>#7366a5</color>
                <color>#695ca0</color>
                <color>#61529c</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' />
              <color column='[oracle.41914.754624965300].[avg:STARS:qk]' />
              <text column='[oracle.41914.754624965300].[none:STATE:nk]' />
              <text column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[none:STATE:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Map By Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Hotels&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Nightlife&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Restaurants&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LONGITUDE:qk]' field-type='quantitative' max='-12798375.638578579' min='-12843141.134939671' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LATITUDE:qk]' field-type='quantitative' max='4333983.1384547707' min='4302837.9756721035' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_0' value='none' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
              <lod column='[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[avg:LATITUDE:qk]</rows>
        <cols>[oracle.41914.754624965300].[avg:LONGITUDE:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run bold='true'>This is the Vegas Strip</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[oracle.41914.754624965300].[avg:LONGITUDE:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[oracle.41914.754624965300].[avg:LATITUDE:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[oracle.41914.754624965300].[avg:LATITUDE:qk]</field>
                      <field>[oracle.41914.754624965300].[avg:LONGITUDE:qk]</field>
                      <field>[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]</field>
                      <field>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>36.131352</value>
                    <value>-115.158799</value>
                    <value>&quot;Clarion Hotel and Casino Near Las Vegas Strip&quot;</value>
                    <value>&quot;Hotels&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='27' y='-113' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Map By Neighborhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Business Name' datatype='string' name='[BUSINESS_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
            </column>
            <column caption='Neighborhood Name' datatype='string' name='[NEIGHBORHOOD_NAME]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BUSINESS_NAME]' derivation='None' name='[none:BUSINESS_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[NEIGHBORHOOD_NAME]' derivation='None' name='[none:NEIGHBORHOOD_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Hotels&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Nightlife&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Restaurants&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LONGITUDE:qk]' field-type='quantitative' max='-12800759.259663519' min='-12840922.061531108' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[oracle.41914.754624965300].[avg:LATITUDE:qk]' field-type='quantitative' max='4331026.924064558' min='4299999.4028371088' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' />
              <lod column='[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[avg:LATITUDE:qk]</rows>
        <cols>[oracle.41914.754624965300].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Other Categories By Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='BUSINESS_CATEGORY+ (C##CS347_JAB5948)' name='oracle.41914.754624965300' />
          </datasources>
          <datasource-dependencies datasource='oracle.41914.754624965300'>
            <column caption='Category Name' datatype='string' name='[CATEGORY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column caption='Stars' datatype='real' name='[STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STARS]' derivation='Avg' name='[avg:STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CATEGORY_NAME]' derivation='None' name='[none:CATEGORY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[REVIEW_COUNT]' derivation='Sum' name='[sum:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Adult&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Adult Entertainment&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Aquariums&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Arcades&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Bars&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Beauty &amp; Spas&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Dance Clubs&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Festivals&quot;' />
              <groupfilter function='member' level='[none:CATEGORY_NAME:nk]' member='&quot;Gyms&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41914.754624965300].[none:STATE:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;CA&quot;' />
              <groupfilter from='&quot;FIF&quot;' function='range' level='[none:STATE:nk]' to='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;SCB&quot;' />
              <groupfilter function='member' level='[none:STATE:nk]' member='&quot;XGL&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</column>
            <column>[oracle.41914.754624965300].[none:STATE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='703' />
            <format attr='height' field='[oracle.41914.754624965300].[none:STATE:nk]' value='287' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.41914.754624965300].[avg:STARS:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#c8b7b8</color>
                <color>#c6a4a7</color>
                <color>#c49296</color>
                <color>#c28085</color>
                <color>#c06f75</color>
                <color>#be5e65</color>
                <color>#bc4d56</color>
                <color>#ba3c46</color>
                <color>#b82c37</color>
                <color>#b61d29</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[oracle.41914.754624965300].[sum:REVIEW_COUNT:qk]' />
              <color column='[oracle.41914.754624965300].[avg:STARS:qk]' />
              <text column='[oracle.41914.754624965300].[none:STATE:nk]' />
              <text column='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41914.754624965300].[none:STATE:nk]</rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='FIN_COMPLAINT (C##CS347_ACC2634)' name='oracle.41915.481211979200' />
          </datasources>
          <datasource-dependencies datasource='oracle.41915.481211979200'>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
            </column>
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[oracle.41915.481211979200].[none:STATE:nk]</rows>
        <cols>[oracle.41915.481211979200].[none:STATE:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard'>
      <style>
      </style>
      <size maxheight='1200' maxwidth='1000' minheight='1200' minwidth='1000' />
      <zones>
        <zone h='27167' id='1' name='Athletics By Type' show-title='true' w='90400' x='500' y='1083'>
        </zone>
        <zone h='10583' id='6' name='Athletics By Type' param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' values='relevant' w='6100' x='80600' y='12917'>
        </zone>
        <zone h='29417' id='7' name='Foods By Type' show-title='true' w='97300' x='600' y='25833'>
        </zone>
        <zone h='6333' id='13' name='Foods By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' w='14000' x='79900' y='34250'>
        </zone>
        <zone h='6250' id='14' name='Athletics By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' w='14000' x='79500' y='7750'>
        </zone>
        <zone h='30667' id='15' name='Other Categories By Type' show-title='true' w='85600' x='500' y='54667'>
        </zone>
        <zone h='4167' id='16' name='Other Categories By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' w='14000' x='83200' y='66500'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style>
      </style>
      <size maxheight='1400' maxwidth='1000' minheight='1400' minwidth='1000' />
      <zones>
        <zone h='37714' id='1' name='Map By Neighborhood' show-title='true' w='76800' x='1600' y='857'>
        </zone>
        <zone h='31643' id='7' name='Map By Neighborhood' pane-specification-id='0' param='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' type='color' w='16300' x='79600' y='3000'>
        </zone>
        <zone h='32286' id='8' name='Crosstab and Heirarchies' show-title='true' w='76200' x='1100' y='38714'>
        </zone>
        <zone h='12286' id='13' name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' w='16000' x='79200' y='58500'>
        </zone>
        <zone h='9429' id='14' name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' w='15400' x='79400' y='47643'>
        </zone>
        <zone h='6286' id='15' name='Crosstab and Heirarchies' pane-specification-id='0' param='[oracle.41918.842183125000].[avg:STARS:qk]' type='color' w='14000' x='79800' y='41429'>
        </zone>
        <zone h='26429' id='16' name='Map By Category' show-title='true' w='49400' x='900' y='71643'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows show-side-pane='false'>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard'>
      <zones>
        <zone name='Athletics By Type' param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' values='relevant' />
        <zone name='Foods By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
        <zone name='Athletics By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
        <zone name='Other Categories By Type' pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 2'>
      <zones>
        <zone name='Map By Neighborhood'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
        </zone>
        <zone name='Map By Neighborhood' pane-specification-id='0' param='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' type='color' />
        <zone name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' values='relevant' />
        <zone name='Crosstab and Heirarchies' param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' values='relevant' />
        <zone name='Crosstab and Heirarchies' pane-specification-id='0' param='[oracle.41918.842183125000].[avg:STARS:qk]' type='color' />
        <zone name='Map By Category'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Counts By Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]</field>
          <field>[oracle.41914.754624965300].[none:CITY:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Athletics By Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
            <card param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[avg:STARS:qk]</field>
          <field>[oracle.41914.754624965300].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Other Categories By Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
            <card param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[avg:STARS:qk]</field>
          <field>[oracle.41914.754624965300].[none:CITY:nk]</field>
          <field>[oracle.41914.754624965300].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map By Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Map By Neighborhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[none:BUSINESS_NAME:nk]</field>
          <field>[oracle.41914.754624965300].[none:NEIGHBORHOOD_NAME:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Foods By Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41914.754624965300].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41914.754624965300].[none:CATEGORY_NAME:nk]' type='filter' />
            <card param='[oracle.41914.754624965300].[none:STATE:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41914.754624965300].[avg:STARS:qk]</field>
          <field>[oracle.41914.754624965300].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41915.481211979200].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Crosstab and Heirarchies'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41918.842183125000].[avg:STARS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.41918.842183125000].[none:CITY:nk]' type='filter' values='relevant' />
            <card param='[oracle.41918.842183125000].[none:STATE:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.842183125000].[avg:STARS:qk]</field>
          <field>[oracle.41918.842183125000].[none:CATEGORY_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:CITY:nk]</field>
          <field>[oracle.41918.842183125000].[none:NEIGHBORHOOD_NAME:nk]</field>
          <field>[oracle.41918.842183125000].[none:STATE:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Counts By Category' width='192'>
      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
      Np3lXZ4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Athletics By Type' width='192'>
      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
      Bz6b38YcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Other Categories By Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAF1UlEQVR4nO3dS29UdQCG8XfaTqe0ZXqhtZMitICVhMqlBFioIRFIYIOXCCt3LlwYF34C
      /Qa61cSoGBMkJAYhJBIhEbByqQgWEeRWwKEtl1I60xl6melxZaJihATaw5z3+S1PZvEmM8+Z
      +Z/NxIIgCASYKgt7ABAmAoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoC1in9fKBaLKhQKYWwBZtx9ARQK
      BeXz+TC2PLJMJqNkMhn2DJSQ+wJIJBJKJBJhbHlk4+PjamhoCHsGSsh9AUTB6d5e3UlfD3sG
      SkAkAxjL5RX/oz/sGSgBPAWCtUgHcO7Xbr3z4Ue6lh1X+sxhvffZTr3/yZfKFqVg8q4++PxT
      /XKzNA/8eDwiHUBhoqBMrl9fHOjWeLGgqoZmtVaO6ujVYaUv/aZsvEWLm6rDnokQRfIM8Jdi
      IC1btV7q+0kHy9pVVtGmdV0LtOPsaY1O/K4VKzepKtK3ADxI5N/+8sqk3t7yir47uE+jxSk9
      3b5KE33HdKhfWj0vFfY8hCzS3wB19Y1aGK/WrKYFenfr67oU1Kuqtk4blncqXbFQLTXxsCci
      ZLEo/Uvk4OCgUqmUeo4c1WTvmbDnoARE/icQ8H8i/RNoeGhAx89d0HggNTbN15qONlWWx8Ke
      hSdIpANIXz2vH/qGtem5Vu3es0NPvfmWZk+O6ubomJqbWlVVzGogc091tUmNZIZVUTVbC1tb
      FKcRG5EOQDHp9tANnbqU1x0lNHLzur46dESL59dq58mkOgtX1H03rvbZcY0lklImq61b3tDi
      Og7HLiJ9BggCqaW1TS8uW6lFyYJ6h8bUXFOmy4O3lMllda9sll5d95o2dy1RbuCy8hUJxSYn
      wp6NGRTpAMokZYdv6EL6mm7nJlXMDet8tkzPNM9RNpfX+OSUYprSlYGLSnWs0KzRW0qPjIc9
      GzMo0o9Bc6N3dXnghgqBVFmV1IKmpPrSV5QP4qqurlV9XKqua1JlYVRnr6UVr0qqo22+qisi
      fV/A30T6DFBTW6+lHfX/uNb5bOd/vLJRqzobZ2YUnijc6mCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCN
      AGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGCNAGDt
      gQFcPdejvd+f0pSkkwe/Vc+Jbu06cEJTkob7L2r/vkPKF6d/KDAdHhjA9Us/a/u2j3X4t36d
      +XG/BodG1LN7u/pGJtXbvVfH0jkl+B5BiXqIj26g2XVx7dn1te6MxTSntV1t82p0oue0TvRc
      1wtrlqg8Nv1DgenwEAHEtPylzXp5UaCjZ2+rLFGnjevX6vg325Rt7tKKRa3TvxKYJhUPesHc
      RV2Kx1JavXitJsr3qrUhqbltz2vzxiE1LN2g+ur4TOwEpkUsCIIg7BGPy+DgoFKplHqOHNVk
      75mw56AEcHyFNQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKANQKA
      NQKANQKANQKANQKANQKANQKANQKAtYqwB0yHIBZTpnZW2DNQAv4EG9JI+nvcXTsAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map By Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map By Neighborhood' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Foods By Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab and Heirarchies' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
