<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.0819.2015                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.3'>
      <aliases enabled='yes' />
      <column caption='Elite Year Parameter' datatype='string' name='[Elite Year Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;2014&quot;'>
        <calculation class='tableau' formula='&quot;2014&quot;' />
        <members>
          <member value='&quot;2005&quot;' />
          <member value='&quot;2006&quot;' />
          <member value='&quot;2007&quot;' />
          <member value='&quot;2008&quot;' />
          <member value='&quot;2009&quot;' />
          <member value='&quot;2010&quot;' />
          <member value='&quot;2011&quot;' />
          <member value='&quot;2012&quot;' />
          <member value='&quot;2013&quot;' />
          <member value='&quot;2014&quot;' />
        </members>
      </column>
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Elite Year Parameter]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;2009&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;2005&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;2007&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;2012&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;2008&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;2011&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;2010&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;2013&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2006&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
    </datasource>
    <datasource caption='YELPER+ (C##CS347_JAB5948)' inline='true' name='oracle.41918.941549953700' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS347_JAB5948' server='128.83.138.158' service='orcl' username='C##cs347_jab5948'>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[ELITE_YEAR_YELPER].[ELITE_YEAR_ID]'>
              </expression>
              <expression op='[ELITE_YEAR].[ELITE_YEAR_ID]'>
              </expression>
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[YELPER].[YELPER_ID]'>
                </expression>
                <expression op='[ELITE_YEAR_YELPER].[YELPER_ID]'>
                </expression>
              </expression>
            </clause>
            <relation name='YELPER' table='[C##CS347_JAB5948].[YELPER]' type='table' />
            <relation name='ELITE_YEAR_YELPER' table='[C##CS347_JAB5948].[ELITE_YEAR_YELPER]' type='table' />
          </relation>
          <relation name='ELITE_YEAR' table='[C##CS347_JAB5948].[ELITE_YEAR]' type='table' />
        </relation>
        <cols>
          <map key='[AVERAGE_STARS]' value='[YELPER].[AVERAGE_STARS]' />
          <map key='[ELITE_YEAR]' value='[ELITE_YEAR].[ELITE_YEAR]' />
          <map key='[ELITE_YEAR_ID (ELITE_YEAR)]' value='[ELITE_YEAR].[ELITE_YEAR_ID]' />
          <map key='[ELITE_YEAR_ID]' value='[ELITE_YEAR_YELPER].[ELITE_YEAR_ID]' />
          <map key='[FANS]' value='[YELPER].[FANS]' />
          <map key='[REVIEW_COUNT]' value='[YELPER].[REVIEW_COUNT]' />
          <map key='[YELPER_ID (ELITE_YEAR_YELPER)]' value='[ELITE_YEAR_YELPER].[YELPER_ID]' />
          <map key='[YELPER_ID]' value='[YELPER].[YELPER_ID]' />
          <map key='[YELPER_ID_STR]' value='[YELPER].[YELPER_ID_STR]' />
          <map key='[YELPER_NAME]' value='[YELPER].[YELPER_NAME]' />
          <map key='[YELPING_SINCE]' value='[YELPER].[YELPING_SINCE]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YELPER_ID_STR]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_ID_STR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>30</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[YELPER_NAME]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPER_NAME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REVIEW_COUNT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[REVIEW_COUNT]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>REVIEW_COUNT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AVERAGE_STARS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AVERAGE_STARS]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>AVERAGE_STARS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>18</precision>
            <scale>17</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPING_SINCE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[YELPING_SINCE]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>YELPING_SINCE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FANS</remote-name>
            <remote-type>131</remote-type>
            <local-name>[FANS]</local-name>
            <parent-name>[YELPER]</parent-name>
            <remote-alias>FANS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ELITE_YEAR_ID]</local-name>
            <parent-name>[ELITE_YEAR_YELPER]</parent-name>
            <remote-alias>ELITE_YEAR_ID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YELPER_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[YELPER_ID (ELITE_YEAR_YELPER)]</local-name>
            <parent-name>[ELITE_YEAR_YELPER]</parent-name>
            <remote-alias>YELPER_ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ELITE_YEAR_ID (ELITE_YEAR)]</local-name>
            <parent-name>[ELITE_YEAR]</parent-name>
            <remote-alias>ELITE_YEAR_ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ELITE_YEAR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ELITE_YEAR]</local-name>
            <parent-name>[ELITE_YEAR]</parent-name>
            <remote-alias>ELITE_YEAR</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=178,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Stars' datatype='real' name='[AVERAGE_STARS]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Average Stars (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-1' formula='[AVERAGE_STARS]' peg='0' size='0.5' />
      </column>
      <column caption='Elite' datatype='string' name='[Calculation_8991006224407329]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If ([Parameters].[Elite Year Parameter] = [ELITE_YEAR]) Then&#10;    &quot;yes&quot;&#10;Else&#10;    &quot;no&quot;&#10;End' scope-isolation='false' />
      </column>
      <column caption='Elite Year' datatype='string' name='[ELITE_YEAR]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Sum' caption='Elite Year Id (Elite Year)' datatype='real' name='[ELITE_YEAR_ID (ELITE_YEAR)]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Elite Year Id' datatype='real' name='[ELITE_YEAR_ID]' role='dimension' type='quantitative'>
      </column>
      <column caption='Fans' datatype='real' name='[FANS]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Review Count (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[REVIEW_COUNT]' peg='0' size='25' />
      </column>
      <column aggregation='Sum' caption='Yelper Id (Elite Year Yelper)' datatype='real' name='[YELPER_ID (ELITE_YEAR_YELPER)]' role='dimension' type='quantitative'>
      </column>
      <column caption='Yelper Id' datatype='real' name='[YELPER_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Yelper Id Str' datatype='string' name='[YELPER_ID_STR]' role='dimension' type='nominal'>
      </column>
      <column caption='Yelper Name' datatype='string' name='[YELPER_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Yelping Since' datatype='datetime' name='[YELPING_SINCE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[Calculation_8991006224407329]' derivation='None' name='[none:Calculation_8991006224407329:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Elite,Review Count (bin))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_8991006224407329:nk]' />
          <groupfilter function='level-members' level='[Review Count (bin)]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.482505' measure-ordering='alphabetic' measure-percentage='0.322284' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Elite Year Parameter' datatype='string' name='[Elite Year Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;2014&quot;'>
          <calculation class='tableau' formula='&quot;2014&quot;' />
          <members>
            <member value='&quot;2005&quot;' />
            <member value='&quot;2006&quot;' />
            <member value='&quot;2007&quot;' />
            <member value='&quot;2008&quot;' />
            <member value='&quot;2009&quot;' />
            <member value='&quot;2010&quot;' />
            <member value='&quot;2011&quot;' />
            <member value='&quot;2012&quot;' />
            <member value='&quot;2013&quot;' />
            <member value='&quot;2014&quot;' />
          </members>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Elite Users By Year Start'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41918.941549953700' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.941549953700'>
            <column caption='Elite' datatype='string' name='[Calculation_8991006224407329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If ([Parameters].[Elite Year Parameter] = [ELITE_YEAR]) Then&#10;    &quot;yes&quot;&#10;Else&#10;    &quot;no&quot;&#10;End' scope-isolation='false' />
            </column>
            <column caption='Yelper Id' datatype='real' name='[YELPER_ID]' role='dimension' type='ordinal'>
            </column>
            <column caption='Yelping Since' datatype='datetime' name='[YELPING_SINCE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[YELPER_ID]' derivation='CountD' name='[ctd:YELPER_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8991006224407329]' derivation='None' name='[none:Calculation_8991006224407329:nk]' pivot='key' type='nominal' />
            <column-instance column='[YELPER_ID]' derivation='CountD' name='[pcdf:ctd:YELPER_ID:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[YELPING_SINCE]' derivation='Year' name='[yr:YELPING_SINCE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.41918.941549953700].[pcdf:ctd:YELPER_ID:qk]' />
              <text column='[oracle.41918.941549953700].[ctd:YELPER_ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41918.941549953700].[yr:YELPING_SINCE:ok]</rows>
        <cols total='true'>[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Elite Users Review Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41918.941549953700' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.941549953700'>
            <column caption='Elite' datatype='string' name='[Calculation_8991006224407329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If ([Parameters].[Elite Year Parameter] = [ELITE_YEAR]) Then&#10;    &quot;yes&quot;&#10;Else&#10;    &quot;no&quot;&#10;End' scope-isolation='false' />
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Review Count (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[REVIEW_COUNT]' peg='0' size='25' />
            </column>
            <column caption='Yelper Id' datatype='real' name='[YELPER_ID]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[REVIEW_COUNT]' derivation='Count' name='[cnt:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8991006224407329]' derivation='None' name='[none:Calculation_8991006224407329:nk]' pivot='key' type='nominal' />
            <column-instance column='[YELPER_ID]' derivation='Count' name='[pcto:cnt:YELPER_ID:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.941549953700].[Exclusions (Elite,Review Count (bin))]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Calculation_8991006224407329:nk]' />
                <groupfilter function='level-members' level='[Review Count (bin)]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[Review Count (bin)]' member='0' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Calculation_8991006224407329:nk]' member='&quot;no&quot;' />
                    <groupfilter function='member' level='[none:Calculation_8991006224407329:nk]' member='&quot;yes&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Calculation_8991006224407329:nk]' />
                  <hierarchy name='[Review Count (bin)]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.41918.941549953700].[Review Count (bin)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Review Count (bin)]' member='0' />
              <groupfilter function='member' level='[Review Count (bin)]' member='1' />
              <groupfilter function='member' level='[Review Count (bin)]' member='2' />
              <groupfilter function='member' level='[Review Count (bin)]' member='3' />
              <groupfilter function='member' level='[Review Count (bin)]' member='4' />
              <groupfilter function='member' level='[Review Count (bin)]' member='5' />
              <groupfilter function='member' level='[Review Count (bin)]' member='6' />
              <groupfilter function='member' level='[Review Count (bin)]' member='7' />
              <groupfilter function='member' level='[Review Count (bin)]' member='8' />
              <groupfilter function='member' level='[Review Count (bin)]' member='9' />
              <groupfilter function='member' level='[Review Count (bin)]' member='10' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41918.941549953700].[Review Count (bin)]</column>
            <column>[oracle.41918.941549953700].[Exclusions (Elite,Review Count (bin))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.41918.941549953700].[Review Count (bin)]' value='73' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' />
              <text column='[oracle.41918.941549953700].[pcto:cnt:YELPER_ID:qk:3]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41918.941549953700].[cnt:REVIEW_COUNT:qk]</rows>
        <cols>[oracle.41918.941549953700].[Review Count (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Elite Users Stars'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41918.941549953700' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.941549953700'>
            <column caption='Average Stars' datatype='real' name='[AVERAGE_STARS]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Average Stars (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-1' formula='[AVERAGE_STARS]' peg='0' size='0.5' />
            </column>
            <column caption='Elite' datatype='string' name='[Calculation_8991006224407329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If ([Parameters].[Elite Year Parameter] = [ELITE_YEAR]) Then&#10;    &quot;yes&quot;&#10;Else&#10;    &quot;no&quot;&#10;End' scope-isolation='false' />
            </column>
            <column-instance column='[AVERAGE_STARS]' derivation='Count' name='[cnt:AVERAGE_STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8991006224407329]' derivation='None' name='[none:Calculation_8991006224407329:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.41918.941549953700].[cnt:AVERAGE_STARS:qk]</rows>
        <cols>[oracle.41918.941549953700].[Average Stars (bin)]</cols>
      </table>
    </worksheet>
    <worksheet name='Elite Users Stats'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41918.941549953700' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.941549953700'>
            <column caption='Average Stars' datatype='real' name='[AVERAGE_STARS]' role='measure' type='quantitative'>
            </column>
            <column caption='Elite' datatype='string' name='[Calculation_8991006224407329]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If ([Parameters].[Elite Year Parameter] = [ELITE_YEAR]) Then&#10;    &quot;yes&quot;&#10;Else&#10;    &quot;no&quot;&#10;End' scope-isolation='false' />
            </column>
            <column caption='Fans' datatype='real' name='[FANS]' role='measure' type='quantitative'>
            </column>
            <column caption='Review Count' datatype='real' name='[REVIEW_COUNT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AVERAGE_STARS]' derivation='None' name='[none:AVERAGE_STARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8991006224407329]' derivation='None' name='[none:Calculation_8991006224407329:nk]' pivot='key' type='nominal' />
            <column-instance column='[FANS]' derivation='None' name='[none:FANS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REVIEW_COUNT]' derivation='None' name='[none:REVIEW_COUNT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[oracle.41918.941549953700].[none:REVIEW_COUNT:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>4000.0</max>
          </filter>
          <slices>
            <column>[oracle.41918.941549953700].[none:REVIEW_COUNT:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' x-axis-name='[oracle.41918.941549953700].[none:FANS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' x-axis-name='[oracle.41918.941549953700].[none:REVIEW_COUNT:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.41918.941549953700].[none:Calculation_8991006224407329:nk] * [oracle.41918.941549953700].[none:AVERAGE_STARS:qk])</rows>
        <cols>([oracle.41918.941549953700].[none:FANS:qk] + [oracle.41918.941549953700].[none:REVIEW_COUNT:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Number of Elite Users Per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='YELPER+ (C##CS347_JAB5948)' name='oracle.41918.941549953700' />
          </datasources>
          <datasource-dependencies datasource='oracle.41918.941549953700'>
            <column caption='Elite Year' datatype='string' name='[ELITE_YEAR]' role='dimension' type='nominal'>
            </column>
            <column caption='Yelper Id' datatype='real' name='[YELPER_ID]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[YELPER_ID]' derivation='Count' name='[cnt:YELPER_ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ELITE_YEAR]' derivation='None' name='[none:ELITE_YEAR:nk]' pivot='key' type='nominal' />
            <column-instance column='[YELPER_ID]' derivation='Count' name='[pcto:cnt:YELPER_ID:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.41918.941549953700].[none:ELITE_YEAR:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ELITE_YEAR:nk]' />
              <groupfilter function='member' level='[none:ELITE_YEAR:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.41918.941549953700].[none:ELITE_YEAR:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.41918.941549953700].[pcto:cnt:YELPER_ID:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Elite:&#9;</run>
                <run bold='true'>&lt;[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Count of Yelper Id:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.41918.941549953700].[none:ELITE_YEAR:nk]</rows>
        <cols>[oracle.41918.941549953700].[cnt:YELPER_ID:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Number of Elite Users Per Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Elite Year Parameter]</field>
          <field>[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]</field>
          <field>[oracle.41918.941549953700].[none:ELITE_YEAR:nk]</field>
          <field>[oracle.41918.941549953700].[none:ELITE_YEAR_ID:qk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID (ELITE_YEAR_YELPER):qk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Elite Users Stats'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Elite Year Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Elite Year Parameter]</field>
          <field>[oracle.41918.941549953700].[attr:Calculation_8991006224407329:nk]</field>
          <field>[oracle.41918.941549953700].[none:AVERAGE_STARS:qk]</field>
          <field>[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]</field>
          <field>[oracle.41918.941549953700].[none:ELITE_YEAR:nk]</field>
          <field>[oracle.41918.941549953700].[none:ELITE_YEAR_ID:qk]</field>
          <field>[oracle.41918.941549953700].[none:FANS:qk]</field>
          <field>[oracle.41918.941549953700].[none:REVIEW_COUNT:qk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID (ELITE_YEAR_YELPER):qk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Elite Users Stars'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Elite Year Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[Parameters].[Elite Year Parameter]</field>
          <field>[oracle.41918.941549953700].[attr:Calculation_8991006224407329:nk]</field>
          <field>[oracle.41918.941549953700].[none:AVERAGE_STARS:qk]</field>
          <field>[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]</field>
          <field>[oracle.41918.941549953700].[none:ELITE_YEAR:nk]</field>
          <field>[oracle.41918.941549953700].[none:ELITE_YEAR_ID:qk]</field>
          <field>[oracle.41918.941549953700].[none:FANS:qk]</field>
          <field>[oracle.41918.941549953700].[none:REVIEW_COUNT:qk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID (ELITE_YEAR_YELPER):qk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Elite Users By Year Start'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID:ok]</field>
          <field>[oracle.41918.941549953700].[yr:YELPING_SINCE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Elite Users Review Counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.41918.941549953700].[none:Calculation_8991006224407329:nk]</field>
          <field>[oracle.41918.941549953700].[none:YELPER_ID:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Number of Elite Users Per Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Elite Users Stats' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Elite Users Stars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Elite Users By Year Start' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Elite Users Review Counts' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
